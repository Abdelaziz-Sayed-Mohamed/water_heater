

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Jul 17 07:10:21 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,merge=1,delta=2
    66                           	psect	intentry,global,class=CODE,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2
    70                           	psect	text54,local,class=CODE,merge=1,delta=2
    71                           	psect	text55,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text56,local,class=CODE,merge=1,delta=2
    73                           	psect	functab,global,class=ENTRY,delta=2
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 2.20
    78                           ; Generated 12/02/2020 GMT
    79                           ; 
    80                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F877A Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0088                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0088                     	;# 
   211  0089                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  000E                     	;# 
   247  000F                     	;# 
   248  0010                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0014                     	;# 
   253  0015                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001D                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  0086                     	;# 
   269  0087                     	;# 
   270  0088                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009C                     	;# 
   342  009D                     	;# 
   343  009E                     	;# 
   344  009F                     	;# 
   345  010C                     	;# 
   346  010D                     	;# 
   347  010E                     	;# 
   348  010F                     	;# 
   349  018C                     	;# 
   350  018D                     	;# 
   351  0000                     	;# 
   352  0001                     	;# 
   353  0002                     	;# 
   354  0003                     	;# 
   355  0004                     	;# 
   356  0005                     	;# 
   357  0006                     	;# 
   358  0007                     	;# 
   359  0008                     	;# 
   360  0009                     	;# 
   361  000A                     	;# 
   362  000B                     	;# 
   363  000C                     	;# 
   364  000D                     	;# 
   365  000E                     	;# 
   366  000E                     	;# 
   367  000F                     	;# 
   368  0010                     	;# 
   369  0011                     	;# 
   370  0012                     	;# 
   371  0013                     	;# 
   372  0014                     	;# 
   373  0015                     	;# 
   374  0015                     	;# 
   375  0016                     	;# 
   376  0017                     	;# 
   377  0018                     	;# 
   378  0019                     	;# 
   379  001A                     	;# 
   380  001B                     	;# 
   381  001B                     	;# 
   382  001C                     	;# 
   383  001D                     	;# 
   384  001E                     	;# 
   385  001F                     	;# 
   386  0081                     	;# 
   387  0085                     	;# 
   388  0086                     	;# 
   389  0087                     	;# 
   390  0088                     	;# 
   391  0089                     	;# 
   392  008C                     	;# 
   393  008D                     	;# 
   394  008E                     	;# 
   395  0091                     	;# 
   396  0092                     	;# 
   397  0093                     	;# 
   398  0094                     	;# 
   399  0098                     	;# 
   400  0099                     	;# 
   401  009C                     	;# 
   402  009D                     	;# 
   403  009E                     	;# 
   404  009F                     	;# 
   405  010C                     	;# 
   406  010D                     	;# 
   407  010E                     	;# 
   408  010F                     	;# 
   409  018C                     	;# 
   410  018D                     	;# 
   411  0000                     	;# 
   412  0001                     	;# 
   413  0002                     	;# 
   414  0003                     	;# 
   415  0004                     	;# 
   416  0005                     	;# 
   417  0006                     	;# 
   418  0007                     	;# 
   419  0008                     	;# 
   420  0009                     	;# 
   421  000A                     	;# 
   422  000B                     	;# 
   423  000C                     	;# 
   424  000D                     	;# 
   425  000E                     	;# 
   426  000E                     	;# 
   427  000F                     	;# 
   428  0010                     	;# 
   429  0011                     	;# 
   430  0012                     	;# 
   431  0013                     	;# 
   432  0014                     	;# 
   433  0015                     	;# 
   434  0015                     	;# 
   435  0016                     	;# 
   436  0017                     	;# 
   437  0018                     	;# 
   438  0019                     	;# 
   439  001A                     	;# 
   440  001B                     	;# 
   441  001B                     	;# 
   442  001C                     	;# 
   443  001D                     	;# 
   444  001E                     	;# 
   445  001F                     	;# 
   446  0081                     	;# 
   447  0085                     	;# 
   448  0086                     	;# 
   449  0087                     	;# 
   450  0088                     	;# 
   451  0089                     	;# 
   452  008C                     	;# 
   453  008D                     	;# 
   454  008E                     	;# 
   455  0091                     	;# 
   456  0092                     	;# 
   457  0093                     	;# 
   458  0094                     	;# 
   459  0098                     	;# 
   460  0099                     	;# 
   461  009C                     	;# 
   462  009D                     	;# 
   463  009E                     	;# 
   464  009F                     	;# 
   465  010C                     	;# 
   466  010D                     	;# 
   467  010E                     	;# 
   468  010F                     	;# 
   469  018C                     	;# 
   470  018D                     	;# 
   471  0000                     	;# 
   472  0001                     	;# 
   473  0002                     	;# 
   474  0003                     	;# 
   475  0004                     	;# 
   476  0005                     	;# 
   477  0006                     	;# 
   478  0007                     	;# 
   479  0008                     	;# 
   480  0009                     	;# 
   481  000A                     	;# 
   482  000B                     	;# 
   483  000C                     	;# 
   484  000D                     	;# 
   485  000E                     	;# 
   486  000E                     	;# 
   487  000F                     	;# 
   488  0010                     	;# 
   489  0011                     	;# 
   490  0012                     	;# 
   491  0013                     	;# 
   492  0014                     	;# 
   493  0015                     	;# 
   494  0015                     	;# 
   495  0016                     	;# 
   496  0017                     	;# 
   497  0018                     	;# 
   498  0019                     	;# 
   499  001A                     	;# 
   500  001B                     	;# 
   501  001B                     	;# 
   502  001C                     	;# 
   503  001D                     	;# 
   504  001E                     	;# 
   505  001F                     	;# 
   506  0081                     	;# 
   507  0085                     	;# 
   508  0086                     	;# 
   509  0087                     	;# 
   510  0088                     	;# 
   511  0089                     	;# 
   512  008C                     	;# 
   513  008D                     	;# 
   514  008E                     	;# 
   515  0091                     	;# 
   516  0092                     	;# 
   517  0093                     	;# 
   518  0094                     	;# 
   519  0098                     	;# 
   520  0099                     	;# 
   521  009C                     	;# 
   522  009D                     	;# 
   523  009E                     	;# 
   524  009F                     	;# 
   525  010C                     	;# 
   526  010D                     	;# 
   527  010E                     	;# 
   528  010F                     	;# 
   529  018C                     	;# 
   530  018D                     	;# 
   531  0000                     	;# 
   532  0001                     	;# 
   533  0002                     	;# 
   534  0003                     	;# 
   535  0004                     	;# 
   536  0005                     	;# 
   537  0006                     	;# 
   538  0007                     	;# 
   539  0008                     	;# 
   540  0009                     	;# 
   541  000A                     	;# 
   542  000B                     	;# 
   543  000C                     	;# 
   544  000D                     	;# 
   545  000E                     	;# 
   546  000E                     	;# 
   547  000F                     	;# 
   548  0010                     	;# 
   549  0011                     	;# 
   550  0012                     	;# 
   551  0013                     	;# 
   552  0014                     	;# 
   553  0015                     	;# 
   554  0015                     	;# 
   555  0016                     	;# 
   556  0017                     	;# 
   557  0018                     	;# 
   558  0019                     	;# 
   559  001A                     	;# 
   560  001B                     	;# 
   561  001B                     	;# 
   562  001C                     	;# 
   563  001D                     	;# 
   564  001E                     	;# 
   565  001F                     	;# 
   566  0081                     	;# 
   567  0085                     	;# 
   568  0086                     	;# 
   569  0087                     	;# 
   570  0088                     	;# 
   571  0089                     	;# 
   572  008C                     	;# 
   573  008D                     	;# 
   574  008E                     	;# 
   575  0091                     	;# 
   576  0092                     	;# 
   577  0093                     	;# 
   578  0094                     	;# 
   579  0098                     	;# 
   580  0099                     	;# 
   581  009C                     	;# 
   582  009D                     	;# 
   583  009E                     	;# 
   584  009F                     	;# 
   585  010C                     	;# 
   586  010D                     	;# 
   587  010E                     	;# 
   588  010F                     	;# 
   589  018C                     	;# 
   590  018D                     	;# 
   591  0000                     	;# 
   592  0001                     	;# 
   593  0002                     	;# 
   594  0003                     	;# 
   595  0004                     	;# 
   596  0005                     	;# 
   597  0006                     	;# 
   598  0007                     	;# 
   599  0008                     	;# 
   600  0009                     	;# 
   601  000A                     	;# 
   602  000B                     	;# 
   603  000C                     	;# 
   604  000D                     	;# 
   605  000E                     	;# 
   606  000E                     	;# 
   607  000F                     	;# 
   608  0010                     	;# 
   609  0011                     	;# 
   610  0012                     	;# 
   611  0013                     	;# 
   612  0014                     	;# 
   613  0015                     	;# 
   614  0015                     	;# 
   615  0016                     	;# 
   616  0017                     	;# 
   617  0018                     	;# 
   618  0019                     	;# 
   619  001A                     	;# 
   620  001B                     	;# 
   621  001B                     	;# 
   622  001C                     	;# 
   623  001D                     	;# 
   624  001E                     	;# 
   625  001F                     	;# 
   626  0081                     	;# 
   627  0085                     	;# 
   628  0086                     	;# 
   629  0087                     	;# 
   630  0088                     	;# 
   631  0089                     	;# 
   632  008C                     	;# 
   633  008D                     	;# 
   634  008E                     	;# 
   635  0091                     	;# 
   636  0092                     	;# 
   637  0093                     	;# 
   638  0094                     	;# 
   639  0098                     	;# 
   640  0099                     	;# 
   641  009C                     	;# 
   642  009D                     	;# 
   643  009E                     	;# 
   644  009F                     	;# 
   645  010C                     	;# 
   646  010D                     	;# 
   647  010E                     	;# 
   648  010F                     	;# 
   649  018C                     	;# 
   650  018D                     	;# 
   651  0000                     	;# 
   652  0001                     	;# 
   653  0002                     	;# 
   654  0003                     	;# 
   655  0004                     	;# 
   656  0005                     	;# 
   657  0006                     	;# 
   658  0007                     	;# 
   659  0008                     	;# 
   660  0009                     	;# 
   661  000A                     	;# 
   662  000B                     	;# 
   663  000C                     	;# 
   664  000D                     	;# 
   665  000E                     	;# 
   666  000E                     	;# 
   667  000F                     	;# 
   668  0010                     	;# 
   669  0011                     	;# 
   670  0012                     	;# 
   671  0013                     	;# 
   672  0014                     	;# 
   673  0015                     	;# 
   674  0015                     	;# 
   675  0016                     	;# 
   676  0017                     	;# 
   677  0018                     	;# 
   678  0019                     	;# 
   679  001A                     	;# 
   680  001B                     	;# 
   681  001B                     	;# 
   682  001C                     	;# 
   683  001D                     	;# 
   684  001E                     	;# 
   685  001F                     	;# 
   686  0081                     	;# 
   687  0085                     	;# 
   688  0086                     	;# 
   689  0087                     	;# 
   690  0088                     	;# 
   691  0089                     	;# 
   692  008C                     	;# 
   693  008D                     	;# 
   694  008E                     	;# 
   695  0091                     	;# 
   696  0092                     	;# 
   697  0093                     	;# 
   698  0094                     	;# 
   699  0098                     	;# 
   700  0099                     	;# 
   701  009C                     	;# 
   702  009D                     	;# 
   703  009E                     	;# 
   704  009F                     	;# 
   705  010C                     	;# 
   706  010D                     	;# 
   707  010E                     	;# 
   708  010F                     	;# 
   709  018C                     	;# 
   710  018D                     	;# 
   711  0000                     	;# 
   712  0001                     	;# 
   713  0002                     	;# 
   714  0003                     	;# 
   715  0004                     	;# 
   716  0005                     	;# 
   717  0006                     	;# 
   718  0007                     	;# 
   719  0008                     	;# 
   720  0009                     	;# 
   721  000A                     	;# 
   722  000B                     	;# 
   723  000C                     	;# 
   724  000D                     	;# 
   725  000E                     	;# 
   726  000E                     	;# 
   727  000F                     	;# 
   728  0010                     	;# 
   729  0011                     	;# 
   730  0012                     	;# 
   731  0013                     	;# 
   732  0014                     	;# 
   733  0015                     	;# 
   734  0015                     	;# 
   735  0016                     	;# 
   736  0017                     	;# 
   737  0018                     	;# 
   738  0019                     	;# 
   739  001A                     	;# 
   740  001B                     	;# 
   741  001B                     	;# 
   742  001C                     	;# 
   743  001D                     	;# 
   744  001E                     	;# 
   745  001F                     	;# 
   746  0081                     	;# 
   747  0085                     	;# 
   748  0086                     	;# 
   749  0087                     	;# 
   750  0088                     	;# 
   751  0089                     	;# 
   752  008C                     	;# 
   753  008D                     	;# 
   754  008E                     	;# 
   755  0091                     	;# 
   756  0092                     	;# 
   757  0093                     	;# 
   758  0094                     	;# 
   759  0098                     	;# 
   760  0099                     	;# 
   761  009C                     	;# 
   762  009D                     	;# 
   763  009E                     	;# 
   764  009F                     	;# 
   765  010C                     	;# 
   766  010D                     	;# 
   767  010E                     	;# 
   768  010F                     	;# 
   769  018C                     	;# 
   770  018D                     	;# 
   771  0000                     	;# 
   772  0001                     	;# 
   773  0002                     	;# 
   774  0003                     	;# 
   775  0004                     	;# 
   776  0005                     	;# 
   777  0006                     	;# 
   778  0007                     	;# 
   779  0008                     	;# 
   780  0009                     	;# 
   781  000A                     	;# 
   782  000B                     	;# 
   783  000C                     	;# 
   784  000D                     	;# 
   785  000E                     	;# 
   786  000E                     	;# 
   787  000F                     	;# 
   788  0010                     	;# 
   789  0011                     	;# 
   790  0012                     	;# 
   791  0013                     	;# 
   792  0014                     	;# 
   793  0015                     	;# 
   794  0015                     	;# 
   795  0016                     	;# 
   796  0017                     	;# 
   797  0018                     	;# 
   798  0019                     	;# 
   799  001A                     	;# 
   800  001B                     	;# 
   801  001B                     	;# 
   802  001C                     	;# 
   803  001D                     	;# 
   804  001E                     	;# 
   805  001F                     	;# 
   806  0081                     	;# 
   807  0085                     	;# 
   808  0086                     	;# 
   809  0087                     	;# 
   810  0088                     	;# 
   811  0089                     	;# 
   812  008C                     	;# 
   813  008D                     	;# 
   814  008E                     	;# 
   815  0091                     	;# 
   816  0092                     	;# 
   817  0093                     	;# 
   818  0094                     	;# 
   819  0098                     	;# 
   820  0099                     	;# 
   821  009C                     	;# 
   822  009D                     	;# 
   823  009E                     	;# 
   824  009F                     	;# 
   825  010C                     	;# 
   826  010D                     	;# 
   827  010E                     	;# 
   828  010F                     	;# 
   829  018C                     	;# 
   830  018D                     	;# 
   831  0000                     	;# 
   832  0001                     	;# 
   833  0002                     	;# 
   834  0003                     	;# 
   835  0004                     	;# 
   836  0005                     	;# 
   837  0006                     	;# 
   838  0007                     	;# 
   839  0008                     	;# 
   840  0009                     	;# 
   841  000A                     	;# 
   842  000B                     	;# 
   843  000C                     	;# 
   844  000D                     	;# 
   845  000E                     	;# 
   846  000E                     	;# 
   847  000F                     	;# 
   848  0010                     	;# 
   849  0011                     	;# 
   850  0012                     	;# 
   851  0013                     	;# 
   852  0014                     	;# 
   853  0015                     	;# 
   854  0015                     	;# 
   855  0016                     	;# 
   856  0017                     	;# 
   857  0018                     	;# 
   858  0019                     	;# 
   859  001A                     	;# 
   860  001B                     	;# 
   861  001B                     	;# 
   862  001C                     	;# 
   863  001D                     	;# 
   864  001E                     	;# 
   865  001F                     	;# 
   866  0081                     	;# 
   867  0085                     	;# 
   868  0086                     	;# 
   869  0087                     	;# 
   870  0088                     	;# 
   871  0089                     	;# 
   872  008C                     	;# 
   873  008D                     	;# 
   874  008E                     	;# 
   875  0091                     	;# 
   876  0092                     	;# 
   877  0093                     	;# 
   878  0094                     	;# 
   879  0098                     	;# 
   880  0099                     	;# 
   881  009C                     	;# 
   882  009D                     	;# 
   883  009E                     	;# 
   884  009F                     	;# 
   885  010C                     	;# 
   886  010D                     	;# 
   887  010E                     	;# 
   888  010F                     	;# 
   889  018C                     	;# 
   890  018D                     	;# 
   891  0000                     	;# 
   892  0001                     	;# 
   893  0002                     	;# 
   894  0003                     	;# 
   895  0004                     	;# 
   896  0005                     	;# 
   897  0006                     	;# 
   898  0007                     	;# 
   899  0008                     	;# 
   900  0009                     	;# 
   901  000A                     	;# 
   902  000B                     	;# 
   903  000C                     	;# 
   904  000D                     	;# 
   905  000E                     	;# 
   906  000E                     	;# 
   907  000F                     	;# 
   908  0010                     	;# 
   909  0011                     	;# 
   910  0012                     	;# 
   911  0013                     	;# 
   912  0014                     	;# 
   913  0015                     	;# 
   914  0015                     	;# 
   915  0016                     	;# 
   916  0017                     	;# 
   917  0018                     	;# 
   918  0019                     	;# 
   919  001A                     	;# 
   920  001B                     	;# 
   921  001B                     	;# 
   922  001C                     	;# 
   923  001D                     	;# 
   924  001E                     	;# 
   925  001F                     	;# 
   926  0081                     	;# 
   927  0085                     	;# 
   928  0086                     	;# 
   929  0087                     	;# 
   930  0088                     	;# 
   931  0089                     	;# 
   932  008C                     	;# 
   933  008D                     	;# 
   934  008E                     	;# 
   935  0091                     	;# 
   936  0092                     	;# 
   937  0093                     	;# 
   938  0094                     	;# 
   939  0098                     	;# 
   940  0099                     	;# 
   941  009C                     	;# 
   942  009D                     	;# 
   943  009E                     	;# 
   944  009F                     	;# 
   945  010C                     	;# 
   946  010D                     	;# 
   947  010E                     	;# 
   948  010F                     	;# 
   949  018C                     	;# 
   950  018D                     	;# 
   951  0000                     	;# 
   952  0001                     	;# 
   953  0002                     	;# 
   954  0003                     	;# 
   955  0004                     	;# 
   956  0005                     	;# 
   957  0006                     	;# 
   958  0007                     	;# 
   959  0008                     	;# 
   960  0009                     	;# 
   961  000A                     	;# 
   962  000B                     	;# 
   963  000C                     	;# 
   964  000D                     	;# 
   965  000E                     	;# 
   966  000E                     	;# 
   967  000F                     	;# 
   968  0010                     	;# 
   969  0011                     	;# 
   970  0012                     	;# 
   971  0013                     	;# 
   972  0014                     	;# 
   973  0015                     	;# 
   974  0015                     	;# 
   975  0016                     	;# 
   976  0017                     	;# 
   977  0018                     	;# 
   978  0019                     	;# 
   979  001A                     	;# 
   980  001B                     	;# 
   981  001B                     	;# 
   982  001C                     	;# 
   983  001D                     	;# 
   984  001E                     	;# 
   985  001F                     	;# 
   986  0081                     	;# 
   987  0085                     	;# 
   988  0086                     	;# 
   989  0087                     	;# 
   990  0088                     	;# 
   991  0089                     	;# 
   992  008C                     	;# 
   993  008D                     	;# 
   994  008E                     	;# 
   995  0091                     	;# 
   996  0092                     	;# 
   997  0093                     	;# 
   998  0094                     	;# 
   999  0098                     	;# 
  1000  0099                     	;# 
  1001  009C                     	;# 
  1002  009D                     	;# 
  1003  009E                     	;# 
  1004  009F                     	;# 
  1005  010C                     	;# 
  1006  010D                     	;# 
  1007  010E                     	;# 
  1008  010F                     	;# 
  1009  018C                     	;# 
  1010  018D                     	;# 
  1011  0000                     	;# 
  1012  0001                     	;# 
  1013  0002                     	;# 
  1014  0003                     	;# 
  1015  0004                     	;# 
  1016  0005                     	;# 
  1017  0006                     	;# 
  1018  0007                     	;# 
  1019  0008                     	;# 
  1020  0009                     	;# 
  1021  000A                     	;# 
  1022  000B                     	;# 
  1023  000C                     	;# 
  1024  000D                     	;# 
  1025  000E                     	;# 
  1026  000E                     	;# 
  1027  000F                     	;# 
  1028  0010                     	;# 
  1029  0011                     	;# 
  1030  0012                     	;# 
  1031  0013                     	;# 
  1032  0014                     	;# 
  1033  0015                     	;# 
  1034  0015                     	;# 
  1035  0016                     	;# 
  1036  0017                     	;# 
  1037  0018                     	;# 
  1038  0019                     	;# 
  1039  001A                     	;# 
  1040  001B                     	;# 
  1041  001B                     	;# 
  1042  001C                     	;# 
  1043  001D                     	;# 
  1044  001E                     	;# 
  1045  001F                     	;# 
  1046  0081                     	;# 
  1047  0085                     	;# 
  1048  0086                     	;# 
  1049  0087                     	;# 
  1050  0088                     	;# 
  1051  0089                     	;# 
  1052  008C                     	;# 
  1053  008D                     	;# 
  1054  008E                     	;# 
  1055  0091                     	;# 
  1056  0092                     	;# 
  1057  0093                     	;# 
  1058  0094                     	;# 
  1059  0098                     	;# 
  1060  0099                     	;# 
  1061  009C                     	;# 
  1062  009D                     	;# 
  1063  009E                     	;# 
  1064  009F                     	;# 
  1065  010C                     	;# 
  1066  010D                     	;# 
  1067  010E                     	;# 
  1068  010F                     	;# 
  1069  018C                     	;# 
  1070  018D                     	;# 
  1071                           
  1072                           	psect	idataBANK0
  1073  08CC                     __pidataBANK0:
  1074                           
  1075                           ;initializer for SSD_SelectDigit@Enable_Digit_Selector
  1076  08CC  3401               	retlw	1
  1077                           
  1078                           ;initializer for SSD_Blink@Counter
  1079  08CD  3401               	retlw	1
  1080                           
  1081                           ;initializer for LED_BLINKING@Counter
  1082  08CE  3401               	retlw	1
  1083                           
  1084                           ;initializer for _Average_Nvalues
  1085  08CF  340A               	retlw	10
  1086                           
  1087                           	psect	strings
  1088  0800                     __pstrings:
  1089  0800                     stringtab:
  1090  0800                     __stringtab:
  1091  0800                     stringcode:	
  1092                           ;	String table - string pointers are 1 byte each
  1093                           
  1094  0800                     stringdir:
  1095  0800  3008               	movlw	high stringdir
  1096  0801  008A               	movwf	10
  1097  0802  0804               	movf	4,w
  1098  0803  0A84               	incf	4,f
  1099  0804  0782               	addwf	2,f
  1100  0805                     __stringbase:
  1101  0805  3400               	retlw	0
  1102  0806                     __end_of__stringtab:
  1103  0806                     _Scheduler_Intitys:
  1104  0806  3404               	retlw	low (fp__Scheduler_Task1-fpbase)
  1105  0807  3414               	retlw	20
  1106  0808  3400               	retlw	0
  1107  0809  3400               	retlw	0
  1108  080A  3400               	retlw	0
  1109  080B  3407               	retlw	low (fp__Scheduler_Task2-fpbase)
  1110  080C  3464               	retlw	100
  1111  080D  3400               	retlw	0
  1112  080E  3400               	retlw	0
  1113  080F  3400               	retlw	0
  1114  0810  3401               	retlw	low (fp__Scheduler_Task3-fpbase)
  1115  0811  34F4               	retlw	244
  1116  0812  3401               	retlw	1
  1117  0813  3400               	retlw	0
  1118  0814  3400               	retlw	0
  1119  0815                     __end_of_Scheduler_Intitys:
  1120  0008                     _PORTD	set	8
  1121  0005                     _PORTA	set	5
  1122  0013                     _SSPBUF	set	19
  1123  0001                     _TMR0	set	1
  1124  0007                     _PORTC	set	7
  1125  0006                     _PORTB	set	6
  1126  000B                     _INTCONbits	set	11
  1127  001F                     _ADCON0bits	set	31
  1128  0063                     _SSPIF	set	99
  1129  00A5                     _SSPEN	set	165
  1130  00A3                     _SSPM3	set	163
  1131  00A2                     _SSPM2	set	162
  1132  00A1                     _SSPM1	set	161
  1133  00A0                     _SSPM0	set	160
  1134  0093                     _SSPADD	set	147
  1135  0081                     _OPTION_REGbits	set	129
  1136  0088                     _TRISD	set	136
  1137  0085                     _TRISA	set	133
  1138  0086                     _TRISB	set	134
  1139  0087                     _TRISC	set	135
  1140  009E                     _ADRESL	set	158
  1141  009F                     _ADCON1bits	set	159
  1142  048A                     _PEN	set	1162
  1143  048C                     _ACKEN	set	1164
  1144  048D                     _ACKDT	set	1165
  1145  04A0                     _BF	set	1184
  1146  048B                     _RCEN	set	1163
  1147  0488                     _SEN	set	1160
  1148  040E                     _INTEDG	set	1038
  1149                           
  1150                           	psect	cinit
  1151  0015                     start_initialization:	
  1152                           ; #config settings
  1153                           
  1154  0015                     __initialization:
  1155                           
  1156                           ; Initialize objects allocated to BANK0
  1157  0015  120A  158A  20CC  120A  118A  	fcall	__pidataBANK0	;fetch initializer
  1158  001A  00D6               	movwf	__pdataBANK0& (0+127)
  1159  001B  120A  158A  20CD  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
  1160  0020  00D7               	movwf	(__pdataBANK0+1)& (0+127)
  1161  0021  120A  158A  20CE  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
  1162  0026  00D8               	movwf	(__pdataBANK0+2)& (0+127)
  1163  0027  120A  158A  20CF  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
  1164  002C  00D9               	movwf	(__pdataBANK0+3)& (0+127)
  1165                           
  1166                           ; Clear objects allocated to BANK1
  1167  002D  1383               	bcf	3,7	;select IRP bank0
  1168  002E  30A0               	movlw	low __pbssBANK1
  1169  002F  0084               	movwf	4
  1170  0030  30D3               	movlw	low (__pbssBANK1+51)
  1171  0031  120A  158A  20EA  120A  118A  	fcall	clear_ram0
  1172                           
  1173                           ; Clear objects allocated to BANK0
  1174  0036  3045               	movlw	low __pbssBANK0
  1175  0037  0084               	movwf	4
  1176  0038  3056               	movlw	low (__pbssBANK0+17)
  1177  0039  120A  158A  20EA  120A  118A  	fcall	clear_ram0
  1178  003E                     end_of_initialization:	
  1179                           ;End of C runtime variable initialization code
  1180                           
  1181  003E                     __end_of__initialization:
  1182  003E  0183               	clrf	3
  1183  003F  120A  158A  2CA5   	ljmp	_main	;jump to C main() function
  1184                           
  1185                           	psect	bssBANK0
  1186  0045                     __pbssBANK0:
  1187  0045                     _Mode:
  1188  0045                     	ds	2
  1189  0047                     SSD_SelectDigit@Digit_2:
  1190  0047                     	ds	1
  1191  0048                     SSD_SelectDigit@Digit_1:
  1192  0048                     	ds	1
  1193  0049                     _Tempreture:
  1194  0049                     	ds	1
  1195  004A                     _SSD:
  1196  004A                     	ds	1
  1197  004B                     EEPROM_Read@Data:
  1198  004B                     	ds	1
  1199  004C                     _EEPROM_Data:
  1200  004C                     	ds	1
  1201  004D                     _Buttons:
  1202  004D                     	ds	1
  1203  004E                     _LED_Status:
  1204  004E                     	ds	1
  1205  004F                     _Enable_SSD:
  1206  004F                     	ds	1
  1207  0050                     _ADC_Info:
  1208  0050                     	ds	1
  1209  0051                     _Temperature:
  1210  0051                     	ds	5
  1211                           
  1212                           	psect	dataBANK0
  1213  0056                     __pdataBANK0:
  1214  0056                     SSD_SelectDigit@Enable_Digit_Selector:
  1215  0056                     	ds	1
  1216  0057                     SSD_Blink@Counter:
  1217  0057                     	ds	1
  1218  0058                     LED_BLINKING@Counter:
  1219  0058                     	ds	1
  1220  0059                     _Average_Nvalues:
  1221  0059                     	ds	1
  1222                           
  1223                           	psect	bssBANK1
  1224  00A0                     __pbssBANK1:
  1225  00A0                     _temb_val:
  1226  00A0                     	ds	40
  1227  00C8                     _Tick_Num:
  1228  00C8                     	ds	4
  1229  00CC                     _Avrage_buffer:
  1230  00CC                     	ds	4
  1231  00D0                     _Scheduler_ActivationFlags:
  1232  00D0                     	ds	3
  1233                           
  1234                           	psect	clrtext
  1235  08EA                     clear_ram0:	
  1236                           ;	Called with FSR containing the base address, and
  1237                           ;	W with the last address+1
  1238                           
  1239  08EA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1240  08EB                     clrloop0:
  1241  08EB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1242  08EC  0A84               	incf	4,f	;increment pointer
  1243  08ED  0604               	xorwf	4,w	;XOR with final address
  1244  08EE  1903               	btfsc	3,2	;have we reached the end yet?
  1245  08EF  3400               	retlw	0	;all done for this memory range, return
  1246  08F0  0604               	xorwf	4,w	;XOR again to restore value
  1247  08F1  28EB               	goto	clrloop0	;do the next byte
  1248                           
  1249                           	psect	cstackBANK3
  1250  0190                     __pcstackBANK3:
  1251  0190                     ?___fltol:
  1252  0190                     ___fltol@f1:	
  1253                           ; 4 bytes @ 0x0
  1254                           
  1255                           
  1256                           ; 4 bytes @ 0x0
  1257  0190                     	ds	4
  1258  0194                     ??___fltol:
  1259                           
  1260                           ; 1 bytes @ 0x4
  1261  0194                     	ds	4
  1262  0198                     ??_Temperature_Calc:
  1263                           
  1264                           ; 1 bytes @ 0x8
  1265  0198                     	ds	4
  1266  019C                     Scheduler_Start@IntityIndex:
  1267                           
  1268                           ; 1 bytes @ 0xC
  1269  019C                     	ds	1
  1270                           
  1271                           	psect	cstackBANK1
  1272  00D3                     __pcstackBANK1:
  1273  00D3                     ??_Average_Value:
  1274  00D3                     ??_Elements_MainFunction:	
  1275                           ; 1 bytes @ 0x0
  1276                           
  1277  00D3                     ?___flmul:	
  1278                           ; 1 bytes @ 0x0
  1279                           
  1280  00D3                     ___flmul@b:	
  1281                           ; 4 bytes @ 0x0
  1282                           
  1283                           
  1284                           ; 4 bytes @ 0x0
  1285  00D3                     	ds	4
  1286  00D7                     ___flmul@a:
  1287                           
  1288                           ; 4 bytes @ 0x4
  1289  00D7                     	ds	1
  1290  00D8                     Average_Value@Value:
  1291                           
  1292                           ; 1 bytes @ 0x5
  1293  00D8                     	ds	1
  1294  00D9                     Average_Value@index:
  1295                           
  1296                           ; 1 bytes @ 0x6
  1297  00D9                     	ds	2
  1298  00DB                     ??___flmul:
  1299                           
  1300                           ; 1 bytes @ 0x8
  1301  00DB                     	ds	5
  1302  00E0                     ___flmul@sign:
  1303                           
  1304                           ; 1 bytes @ 0xD
  1305  00E0                     	ds	1
  1306  00E1                     ___flmul@aexp:
  1307                           
  1308                           ; 1 bytes @ 0xE
  1309  00E1                     	ds	1
  1310  00E2                     ___flmul@grs:
  1311                           
  1312                           ; 4 bytes @ 0xF
  1313  00E2                     	ds	4
  1314  00E6                     ___flmul@bexp:
  1315                           
  1316                           ; 1 bytes @ 0x13
  1317  00E6                     	ds	1
  1318  00E7                     ___flmul@prod:
  1319                           
  1320                           ; 4 bytes @ 0x14
  1321  00E7                     	ds	4
  1322  00EB                     ___flmul@temp:
  1323                           
  1324                           ; 2 bytes @ 0x18
  1325  00EB                     	ds	2
  1326  00ED                     ___fltol@sign1:
  1327                           
  1328                           ; 1 bytes @ 0x1A
  1329  00ED                     	ds	1
  1330  00EE                     ___fltol@exp1:
  1331                           
  1332                           ; 1 bytes @ 0x1B
  1333  00EE                     	ds	1
  1334  00EF                     Temperature_Calc@ADC_VALUE:
  1335                           
  1336                           ; 1 bytes @ 0x1C
  1337  00EF                     	ds	1
  1338                           
  1339                           	psect	cstackCOMMON
  1340  0070                     __pcstackCOMMON:
  1341  0070                     ?_ADC_Value_Ready_CallBack:
  1342  0070                     ?_Temperature_Calc:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345  0070                     ?_GPIO_Init:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0070                     ?_I2c_Init:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0070                     ?_On_Off_Init:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0070                     ?_SSD_Init:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0070                     ?_Elements_Init:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0070                     ?_Mode_Init:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0070                     ?_Get_EEPROM_Data:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0070                     ?_Scheduler_Init:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0070                     ?_Timer0_Init:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372  0070                     ?_Scheduler_Start:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375  0070                     ?_Timer0_CallBack:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378  0070                     ?_Scheduler_Task1:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381  0070                     ?_Scheduler_Task2:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384  0070                     ?_Scheduler_Task3:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387  0070                     ?_SSD_MainFunction:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390  0070                     ?_Mode_MainFunction:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393  0070                     ?_Set_EEPROM_Data:	
  1394                           ; 1 bytes @ 0x0
  1395                           
  1396  0070                     ?_EEPROM_Read:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399  0070                     ?_SSD_SelectDisplay:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402  0070                     ?_SSD_SelectDigit:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405  0070                     ?_ADC_Init:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408  0070                     ?_ADC_Start_Conv:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411  0070                     ?_ADC_Conv_MainFunction:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0070                     ?_main:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0070                     ?_EXTI_On_Off_CallBack:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0070                     ??_EXTI_On_Off_CallBack:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423  0070                     ?_Buttons_MainFunction:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426  0070                     ?_LED_Control:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429  0070                     ?_Elements_MainFunction:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0070                     ?_myISR:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435  0070                     ?_I2c_Start:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438  0070                     ?_I2c_Read:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441  0070                     ?_I2c_Send_NAck:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444  0070                     ?_I2c_Stop:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447  0070                     ?_I2c_Write:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450  0070                     ?_I2c_WaitAck:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453  0070                     ?i1___bmul:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456  0070                     i1___bmul@multiplicand:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459                           
  1460                           ; 1 bytes @ 0x0
  1461  0070                     	ds	1
  1462  0071                     ??i1___bmul:
  1463  0071                     i1___bmul@product:	
  1464                           ; 1 bytes @ 0x1
  1465                           
  1466                           
  1467                           ; 1 bytes @ 0x1
  1468  0071                     	ds	1
  1469  0072                     i1___bmul@multiplier:
  1470                           
  1471                           ; 1 bytes @ 0x2
  1472  0072                     	ds	1
  1473  0073                     ?i1___lldiv:
  1474  0073                     i1___lldiv@divisor:	
  1475                           ; 4 bytes @ 0x3
  1476                           
  1477                           
  1478                           ; 4 bytes @ 0x3
  1479  0073                     	ds	4
  1480  0077                     i1___lldiv@dividend:
  1481                           
  1482                           ; 4 bytes @ 0x7
  1483  0077                     	ds	4
  1484  007B                     ??i1___lldiv:
  1485                           
  1486                           ; 1 bytes @ 0xB
  1487  007B                     	ds	1
  1488  007C                     ??___llmod:
  1489                           
  1490                           ; 1 bytes @ 0xC
  1491  007C                     	ds	1
  1492  007D                     ___llmod@counter:
  1493                           
  1494                           ; 1 bytes @ 0xD
  1495  007D                     	ds	1
  1496  007E                     ??_Timer0_CallBack:
  1497  007E                     ??_Scheduler_ActivateTask:	
  1498                           ; 1 bytes @ 0xE
  1499                           
  1500                           
  1501                           	psect	cstackBANK0
  1502  0020                     __pcstackBANK0:	
  1503                           ; 1 bytes @ 0xE
  1504                           
  1505  0020                     i1___lldiv@quotient:
  1506                           
  1507                           ; 4 bytes @ 0x0
  1508  0020                     	ds	4
  1509  0024                     i1___lldiv@counter:
  1510                           
  1511                           ; 1 bytes @ 0x4
  1512  0024                     	ds	1
  1513  0025                     ?___llmod:
  1514  0025                     ___llmod@divisor:	
  1515                           ; 4 bytes @ 0x5
  1516                           
  1517                           
  1518                           ; 4 bytes @ 0x5
  1519  0025                     	ds	4
  1520  0029                     ___llmod@dividend:
  1521                           
  1522                           ; 4 bytes @ 0x9
  1523  0029                     	ds	4
  1524  002D                     ?_Scheduler_ActivateTask:
  1525  002D                     Scheduler_ActivateTask@SystemTick:	
  1526                           ; 1 bytes @ 0xD
  1527                           
  1528                           
  1529                           ; 4 bytes @ 0xD
  1530  002D                     	ds	4
  1531  0031                     Scheduler_ActivateTask@IntityIndex:
  1532                           
  1533                           ; 1 bytes @ 0x11
  1534  0031                     	ds	1
  1535  0032                     ??_myISR:
  1536                           
  1537                           ; 1 bytes @ 0x12
  1538  0032                     	ds	4
  1539  0036                     ??_GPIO_Init:
  1540  0036                     ??_I2c_Init:	
  1541                           ; 1 bytes @ 0x16
  1542                           
  1543  0036                     ??_On_Off_Init:	
  1544                           ; 1 bytes @ 0x16
  1545                           
  1546  0036                     ??_SSD_Init:	
  1547                           ; 1 bytes @ 0x16
  1548                           
  1549  0036                     ??_Elements_Init:	
  1550                           ; 1 bytes @ 0x16
  1551                           
  1552  0036                     ??_Mode_Init:	
  1553                           ; 1 bytes @ 0x16
  1554                           
  1555  0036                     ??_Timer0_Init:	
  1556                           ; 1 bytes @ 0x16
  1557                           
  1558  0036                     ?_memset:	
  1559                           ; 1 bytes @ 0x16
  1560                           
  1561  0036                     ??_ADC_Init:	
  1562                           ; 1 bytes @ 0x16
  1563                           
  1564  0036                     ??_ADC_Start_Conv:	
  1565                           ; 1 bytes @ 0x16
  1566                           
  1567  0036                     ??_Buttons_MainFunction:	
  1568                           ; 1 bytes @ 0x16
  1569                           
  1570  0036                     ??_I2c_Start:	
  1571                           ; 1 bytes @ 0x16
  1572                           
  1573  0036                     ??_I2c_Read:	
  1574                           ; 1 bytes @ 0x16
  1575                           
  1576  0036                     ??_I2c_Send_NAck:	
  1577                           ; 1 bytes @ 0x16
  1578                           
  1579  0036                     ??_I2c_Stop:	
  1580                           ; 1 bytes @ 0x16
  1581                           
  1582  0036                     ??_I2c_Write:	
  1583                           ; 1 bytes @ 0x16
  1584                           
  1585  0036                     ??_I2c_WaitAck:	
  1586                           ; 1 bytes @ 0x16
  1587                           
  1588  0036                     ?___bmul:	
  1589                           ; 1 bytes @ 0x16
  1590                           
  1591  0036                     ?__Umul8_16:	
  1592                           ; 1 bytes @ 0x16
  1593                           
  1594  0036                     ?___wmul:	
  1595                           ; 2 bytes @ 0x16
  1596                           
  1597  0036                     ?___awdiv:	
  1598                           ; 2 bytes @ 0x16
  1599                           
  1600  0036                     ?___awmod:	
  1601                           ; 2 bytes @ 0x16
  1602                           
  1603  0036                     ?___lwmod:	
  1604                           ; 2 bytes @ 0x16
  1605                           
  1606  0036                     ?___lldiv:	
  1607                           ; 2 bytes @ 0x16
  1608                           
  1609  0036                     ?___xxtofl:	
  1610                           ; 4 bytes @ 0x16
  1611                           
  1612  0036                     I2c_Read@data:	
  1613                           ; 4 bytes @ 0x16
  1614                           
  1615  0036                     I2c_Write@data:	
  1616                           ; 1 bytes @ 0x16
  1617                           
  1618  0036                     ___bmul@multiplicand:	
  1619                           ; 1 bytes @ 0x16
  1620                           
  1621  0036                     __Umul8_16@multiplicand:	
  1622                           ; 1 bytes @ 0x16
  1623                           
  1624  0036                     ___wmul@multiplier:	
  1625                           ; 1 bytes @ 0x16
  1626                           
  1627  0036                     ___awdiv@divisor:	
  1628                           ; 2 bytes @ 0x16
  1629                           
  1630  0036                     ___awmod@divisor:	
  1631                           ; 2 bytes @ 0x16
  1632                           
  1633  0036                     ___lwmod@divisor:	
  1634                           ; 2 bytes @ 0x16
  1635                           
  1636  0036                     memset@c:	
  1637                           ; 2 bytes @ 0x16
  1638                           
  1639  0036                     ___lldiv@divisor:	
  1640                           ; 2 bytes @ 0x16
  1641                           
  1642  0036                     ___xxtofl@val:	
  1643                           ; 4 bytes @ 0x16
  1644                           
  1645                           
  1646                           ; 4 bytes @ 0x16
  1647  0036                     	ds	1
  1648  0037                     ??_EEPROM_Read:
  1649  0037                     ?_EEPROM_Write:	
  1650                           ; 1 bytes @ 0x17
  1651                           
  1652  0037                     ??___bmul:	
  1653                           ; 1 bytes @ 0x17
  1654                           
  1655  0037                     EEPROM_Write@Addr:	
  1656                           ; 1 bytes @ 0x17
  1657                           
  1658  0037                     EEPROM_Read@Addr:	
  1659                           ; 1 bytes @ 0x17
  1660                           
  1661  0037                     ___bmul@product:	
  1662                           ; 1 bytes @ 0x17
  1663                           
  1664                           
  1665                           ; 1 bytes @ 0x17
  1666  0037                     	ds	1
  1667  0038                     ??_EEPROM_Write:
  1668  0038                     ??__Umul8_16:	
  1669                           ; 1 bytes @ 0x18
  1670                           
  1671  0038                     EEPROM_Write@Data:	
  1672                           ; 1 bytes @ 0x18
  1673                           
  1674  0038                     ___bmul@multiplier:	
  1675                           ; 1 bytes @ 0x18
  1676                           
  1677  0038                     ___wmul@multiplicand:	
  1678                           ; 1 bytes @ 0x18
  1679                           
  1680  0038                     ___awdiv@dividend:	
  1681                           ; 2 bytes @ 0x18
  1682                           
  1683  0038                     ___awmod@dividend:	
  1684                           ; 2 bytes @ 0x18
  1685                           
  1686  0038                     ___lwmod@dividend:	
  1687                           ; 2 bytes @ 0x18
  1688                           
  1689  0038                     memset@n:	
  1690                           ; 2 bytes @ 0x18
  1691                           
  1692                           
  1693                           ; 2 bytes @ 0x18
  1694  0038                     	ds	1
  1695  0039                     ??_Set_EEPROM_Data:
  1696                           
  1697                           ; 1 bytes @ 0x19
  1698  0039                     	ds	1
  1699  003A                     ??_memset:
  1700  003A                     ??___wmul:	
  1701                           ; 1 bytes @ 0x1A
  1702                           
  1703  003A                     ??___awdiv:	
  1704                           ; 1 bytes @ 0x1A
  1705                           
  1706  003A                     ??___awmod:	
  1707                           ; 1 bytes @ 0x1A
  1708                           
  1709  003A                     ??___lwmod:	
  1710                           ; 1 bytes @ 0x1A
  1711                           
  1712  003A                     ??___xxtofl:	
  1713                           ; 1 bytes @ 0x1A
  1714                           
  1715  003A                     ___awdiv@counter:	
  1716                           ; 1 bytes @ 0x1A
  1717                           
  1718  003A                     ___awmod@counter:	
  1719                           ; 1 bytes @ 0x1A
  1720                           
  1721  003A                     ___lwmod@counter:	
  1722                           ; 1 bytes @ 0x1A
  1723                           
  1724  003A                     memset@p:	
  1725                           ; 1 bytes @ 0x1A
  1726                           
  1727  003A                     ___wmul@product:	
  1728                           ; 1 bytes @ 0x1A
  1729                           
  1730  003A                     __Umul8_16@product:	
  1731                           ; 2 bytes @ 0x1A
  1732                           
  1733  003A                     ___lldiv@dividend:	
  1734                           ; 2 bytes @ 0x1A
  1735                           
  1736                           
  1737                           ; 4 bytes @ 0x1A
  1738  003A                     	ds	1
  1739  003B                     ___awdiv@sign:
  1740  003B                     ___awmod@sign:	
  1741                           ; 1 bytes @ 0x1B
  1742                           
  1743  003B                     memset@p1:	
  1744                           ; 1 bytes @ 0x1B
  1745                           
  1746                           
  1747                           ; 1 bytes @ 0x1B
  1748  003B                     	ds	1
  1749  003C                     ??_Get_EEPROM_Data:
  1750  003C                     ??_Scheduler_Init:	
  1751                           ; 1 bytes @ 0x1C
  1752                           
  1753  003C                     ?_Start_Setting_Timer:	
  1754                           ; 1 bytes @ 0x1C
  1755                           
  1756  003C                     ?_LED_BLINKING:	
  1757                           ; 1 bytes @ 0x1C
  1758                           
  1759  003C                     ?_SSD_Blink:	
  1760                           ; 1 bytes @ 0x1C
  1761                           
  1762  003C                     LED_BLINKING@Time_Ms:	
  1763                           ; 1 bytes @ 0x1C
  1764                           
  1765  003C                     Start_Setting_Timer@Timer_Ms:	
  1766                           ; 2 bytes @ 0x1C
  1767                           
  1768  003C                     SSD_Blink@Times_Ms:	
  1769                           ; 2 bytes @ 0x1C
  1770                           
  1771  003C                     ___awdiv@quotient:	
  1772                           ; 2 bytes @ 0x1C
  1773                           
  1774  003C                     __Umul8_16@word_mpld:	
  1775                           ; 2 bytes @ 0x1C
  1776                           
  1777                           
  1778                           ; 2 bytes @ 0x1C
  1779  003C                     	ds	2
  1780  003E                     ??_SSD_SelectDigit:
  1781  003E                     ??___lldiv:	
  1782                           ; 1 bytes @ 0x1E
  1783                           
  1784  003E                     __Umul8_16@multiplier:	
  1785                           ; 1 bytes @ 0x1E
  1786                           
  1787  003E                     ___xxtofl@sign:	
  1788                           ; 1 bytes @ 0x1E
  1789                           
  1790  003E                     LED_BLINKING@Task_Peroid:	
  1791                           ; 1 bytes @ 0x1E
  1792                           
  1793  003E                     Start_Setting_Timer@Peroid_Task:	
  1794                           ; 2 bytes @ 0x1E
  1795                           
  1796  003E                     SSD_Blink@Task_Peroid:	
  1797                           ; 2 bytes @ 0x1E
  1798                           
  1799                           
  1800                           ; 2 bytes @ 0x1E
  1801  003E                     	ds	1
  1802  003F                     ___xxtofl@exp:
  1803  003F                     ___lldiv@quotient:	
  1804                           ; 1 bytes @ 0x1F
  1805                           
  1806                           
  1807                           ; 4 bytes @ 0x1F
  1808  003F                     	ds	1
  1809  0040                     ??_Start_Setting_Timer:
  1810  0040                     ??_LED_BLINKING:	
  1811                           ; 1 bytes @ 0x20
  1812                           
  1813  0040                     ??_SSD_Blink:	
  1814                           ; 1 bytes @ 0x20
  1815                           
  1816  0040                     ___xxtofl@arg:	
  1817                           ; 1 bytes @ 0x20
  1818                           
  1819                           
  1820                           ; 4 bytes @ 0x20
  1821  0040                     	ds	2
  1822  0042                     ??_Scheduler_Task3:
  1823  0042                     ??_SSD_MainFunction:	
  1824                           ; 1 bytes @ 0x22
  1825                           
  1826  0042                     ??_Mode_MainFunction:	
  1827                           ; 1 bytes @ 0x22
  1828                           
  1829  0042                     ??_SSD_SelectDisplay:	
  1830                           ; 1 bytes @ 0x22
  1831                           
  1832  0042                     ??_LED_Control:	
  1833                           ; 1 bytes @ 0x22
  1834                           
  1835                           
  1836                           ; 1 bytes @ 0x22
  1837  0042                     	ds	1
  1838  0043                     ___lldiv@counter:
  1839                           
  1840                           ; 1 bytes @ 0x23
  1841  0043                     	ds	1
  1842  0044                     ??_Scheduler_Task1:
  1843  0044                     ?_Average_Value:	
  1844                           ; 1 bytes @ 0x24
  1845                           
  1846  0044                     Average_Value@Avrage_Values:	
  1847                           ; 1 bytes @ 0x24
  1848                           
  1849                           
  1850                           ; 1 bytes @ 0x24
  1851  0044                     	ds	1
  1852  0045                     ??_ADC_Value_Ready_CallBack:
  1853  0045                     ??_Scheduler_Start:	
  1854                           ; 1 bytes @ 0x25
  1855                           
  1856  0045                     ??_Scheduler_Task2:	
  1857                           ; 1 bytes @ 0x25
  1858                           
  1859  0045                     ??_ADC_Conv_MainFunction:	
  1860                           ; 1 bytes @ 0x25
  1861                           
  1862  0045                     ??_main:	
  1863                           ; 1 bytes @ 0x25
  1864                           
  1865                           
  1866                           	psect	maintext
  1867  0CA5                     __pmaintext:	
  1868                           ; 1 bytes @ 0x25
  1869 ;;
  1870 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1871 ;;
  1872 ;; *************** function _main *****************
  1873 ;; Defined at:
  1874 ;;		line 30 in file "main.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;		None
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;		None
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      void 
  1881 ;; Registers used:
  1882 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : B00/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1888 ;;      Params:         0       0       0       0       0
  1889 ;;      Locals:         0       0       0       0       0
  1890 ;;      Temps:          0       0       0       0       0
  1891 ;;      Totals:         0       0       0       0       0
  1892 ;;Total ram usage:        0 bytes
  1893 ;; Hardware stack levels required when called:   11
  1894 ;; This function calls:
  1895 ;;		_ADC_Init
  1896 ;;		_ADC_Start_Conv
  1897 ;;		_Elements_Init
  1898 ;;		_GPIO_Init
  1899 ;;		_Get_EEPROM_Data
  1900 ;;		_I2c_Init
  1901 ;;		_Mode_Init
  1902 ;;		_On_Off_Init
  1903 ;;		_SSD_Init
  1904 ;;		_Scheduler_Init
  1905 ;;		_Scheduler_Start
  1906 ;;		_Timer0_Init
  1907 ;; This function is called by:
  1908 ;;		Startup code after reset
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           
  1913                           ;psect for function _main
  1914  0CA5                     _main:
  1915  0CA5                     l3797:	
  1916                           ;incstack = 0
  1917 ;; hardware stack exceeded
  1918                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1919                           
  1920                           
  1921                           ;main.c: 32:   GPIO_Init();
  1922  0CA5  120A  158A  2220  120A  158A  	fcall	_GPIO_Init
  1923  0CAA                     l3799:
  1924                           
  1925                           ;main.c: 33:   I2c_Init();
  1926  0CAA  120A  158A  213A  120A  158A  	fcall	_I2c_Init
  1927  0CAF                     l3801:
  1928                           
  1929                           ;main.c: 34:   ADC_Init();
  1930  0CAF  120A  158A  2205  120A  158A  	fcall	_ADC_Init
  1931  0CB4                     l3803:
  1932                           
  1933                           ;main.c: 35:   On_Off_Init();
  1934  0CB4  120A  158A  20D6  120A  158A  	fcall	_On_Off_Init
  1935  0CB9                     l3805:
  1936                           
  1937                           ;main.c: 36:   SSD_Init();
  1938  0CB9  120A  158A  2146  120A  158A  	fcall	_SSD_Init
  1939  0CBE                     l3807:
  1940                           
  1941                           ;main.c: 37:   Elements_Init();
  1942  0CBE  120A  158A  212E  120A  158A  	fcall	_Elements_Init
  1943  0CC3                     l3809:
  1944                           
  1945                           ;main.c: 38:   Mode_Init();
  1946  0CC3  120A  158A  20C8  120A  158A  	fcall	_Mode_Init
  1947  0CC8                     l3811:
  1948                           
  1949                           ;main.c: 39:   Get_EEPROM_Data();
  1950  0CC8  120A  158A  23BC  120A  158A  	fcall	_Get_EEPROM_Data
  1951  0CCD                     l3813:
  1952                           
  1953                           ;main.c: 40:   ADC_Start_Conv();
  1954  0CCD  120A  158A  20F2  120A  158A  	fcall	_ADC_Start_Conv
  1955  0CD2                     l3815:
  1956                           
  1957                           ;main.c: 41:   Scheduler_Init();
  1958  0CD2  120A  158A  2162  120A  158A  	fcall	_Scheduler_Init
  1959  0CD7                     l3817:
  1960                           
  1961                           ;main.c: 42:   Timer0_Init();
  1962  0CD7  120A  158A  2182  120A  158A  	fcall	_Timer0_Init
  1963                           
  1964                           ;main.c: 43:   Scheduler_Start();
  1965  0CDC  120A  158A  23F5  120A  158A  	fcall	_Scheduler_Start
  1966  0CE1                     l74:
  1967  0CE1  120A  118A  2812   	ljmp	start
  1968  0CE4                     __end_of_main:
  1969                           
  1970                           	psect	text1
  1971  0982                     __ptext1:	
  1972 ;; *************** function _Timer0_Init *****************
  1973 ;; Defined at:
  1974 ;;		line 10 in file "Timer/Timer.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;		None
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;		None
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1988 ;;      Params:         0       0       0       0       0
  1989 ;;      Locals:         0       0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0
  1991 ;;      Totals:         0       0       0       0       0
  1992 ;;Total ram usage:        0 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:    4
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_main
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           
  2003                           ;psect for function _Timer0_Init
  2004  0982                     _Timer0_Init:
  2005  0982                     l2941:	
  2006                           ;incstack = 0
  2007                           ; Regs used in _Timer0_Init: [wreg]
  2008                           
  2009                           
  2010                           ;Timer/Timer.c: 13:      OPTION_REGbits.T0CS=0;
  2011  0982  1683               	bsf	3,5	;RP0=1, select bank1
  2012  0983  1303               	bcf	3,6	;RP1=0, select bank1
  2013  0984  1281               	bcf	1,5	;volatile
  2014                           
  2015                           ;Timer/Timer.c: 14:      OPTION_REGbits.PSA=0;
  2016  0985  1181               	bcf	1,3	;volatile
  2017                           
  2018                           ;Timer/Timer.c: 17:      OPTION_REGbits.PS0=1;
  2019  0986  1401               	bsf	1,0	;volatile
  2020                           
  2021                           ;Timer/Timer.c: 18:      OPTION_REGbits.PS1=1;
  2022  0987  1481               	bsf	1,1	;volatile
  2023                           
  2024                           ;Timer/Timer.c: 19:      OPTION_REGbits.PS2=1;
  2025  0988  1501               	bsf	1,2	;volatile
  2026                           
  2027                           ;Timer/Timer.c: 22:         INTCONbits.TMR0IE=1;
  2028  0989  168B               	bsf	11,5	;volatile
  2029                           
  2030                           ;Timer/Timer.c: 23:         INTCONbits.PEIE=1;
  2031  098A  170B               	bsf	11,6	;volatile
  2032                           
  2033                           ;Timer/Timer.c: 24:         INTCONbits.GIE=1;
  2034  098B  178B               	bsf	11,7	;volatile
  2035  098C                     l2943:
  2036                           
  2037                           ;Timer/Timer.c: 26:      TMR0=100;
  2038  098C  3064               	movlw	100
  2039  098D  1283               	bcf	3,5	;RP0=0, select bank0
  2040  098E  1303               	bcf	3,6	;RP1=0, select bank0
  2041  098F  0081               	movwf	1	;volatile
  2042  0990                     l2945:
  2043                           
  2044                           ;Timer/Timer.c: 27:         INTCONbits.TMR0IF=0;
  2045  0990  110B               	bcf	11,2	;volatile
  2046  0991                     l321:
  2047  0991  0008               	return
  2048  0992                     __end_of_Timer0_Init:
  2049                           
  2050                           	psect	text2
  2051  0BF5                     __ptext2:	
  2052 ;; *************** function _Scheduler_Start *****************
  2053 ;; Defined at:
  2054 ;;		line 13 in file "Scheduler/Scheduler.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;		None
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  IntityIndex     1   12[BANK3 ] unsigned char 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2068 ;;      Params:         0       0       0       0       0
  2069 ;;      Locals:         0       0       0       1       0
  2070 ;;      Temps:          0       0       0       0       0
  2071 ;;      Totals:         0       0       0       1       0
  2072 ;;Total ram usage:        1 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:   10
  2075 ;; This function calls:
  2076 ;;		_Scheduler_Task1
  2077 ;;		_Scheduler_Task2
  2078 ;;		_Scheduler_Task3
  2079 ;;		___bmul
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function _Scheduler_Start
  2087  0BF5                     _Scheduler_Start:
  2088  0BF5                     l240:	
  2089                           ;incstack = 0
  2090 ;; hardware stack exceeded
  2091                           ; Regs used in _Scheduler_Start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2092                           ;Scheduler/Scheduler.c: 15:   while(1)
  2093                           
  2094  0BF5                     l3777:
  2095                           
  2096                           ;Scheduler/Scheduler.c: 16:   {;Scheduler/Scheduler.c: 17:  for( uint8_t IntityIndex = 0
      +                           ; IntityIndex < ( 3U ) ; IntityIndex++ )
  2097  0BF5  1683               	bsf	3,5	;RP0=1, select bank3
  2098  0BF6  1703               	bsf	3,6	;RP1=1, select bank3
  2099  0BF7  019C               	clrf	Scheduler_Start@IntityIndex^(0+384)
  2100  0BF8                     l3783:
  2101                           
  2102                           ;Scheduler/Scheduler.c: 18:  {;Scheduler/Scheduler.c: 19:   if( Scheduler_ActivationFlag
      +                          s[IntityIndex] == 1 )
  2103  0BF8  081C               	movf	Scheduler_Start@IntityIndex^(0+384),w
  2104  0BF9  3ED0               	addlw	(low (_Scheduler_ActivationFlags| 0))& (0+255)
  2105  0BFA  0084               	movwf	4
  2106  0BFB  1383               	bcf	3,7	;select IRP bank1
  2107  0BFC  0300               	decf	0,w
  2108  0BFD  1D03               	btfss	3,2
  2109  0BFE  2C00               	goto	u5221
  2110  0BFF  2C01               	goto	u5220
  2111  0C00                     u5221:
  2112  0C00  2C22               	goto	l3789
  2113  0C01                     u5220:
  2114  0C01                     l3785:
  2115                           
  2116                           ;Scheduler/Scheduler.c: 20:   {;Scheduler/Scheduler.c: 21:    (*Scheduler_Intitys[Intity
      +                          Index].fuction_ptr)();
  2117  0C01  3005               	movlw	5
  2118  0C02  00FF               	movwf	btemp+1
  2119  0C03  087F               	movf	btemp+1,w
  2120  0C04  1283               	bcf	3,5	;RP0=0, select bank0
  2121  0C05  1303               	bcf	3,6	;RP1=0, select bank0
  2122  0C06  00B6               	movwf	___bmul@multiplicand
  2123  0C07  1683               	bsf	3,5	;RP0=1, select bank3
  2124  0C08  1703               	bsf	3,6	;RP1=1, select bank3
  2125  0C09  081C               	movf	Scheduler_Start@IntityIndex^(0+384),w
  2126  0C0A  120A  158A  21BE  120A  158A  	fcall	___bmul
  2127  0C0F  3E01               	addlw	low ((_Scheduler_Intitys-__stringbase)| (0+32768))
  2128  0C10  0084               	movwf	4
  2129  0C11  120A  158A  2000  120A  158A  	fcall	stringdir
  2130  0C16  120A  118A  2042  120A  158A  	fcall	fptable
  2131  0C1B                     l3787:
  2132                           
  2133                           ;Scheduler/Scheduler.c: 22:    Scheduler_ActivationFlags[IntityIndex] = 0 ;
  2134  0C1B  1683               	bsf	3,5	;RP0=1, select bank3
  2135  0C1C  1703               	bsf	3,6	;RP1=1, select bank3
  2136  0C1D  081C               	movf	Scheduler_Start@IntityIndex^(0+384),w
  2137  0C1E  3ED0               	addlw	(low (_Scheduler_ActivationFlags| 0))& (0+255)
  2138  0C1F  0084               	movwf	4
  2139  0C20  1383               	bcf	3,7	;select IRP bank1
  2140  0C21  0180               	clrf	0
  2141  0C22                     l3789:
  2142                           
  2143                           ;Scheduler/Scheduler.c: 24:  }
  2144  0C22  3001               	movlw	1
  2145  0C23  00FF               	movwf	btemp+1
  2146  0C24  087F               	movf	btemp+1,w
  2147  0C25  079C               	addwf	Scheduler_Start@IntityIndex^(0+384),f
  2148  0C26                     l3791:
  2149  0C26  3003               	movlw	3
  2150  0C27  021C               	subwf	Scheduler_Start@IntityIndex^(0+384),w
  2151  0C28  1C03               	skipc
  2152  0C29  2C2B               	goto	u5231
  2153  0C2A  2C2C               	goto	u5230
  2154  0C2B                     u5231:
  2155  0C2B  2BF8               	goto	l3783
  2156  0C2C                     u5230:
  2157  0C2C  2BF5               	goto	l240
  2158  0C2D  0008               	return
  2159  0C2E                     __end_of_Scheduler_Start:
  2160                           
  2161                           	psect	text3
  2162  09BE                     __ptext3:	
  2163 ;; *************** function ___bmul *****************
  2164 ;; Defined at:
  2165 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  multiplier      1    wreg     unsigned char 
  2168 ;;  multiplicand    1   22[BANK0 ] unsigned char 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  multiplier      1   24[BANK0 ] unsigned char 
  2171 ;;  product         1   23[BANK0 ] unsigned char 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      unsigned char 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2, status,0, btemp+1
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2181 ;;      Params:         0       1       0       0       0
  2182 ;;      Locals:         0       2       0       0       0
  2183 ;;      Temps:          0       0       0       0       0
  2184 ;;      Totals:         0       3       0       0       0
  2185 ;;Total ram usage:        3 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    4
  2188 ;; This function calls:
  2189 ;;		Nothing
  2190 ;; This function is called by:
  2191 ;;		_Scheduler_Start
  2192 ;;		_Scheduler_ActivateTask
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           
  2197                           ;psect for function ___bmul
  2198  09BE                     ___bmul:
  2199                           
  2200                           ;incstack = 0
  2201                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  2202                           ;___bmul@multiplier stored from wreg
  2203  09BE  1283               	bcf	3,5	;RP0=0, select bank0
  2204  09BF  1303               	bcf	3,6	;RP1=0, select bank0
  2205  09C0  00B8               	movwf	___bmul@multiplier
  2206  09C1                     l3747:
  2207  09C1  01B7               	clrf	___bmul@product
  2208  09C2                     l3749:
  2209  09C2  1C38               	btfss	___bmul@multiplier,0
  2210  09C3  29C5               	goto	u5171
  2211  09C4  29C6               	goto	u5170
  2212  09C5                     u5171:
  2213  09C5  29CA               	goto	l3753
  2214  09C6                     u5170:
  2215  09C6                     l3751:
  2216  09C6  0836               	movf	___bmul@multiplicand,w
  2217  09C7  00FF               	movwf	btemp+1
  2218  09C8  087F               	movf	btemp+1,w
  2219  09C9  07B7               	addwf	___bmul@product,f
  2220  09CA                     l3753:
  2221  09CA  1003               	clrc
  2222  09CB  0DB6               	rlf	___bmul@multiplicand,f
  2223  09CC                     l3755:
  2224  09CC  1003               	clrc
  2225  09CD  0CB8               	rrf	___bmul@multiplier,f
  2226  09CE                     l3757:
  2227  09CE  0838               	movf	___bmul@multiplier,w
  2228  09CF  1D03               	btfss	3,2
  2229  09D0  29D2               	goto	u5181
  2230  09D1  29D3               	goto	u5180
  2231  09D2                     u5181:
  2232  09D2  29C2               	goto	l3749
  2233  09D3                     u5180:
  2234  09D3                     l3759:
  2235  09D3  0837               	movf	___bmul@product,w
  2236  09D4                     l629:
  2237  09D4  0008               	return
  2238  09D5                     __end_of___bmul:
  2239                           
  2240                           	psect	text4
  2241  0972                     __ptext4:	
  2242 ;; *************** function _Scheduler_Task2 *****************
  2243 ;; Defined at:
  2244 ;;		line 25 in file "Scheduler/Tasks.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;		None
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2258 ;;      Params:         0       0       0       0       0
  2259 ;;      Locals:         0       0       0       0       0
  2260 ;;      Temps:          0       0       0       0       0
  2261 ;;      Totals:         0       0       0       0       0
  2262 ;;Total ram usage:        0 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; Hardware stack levels required when called:    9
  2265 ;; This function calls:
  2266 ;;		_ADC_Conv_MainFunction
  2267 ;;		_Buttons_MainFunction
  2268 ;;		_Elements_MainFunction
  2269 ;; This function is called by:
  2270 ;;		_Scheduler_Start
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           
  2275                           ;psect for function _Scheduler_Task2
  2276  0972                     _Scheduler_Task2:
  2277  0972                     l3717:	
  2278                           ;incstack = 0
  2279 ;; hardware stack exceeded
  2280                           ; Regs used in _Scheduler_Task2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2281                           
  2282                           
  2283                           ;Scheduler/Tasks.c: 27:     Buttons_MainFunction();
  2284  0972  120A  158A  2677  120A  158A  	fcall	_Buttons_MainFunction
  2285  0977                     l3719:
  2286                           
  2287                           ;Scheduler/Tasks.c: 28:  ADC_Conv_MainFunction();
  2288  0977  120A  158A  21D5  120A  158A  	fcall	_ADC_Conv_MainFunction
  2289  097C                     l3721:
  2290                           
  2291                           ;Scheduler/Tasks.c: 29:  Elements_MainFunction();
  2292  097C  120A  158A  279A  120A  158A  	fcall	_Elements_MainFunction
  2293  0981                     l295:
  2294  0981  0008               	return
  2295  0982                     __end_of_Scheduler_Task2:
  2296                           
  2297                           	psect	text5
  2298  08DC                     __ptext5:	
  2299 ;; *************** function _Scheduler_Task1 *****************
  2300 ;; Defined at:
  2301 ;;		line 19 in file "Scheduler/Tasks.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  1    wreg      void 
  2308 ;; Registers used:
  2309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2315 ;;      Params:         0       0       0       0       0
  2316 ;;      Locals:         0       0       0       0       0
  2317 ;;      Temps:          0       0       0       0       0
  2318 ;;      Totals:         0       0       0       0       0
  2319 ;;Total ram usage:        0 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    8
  2322 ;; This function calls:
  2323 ;;		_SSD_MainFunction
  2324 ;; This function is called by:
  2325 ;;		_Scheduler_Start
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           
  2330                           ;psect for function _Scheduler_Task1
  2331  08DC                     _Scheduler_Task1:
  2332  08DC                     l3715:	
  2333                           ;incstack = 0
  2334 ;; hardware stack exceeded
  2335                           ; Regs used in _Scheduler_Task1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2336                           
  2337                           
  2338                           ;Scheduler/Tasks.c: 21:  SSD_MainFunction();
  2339  08DC  120A  158A  25C3  120A  158A  	fcall	_SSD_MainFunction
  2340  08E1                     l292:
  2341  08E1  0008               	return
  2342  08E2                     __end_of_Scheduler_Task1:
  2343                           
  2344                           	psect	text6
  2345  0923                     __ptext6:	
  2346 ;; *************** function _Scheduler_Task3 *****************
  2347 ;; Defined at:
  2348 ;;		line 32 in file "Scheduler/Tasks.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2362 ;;      Params:         0       0       0       0       0
  2363 ;;      Locals:         0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0
  2365 ;;      Totals:         0       0       0       0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    7
  2369 ;; This function calls:
  2370 ;;		_Mode_MainFunction
  2371 ;;		_Set_EEPROM_Data
  2372 ;; This function is called by:
  2373 ;;		_Scheduler_Start
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           
  2378                           ;psect for function _Scheduler_Task3
  2379  0923                     _Scheduler_Task3:
  2380  0923                     l3723:	
  2381                           ;incstack = 0
  2382 ;; hardware stack exceeded
  2383                           ; Regs used in _Scheduler_Task3: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2384                           
  2385                           
  2386                           ;Scheduler/Tasks.c: 34:     Mode_MainFunction();
  2387  0923  120A  158A  24E4  120A  158A  	fcall	_Mode_MainFunction
  2388                           
  2389                           ;Scheduler/Tasks.c: 35:     Set_EEPROM_Data();
  2390  0928  120A  158A  21ED  120A  158A  	fcall	_Set_EEPROM_Data
  2391  092D                     l298:
  2392  092D  0008               	return
  2393  092E                     __end_of_Scheduler_Task3:
  2394                           
  2395                           	psect	text7
  2396  09ED                     __ptext7:	
  2397 ;; *************** function _Set_EEPROM_Data *****************
  2398 ;; Defined at:
  2399 ;;		line 33 in file "EEPROM/EEPROM.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2413 ;;      Params:         0       0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0
  2416 ;;      Totals:         0       0       0       0       0
  2417 ;;Total ram usage:        0 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    6
  2420 ;; This function calls:
  2421 ;;		_EEPROM_Write
  2422 ;; This function is called by:
  2423 ;;		_Scheduler_Task3
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           
  2428                           ;psect for function _Set_EEPROM_Data
  2429  09ED                     _Set_EEPROM_Data:
  2430  09ED                     l3685:	
  2431                           ;incstack = 0
  2432 ;; hardware stack exceeded
  2433                           ; Regs used in _Set_EEPROM_Data: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2434                           
  2435                           
  2436                           ;EEPROM/EEPROM.c: 37:  if(Temperature.Store_Set_Temp_Flag==1)
  2437  09ED  1283               	bcf	3,5	;RP0=0, select bank0
  2438  09EE  1303               	bcf	3,6	;RP1=0, select bank0
  2439  09EF  1CD4               	btfss	_Temperature+3,1
  2440  09F0  29F2               	goto	u5131
  2441  09F1  29F3               	goto	u5130
  2442  09F2                     u5131:
  2443  09F2  2A04               	goto	l440
  2444  09F3                     u5130:
  2445  09F3                     l3687:
  2446                           
  2447                           ;EEPROM/EEPROM.c: 38:  {;EEPROM/EEPROM.c: 39:     EEPROM_Data=Temperature.Set_Temp;
  2448  09F3  0853               	movf	_Temperature+2,w
  2449  09F4  00FF               	movwf	btemp+1
  2450  09F5  087F               	movf	btemp+1,w
  2451  09F6  00CC               	movwf	_EEPROM_Data
  2452  09F7                     l3689:
  2453                           
  2454                           ;EEPROM/EEPROM.c: 40:     EEPROM_Write(EEPROM_Data,0x0A);
  2455  09F7  300A               	movlw	10
  2456  09F8  00FF               	movwf	btemp+1
  2457  09F9  087F               	movf	btemp+1,w
  2458  09FA  00B7               	movwf	EEPROM_Write@Addr
  2459  09FB  084C               	movf	_EEPROM_Data,w
  2460  09FC  120A  158A  2355  120A  158A  	fcall	_EEPROM_Write
  2461  0A01                     l3691:
  2462                           
  2463                           ;EEPROM/EEPROM.c: 41:     Temperature.Store_Set_Temp_Flag=0;
  2464  0A01  1283               	bcf	3,5	;RP0=0, select bank0
  2465  0A02  1303               	bcf	3,6	;RP1=0, select bank0
  2466  0A03  10D4               	bcf	_Temperature+3,1
  2467  0A04                     l440:
  2468  0A04  0008               	return
  2469  0A05                     __end_of_Set_EEPROM_Data:
  2470                           
  2471                           	psect	text8
  2472  0B55                     __ptext8:	
  2473 ;; *************** function _EEPROM_Write *****************
  2474 ;; Defined at:
  2475 ;;		line 47 in file "EEPROM/EEPROM.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  Data            1    wreg     unsigned char 
  2478 ;;  Addr            1   23[BANK0 ] unsigned char 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  Data            1   24[BANK0 ] unsigned char 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0, pclath, cstack
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2490 ;;      Params:         0       1       0       0       0
  2491 ;;      Locals:         0       1       0       0       0
  2492 ;;      Temps:          0       0       0       0       0
  2493 ;;      Totals:         0       2       0       0       0
  2494 ;;Total ram usage:        2 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:    5
  2497 ;; This function calls:
  2498 ;;		_I2c_Start
  2499 ;;		_I2c_Stop
  2500 ;;		_I2c_WaitAck
  2501 ;;		_I2c_Write
  2502 ;; This function is called by:
  2503 ;;		_Set_EEPROM_Data
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           
  2508                           ;psect for function _EEPROM_Write
  2509  0B55                     _EEPROM_Write:
  2510                           
  2511                           ;incstack = 0
  2512 ;; hardware stack exceeded
  2513                           ; Regs used in _EEPROM_Write: [wreg+status,2+status,0+pclath+cstack]
  2514                           ;EEPROM_Write@Data stored from wreg
  2515  0B55  1283               	bcf	3,5	;RP0=0, select bank0
  2516  0B56  1303               	bcf	3,6	;RP1=0, select bank0
  2517  0B57  00B8               	movwf	EEPROM_Write@Data
  2518  0B58                     l3521:
  2519                           
  2520                           ;EEPROM/EEPROM.c: 47: void EEPROM_Write(uint8_t Data,uint8_t Addr);EEPROM/EEPROM.c: 48: 
      +                          {;EEPROM/EEPROM.c: 49:  I2c_Start();
  2521  0B58  120A  158A  210D  120A  158A  	fcall	_I2c_Start
  2522  0B5D                     l3523:
  2523                           
  2524                           ;EEPROM/EEPROM.c: 50:  I2c_Write(0xA0);
  2525  0B5D  30A0               	movlw	160
  2526  0B5E  120A  158A  20D0  120A  158A  	fcall	_I2c_Write
  2527  0B63                     l3525:
  2528                           
  2529                           ;EEPROM/EEPROM.c: 51:  I2c_WaitAck();
  2530  0B63  120A  158A  20E2  120A  158A  	fcall	_I2c_WaitAck
  2531                           
  2532                           ;EEPROM/EEPROM.c: 52:  I2c_Write(Addr);
  2533  0B68  1283               	bcf	3,5	;RP0=0, select bank0
  2534  0B69  1303               	bcf	3,6	;RP1=0, select bank0
  2535  0B6A  0837               	movf	EEPROM_Write@Addr,w
  2536  0B6B  120A  158A  20D0  120A  158A  	fcall	_I2c_Write
  2537  0B70                     l3527:
  2538                           
  2539                           ;EEPROM/EEPROM.c: 53:  I2c_WaitAck();
  2540  0B70  120A  158A  20E2  120A  158A  	fcall	_I2c_WaitAck
  2541  0B75                     l3529:
  2542                           
  2543                           ;EEPROM/EEPROM.c: 54:  I2c_Write(Data);
  2544  0B75  1283               	bcf	3,5	;RP0=0, select bank0
  2545  0B76  1303               	bcf	3,6	;RP1=0, select bank0
  2546  0B77  0838               	movf	EEPROM_Write@Data,w
  2547  0B78  120A  158A  20D0  120A  158A  	fcall	_I2c_Write
  2548                           
  2549                           ;EEPROM/EEPROM.c: 55:  I2c_WaitAck();
  2550  0B7D  120A  158A  20E2  120A  158A  	fcall	_I2c_WaitAck
  2551                           
  2552                           ;EEPROM/EEPROM.c: 56:  I2c_Stop();
  2553  0B82  120A  158A  2118  120A  158A  	fcall	_I2c_Stop
  2554  0B87                     l443:
  2555  0B87  0008               	return
  2556  0B88                     __end_of_EEPROM_Write:
  2557                           
  2558                           	psect	text9
  2559  0CE4                     __ptext9:	
  2560 ;; *************** function _Mode_MainFunction *****************
  2561 ;; Defined at:
  2562 ;;		line 24 in file "WaterHeater_Mode/WaterHeater_Mode.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2576 ;;      Params:         0       0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0
  2579 ;;      Totals:         0       0       0       0       0
  2580 ;;Total ram usage:        0 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    6
  2583 ;; This function calls:
  2584 ;;		_Start_Setting_Timer
  2585 ;; This function is called by:
  2586 ;;		_Scheduler_Task3
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           
  2591                           ;psect for function _Mode_MainFunction
  2592  0CE4                     _Mode_MainFunction:
  2593  0CE4                     l3659:	
  2594                           ;incstack = 0
  2595 ;; hardware stack exceeded
  2596                           ; Regs used in _Mode_MainFunction: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2597                           
  2598                           
  2599                           ;WaterHeater_Mode/WaterHeater_Mode.c: 27:    if(Mode.Select_Mode==Setting_Mode)
  2600  0CE4  3002               	movlw	2
  2601  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  2602  0CE6  1303               	bcf	3,6	;RP1=0, select bank0
  2603  0CE7  0645               	xorwf	_Mode,w
  2604  0CE8  1D03               	btfss	3,2
  2605  0CE9  2CEB               	goto	u5061
  2606  0CEA  2CEC               	goto	u5060
  2607  0CEB                     u5061:
  2608  0CEB  2D24               	goto	l342
  2609  0CEC                     u5060:
  2610  0CEC                     l3661:
  2611                           
  2612                           ;WaterHeater_Mode/WaterHeater_Mode.c: 28:    {;WaterHeater_Mode/WaterHeater_Mode.c: 30: 
      +                              Start_Setting_Timer(5000,500);
  2613  0CEC  3088               	movlw	136
  2614  0CED  00BC               	movwf	Start_Setting_Timer@Timer_Ms
  2615  0CEE  3013               	movlw	19
  2616  0CEF  00BD               	movwf	Start_Setting_Timer@Timer_Ms+1
  2617  0CF0  30F4               	movlw	244
  2618  0CF1  00BE               	movwf	Start_Setting_Timer@Peroid_Task
  2619  0CF2  3001               	movlw	1
  2620  0CF3  00BF               	movwf	Start_Setting_Timer@Peroid_Task+1
  2621  0CF4  120A  158A  22FE  120A  158A  	fcall	_Start_Setting_Timer
  2622  0CF9                     l3663:
  2623                           
  2624                           ;WaterHeater_Mode/WaterHeater_Mode.c: 31:     if(Buttons.UpFlag &&!Buttons.DownFlag && T
      +                          emperature.Set_Temp !=(75U))
  2625  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  2627  0CFB  1C4D               	btfss	_Buttons,0
  2628  0CFC  2CFE               	goto	u5071
  2629  0CFD  2CFF               	goto	u5070
  2630  0CFE                     u5071:
  2631  0CFE  2D11               	goto	l339
  2632  0CFF                     u5070:
  2633  0CFF                     l3665:
  2634  0CFF  18CD               	btfsc	_Buttons,1
  2635  0D00  2D02               	goto	u5081
  2636  0D01  2D03               	goto	u5080
  2637  0D02                     u5081:
  2638  0D02  2D11               	goto	l339
  2639  0D03                     u5080:
  2640  0D03                     l3667:
  2641  0D03  304B               	movlw	75
  2642  0D04  0653               	xorwf	_Temperature+2,w
  2643  0D05  1903               	btfsc	3,2
  2644  0D06  2D08               	goto	u5091
  2645  0D07  2D09               	goto	u5090
  2646  0D08                     u5091:
  2647  0D08  2D11               	goto	l339
  2648  0D09                     u5090:
  2649  0D09                     l3669:
  2650                           
  2651                           ;WaterHeater_Mode/WaterHeater_Mode.c: 32:      {;WaterHeater_Mode/WaterHeater_Mode.c: 33
      +                          :       Temperature.Set_Temp += (5U);
  2652  0D09  3005               	movlw	5
  2653  0D0A  00FF               	movwf	btemp+1
  2654  0D0B  087F               	movf	btemp+1,w
  2655  0D0C  07D3               	addwf	_Temperature+2,f
  2656  0D0D                     l3671:
  2657                           
  2658                           ;WaterHeater_Mode/WaterHeater_Mode.c: 34:       Mode.Setting_Mode_Timer=1;
  2659  0D0D  01C6               	clrf	_Mode+1
  2660  0D0E  0AC6               	incf	_Mode+1,f
  2661  0D0F                     l3673:
  2662                           
  2663                           ;WaterHeater_Mode/WaterHeater_Mode.c: 35:           Buttons.UpFlag=0;
  2664  0D0F  104D               	bcf	_Buttons,0
  2665                           
  2666                           ;WaterHeater_Mode/WaterHeater_Mode.c: 36:      }
  2667  0D10  2D24               	goto	l342
  2668  0D11                     l339:	
  2669                           ;WaterHeater_Mode/WaterHeater_Mode.c: 37:      else if(Buttons.DownFlag &&!Buttons.UpFla
      +                          g&& Temperature.Set_Temp !=(35U))
  2670                           
  2671  0D11  1CCD               	btfss	_Buttons,1
  2672  0D12  2D14               	goto	u5101
  2673  0D13  2D15               	goto	u5100
  2674  0D14                     u5101:
  2675  0D14  2D24               	goto	l342
  2676  0D15                     u5100:
  2677  0D15                     l3675:
  2678  0D15  184D               	btfsc	_Buttons,0
  2679  0D16  2D18               	goto	u5111
  2680  0D17  2D19               	goto	u5110
  2681  0D18                     u5111:
  2682  0D18  2D24               	goto	l342
  2683  0D19                     u5110:
  2684  0D19                     l3677:
  2685  0D19  3023               	movlw	35
  2686  0D1A  0653               	xorwf	_Temperature+2,w
  2687  0D1B  1903               	btfsc	3,2
  2688  0D1C  2D1E               	goto	u5121
  2689  0D1D  2D1F               	goto	u5120
  2690  0D1E                     u5121:
  2691  0D1E  2D24               	goto	l342
  2692  0D1F                     u5120:
  2693  0D1F                     l3679:
  2694                           
  2695                           ;WaterHeater_Mode/WaterHeater_Mode.c: 38:      {;WaterHeater_Mode/WaterHeater_Mode.c: 39
      +                          :       Temperature.Set_Temp -= (5U);
  2696  0D1F  3005               	movlw	5
  2697  0D20  02D3               	subwf	_Temperature+2,f
  2698  0D21                     l3681:
  2699                           
  2700                           ;WaterHeater_Mode/WaterHeater_Mode.c: 40:       Mode.Setting_Mode_Timer=1;
  2701  0D21  01C6               	clrf	_Mode+1
  2702  0D22  0AC6               	incf	_Mode+1,f
  2703  0D23                     l3683:
  2704                           
  2705                           ;WaterHeater_Mode/WaterHeater_Mode.c: 41:           Buttons.DownFlag=0;
  2706  0D23  10CD               	bcf	_Buttons,1
  2707  0D24                     l342:
  2708  0D24  0008               	return
  2709  0D25                     __end_of_Mode_MainFunction:
  2710                           
  2711                           	psect	text10
  2712  0AFE                     __ptext10:	
  2713 ;; *************** function _Start_Setting_Timer *****************
  2714 ;; Defined at:
  2715 ;;		line 49 in file "WaterHeater_Mode/WaterHeater_Mode.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  Timer_Ms        2   28[BANK0 ] unsigned int 
  2718 ;;  Peroid_Task     2   30[BANK0 ] unsigned int 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;		None
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      void 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2730 ;;      Params:         0       4       0       0       0
  2731 ;;      Locals:         0       0       0       0       0
  2732 ;;      Temps:          0       2       0       0       0
  2733 ;;      Totals:         0       6       0       0       0
  2734 ;;Total ram usage:        6 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; Hardware stack levels required when called:    5
  2737 ;; This function calls:
  2738 ;;		___wmul
  2739 ;; This function is called by:
  2740 ;;		_Mode_MainFunction
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           
  2745                           ;psect for function _Start_Setting_Timer
  2746  0AFE                     _Start_Setting_Timer:
  2747  0AFE                     l3515:	
  2748                           ;incstack = 0
  2749 ;; hardware stack exceeded
  2750                           ; Regs used in _Start_Setting_Timer: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2751                           
  2752                           
  2753                           ;WaterHeater_Mode/WaterHeater_Mode.c: 49: void Start_Setting_Timer(uint16_t Timer_Ms ,ui
      +                          nt16_t Peroid_Task);WaterHeater_Mode/WaterHeater_Mode.c: 50: {;WaterHeater_Mode/WaterHea
      +                          ter_Mode.c: 51:  if(Mode.Setting_Mode_Timer*Peroid_Task==Timer_Ms)
  2754  0AFE  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0AFF  1303               	bcf	3,6	;RP1=0, select bank0
  2756  0B00  0846               	movf	_Mode+1,w
  2757  0B01  00C0               	movwf	??_Start_Setting_Timer
  2758  0B02  01C1               	clrf	??_Start_Setting_Timer+1
  2759  0B03  0840               	movf	??_Start_Setting_Timer,w
  2760  0B04  00B6               	movwf	___wmul@multiplier
  2761  0B05  0841               	movf	??_Start_Setting_Timer+1,w
  2762  0B06  00B7               	movwf	___wmul@multiplier+1
  2763  0B07  083F               	movf	Start_Setting_Timer@Peroid_Task+1,w
  2764  0B08  00B9               	movwf	___wmul@multiplicand+1
  2765  0B09  083E               	movf	Start_Setting_Timer@Peroid_Task,w
  2766  0B0A  00B8               	movwf	___wmul@multiplicand
  2767  0B0B  120A  158A  2284  120A  158A  	fcall	___wmul
  2768  0B10  1283               	bcf	3,5	;RP0=0, select bank0
  2769  0B11  1303               	bcf	3,6	;RP1=0, select bank0
  2770  0B12  083D               	movf	Start_Setting_Timer@Timer_Ms+1,w
  2771  0B13  0637               	xorwf	?___wmul+1,w
  2772  0B14  1D03               	skipz
  2773  0B15  2B18               	goto	u4775
  2774  0B16  083C               	movf	Start_Setting_Timer@Timer_Ms,w
  2775  0B17  0636               	xorwf	?___wmul,w
  2776  0B18                     u4775:
  2777  0B18  1D03               	skipz
  2778  0B19  2B1B               	goto	u4771
  2779  0B1A  2B1C               	goto	u4770
  2780  0B1B                     u4771:
  2781  0B1B  2B24               	goto	l3519
  2782  0B1C                     u4770:
  2783  0B1C                     l3517:
  2784                           
  2785                           ;WaterHeater_Mode/WaterHeater_Mode.c: 52:  {;WaterHeater_Mode/WaterHeater_Mode.c: 53:   
      +                          Temperature.Store_Set_Temp_Flag=1;
  2786  0B1C  14D4               	bsf	_Temperature+3,1
  2787                           
  2788                           ;WaterHeater_Mode/WaterHeater_Mode.c: 54:   Mode.Select_Mode=Normal_Mode;
  2789  0B1D  01C5               	clrf	_Mode
  2790  0B1E  0AC5               	incf	_Mode,f
  2791                           
  2792                           ;WaterHeater_Mode/WaterHeater_Mode.c: 55:   Mode.Setting_Mode_Timer=1;
  2793  0B1F  01C6               	clrf	_Mode+1
  2794  0B20  0AC6               	incf	_Mode+1,f
  2795                           
  2796                           ;WaterHeater_Mode/WaterHeater_Mode.c: 56:         Buttons.UpFlag=0;
  2797  0B21  104D               	bcf	_Buttons,0
  2798                           
  2799                           ;WaterHeater_Mode/WaterHeater_Mode.c: 57:         Buttons.DownFlag=0;
  2800  0B22  10CD               	bcf	_Buttons,1
  2801                           
  2802                           ;WaterHeater_Mode/WaterHeater_Mode.c: 59:  }
  2803  0B23  2B28               	goto	l347
  2804  0B24                     l3519:
  2805                           
  2806                           ;WaterHeater_Mode/WaterHeater_Mode.c: 61:  {;WaterHeater_Mode/WaterHeater_Mode.c: 62:   
      +                          Mode.Setting_Mode_Timer++;
  2807  0B24  3001               	movlw	1
  2808  0B25  00FF               	movwf	btemp+1
  2809  0B26  087F               	movf	btemp+1,w
  2810  0B27  07C6               	addwf	_Mode+1,f
  2811  0B28                     l347:
  2812  0B28  0008               	return
  2813  0B29                     __end_of_Start_Setting_Timer:
  2814                           
  2815                           	psect	text11
  2816  0F9A                     __ptext11:	
  2817 ;; *************** function _Elements_MainFunction *****************
  2818 ;; Defined at:
  2819 ;;		line 50 in file "Elements/Elements.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;		None
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;		None
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      void 
  2826 ;; Registers used:
  2827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2833 ;;      Params:         0       0       0       0       0
  2834 ;;      Locals:         0       0       0       0       0
  2835 ;;      Temps:          0       0       4       0       0
  2836 ;;      Totals:         0       0       4       0       0
  2837 ;;Total ram usage:        4 bytes
  2838 ;; Hardware stack levels used:    1
  2839 ;; Hardware stack levels required when called:    7
  2840 ;; This function calls:
  2841 ;;		_LED_Control
  2842 ;; This function is called by:
  2843 ;;		_Scheduler_Task2
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           
  2848                           ;psect for function _Elements_MainFunction
  2849  0F9A                     _Elements_MainFunction:
  2850  0F9A                     l3601:	
  2851                           ;incstack = 0
  2852 ;; hardware stack exceeded
  2853                           ; Regs used in _Elements_MainFunction: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  2854                           
  2855                           
  2856                           ;Elements/Elements.c: 52:   if(Temperature.Average_Value_Ready_Flag==1 && Mode.Select_Mo
      +                          de==Normal_Mode)
  2857  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  2858  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  2859  0F9C  1C54               	btfss	_Temperature+3,0
  2860  0F9D  2F9F               	goto	u5021
  2861  0F9E  2FA0               	goto	u5020
  2862  0F9F                     u5021:
  2863  0F9F  2FF1               	goto	l3621
  2864  0FA0                     u5020:
  2865  0FA0                     l3603:
  2866  0FA0  0345               	decf	_Mode,w
  2867  0FA1  1D03               	btfss	3,2
  2868  0FA2  2FA4               	goto	u5031
  2869  0FA3  2FA5               	goto	u5030
  2870  0FA4                     u5031:
  2871  0FA4  2FF1               	goto	l3621
  2872  0FA5                     u5030:
  2873  0FA5                     l3605:
  2874                           
  2875                           ;Elements/Elements.c: 53:   {;Elements/Elements.c: 55:         if(Temperature.Average_Va
      +                          lue < (Temperature.Set_Temp - (5U)))
  2876  0FA5  0853               	movf	_Temperature+2,w
  2877  0FA6  3EFB               	addlw	251
  2878  0FA7  1683               	bsf	3,5	;RP0=1, select bank1
  2879  0FA8  1303               	bcf	3,6	;RP1=0, select bank1
  2880  0FA9  00D3               	movwf	??_Elements_MainFunction^(0+128)
  2881  0FAA  30FF               	movlw	255
  2882  0FAB  1803               	skipnc
  2883  0FAC  3000               	movlw	0
  2884  0FAD  00D4               	movwf	(??_Elements_MainFunction^(0+128)+1)
  2885  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  2886  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  2887  0FB0  0852               	movf	_Temperature+1,w
  2888  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  2889  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  2890  0FB3  00D5               	movwf	(??_Elements_MainFunction+2)^(0+128)
  2891  0FB4  01D6               	clrf	((??_Elements_MainFunction+2)^(0+128)+1)
  2892  0FB5  0854               	movf	(??_Elements_MainFunction+1)^(0+128),w
  2893  0FB6  0256               	subwf	(??_Elements_MainFunction+3)^(0+128),w
  2894  0FB7  1D03               	skipz
  2895  0FB8  2FBB               	goto	u5045
  2896  0FB9  0853               	movf	??_Elements_MainFunction^(0+128),w
  2897  0FBA  0255               	subwf	(??_Elements_MainFunction+2)^(0+128),w
  2898  0FBB                     u5045:
  2899  0FBB  1803               	skipnc
  2900  0FBC  2FBE               	goto	u5041
  2901  0FBD  2FBF               	goto	u5040
  2902  0FBE                     u5041:
  2903  0FBE  2FCB               	goto	l3613
  2904  0FBF                     u5040:
  2905  0FBF                     l3607:
  2906                           
  2907                           ;Elements/Elements.c: 56:          {;Elements/Elements.c: 57:          (PORTC &= ~(1<<2)
      +                          );
  2908  0FBF  30FB               	movlw	251
  2909  0FC0  00FF               	movwf	btemp+1
  2910  0FC1  087F               	movf	btemp+1,w
  2911  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  2912  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  2913  0FC4  0587               	andwf	7,f	;volatile
  2914  0FC5                     l3609:
  2915                           
  2916                           ;Elements/Elements.c: 58:          (PORTC|= (1<<5));
  2917  0FC5  1687               	bsf	7,5	;volatile
  2918  0FC6                     l3611:
  2919                           
  2920                           ;Elements/Elements.c: 59:             LED_Status=_LED_BLINK;
  2921  0FC6  3002               	movlw	2
  2922  0FC7  00FF               	movwf	btemp+1
  2923  0FC8  087F               	movf	btemp+1,w
  2924  0FC9  00CE               	movwf	_LED_Status
  2925                           
  2926                           ;Elements/Elements.c: 61:          }else if(Temperature.Average_Value > (Temperature.Set
      +                          _Temp + (5U)))
  2927  0FCA  2FFA               	goto	l3625
  2928  0FCB                     l3613:
  2929  0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  2930  0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  2931  0FCD  0852               	movf	_Temperature+1,w
  2932  0FCE  1683               	bsf	3,5	;RP0=1, select bank1
  2933  0FCF  1303               	bcf	3,6	;RP1=0, select bank1
  2934  0FD0  00D3               	movwf	??_Elements_MainFunction^(0+128)
  2935  0FD1  01D4               	clrf	(??_Elements_MainFunction^(0+128)+1)
  2936  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  2937  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  2938  0FD4  0853               	movf	_Temperature+2,w
  2939  0FD5  3E05               	addlw	5
  2940  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  2941  0FD7  1303               	bcf	3,6	;RP1=0, select bank1
  2942  0FD8  00D5               	movwf	(??_Elements_MainFunction+2)^(0+128)
  2943  0FD9  3000               	movlw	0
  2944  0FDA  1803               	skipnc
  2945  0FDB  3001               	movlw	1
  2946  0FDC  00D6               	movwf	((??_Elements_MainFunction+2)^(0+128)+1)
  2947  0FDD  0854               	movf	(??_Elements_MainFunction+1)^(0+128),w
  2948  0FDE  0256               	subwf	(??_Elements_MainFunction+3)^(0+128),w
  2949  0FDF  1D03               	skipz
  2950  0FE0  2FE3               	goto	u5055
  2951  0FE1  0853               	movf	??_Elements_MainFunction^(0+128),w
  2952  0FE2  0255               	subwf	(??_Elements_MainFunction+2)^(0+128),w
  2953  0FE3                     u5055:
  2954  0FE3  1803               	skipnc
  2955  0FE4  2FE6               	goto	u5051
  2956  0FE5  2FE7               	goto	u5050
  2957  0FE6                     u5051:
  2958  0FE6  2FFA               	goto	l3625
  2959  0FE7                     u5050:
  2960  0FE7                     l3615:
  2961                           
  2962                           ;Elements/Elements.c: 62:          {;Elements/Elements.c: 63:           (PORTC &= ~(1<<5
      +                          ));
  2963  0FE7  30DF               	movlw	223
  2964  0FE8  00FF               	movwf	btemp+1
  2965  0FE9  087F               	movf	btemp+1,w
  2966  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  2967  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  2968  0FEC  0587               	andwf	7,f	;volatile
  2969  0FED                     l3617:
  2970                           
  2971                           ;Elements/Elements.c: 64:           (PORTC|= (1<<2));
  2972  0FED  1507               	bsf	7,2	;volatile
  2973  0FEE                     l3619:
  2974                           
  2975                           ;Elements/Elements.c: 65:              LED_Status=_LED_ON;
  2976  0FEE  01CE               	clrf	_LED_Status
  2977  0FEF  0ACE               	incf	_LED_Status,f
  2978  0FF0  2FFA               	goto	l3625
  2979  0FF1                     l3621:
  2980                           
  2981                           ;Elements/Elements.c: 70:   {;Elements/Elements.c: 71:    (PORTC &= ~(1<<2));
  2982  0FF1  30FB               	movlw	251
  2983  0FF2  00FF               	movwf	btemp+1
  2984  0FF3  087F               	movf	btemp+1,w
  2985  0FF4  0587               	andwf	7,f	;volatile
  2986                           
  2987                           ;Elements/Elements.c: 72:    (PORTC &= ~(1<<5));
  2988  0FF5  30DF               	movlw	223
  2989  0FF6  00FF               	movwf	btemp+1
  2990  0FF7  087F               	movf	btemp+1,w
  2991  0FF8  0587               	andwf	7,f	;volatile
  2992  0FF9                     l3623:
  2993                           
  2994                           ;Elements/Elements.c: 73:       LED_Status=_LED_OFF;
  2995  0FF9  01CE               	clrf	_LED_Status
  2996  0FFA                     l3625:
  2997                           
  2998                           ;Elements/Elements.c: 75:   LED_Control();
  2999  0FFA  120A  118A  27D3  120A  158A  	fcall	_LED_Control
  3000  0FFF                     l154:
  3001  0FFF  0008               	return
  3002  1000                     __end_of_Elements_MainFunction:
  3003                           
  3004                           	psect	text12
  3005  07D3                     __ptext12:	
  3006 ;; *************** function _LED_Control *****************
  3007 ;; Defined at:
  3008 ;;		line 35 in file "Elements/Elements.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3022 ;;      Params:         0       0       0       0       0
  3023 ;;      Locals:         0       0       0       0       0
  3024 ;;      Temps:          0       2       0       0       0
  3025 ;;      Totals:         0       2       0       0       0
  3026 ;;Total ram usage:        2 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    6
  3029 ;; This function calls:
  3030 ;;		_LED_BLINKING
  3031 ;; This function is called by:
  3032 ;;		_Elements_MainFunction
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           
  3037                           ;psect for function _LED_Control
  3038  07D3                     _LED_Control:
  3039  07D3                     l3501:	
  3040                           ;incstack = 0
  3041 ;; hardware stack exceeded
  3042                           ; Regs used in _LED_Control: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3043                           
  3044                           
  3045                           ;Elements/Elements.c: 37:     switch(LED_Status)
  3046  07D3  2FE9               	goto	l3509
  3047  07D4                     l3503:
  3048  07D4  30E8               	movlw	232
  3049  07D5  00BC               	movwf	LED_BLINKING@Time_Ms
  3050  07D6  3003               	movlw	3
  3051  07D7  00BD               	movwf	LED_BLINKING@Time_Ms+1
  3052  07D8  3064               	movlw	100
  3053  07D9  00BE               	movwf	LED_BLINKING@Task_Peroid
  3054  07DA  3000               	movlw	0
  3055  07DB  00BF               	movwf	LED_BLINKING@Task_Peroid+1
  3056  07DC  120A  158A  22D4  120A  118A  	fcall	_LED_BLINKING
  3057                           
  3058                           ;Elements/Elements.c: 40:                           break;
  3059  07E1  2FFE               	goto	l146
  3060  07E2                     l144:	
  3061                           ;Elements/Elements.c: 42:         case _LED_ON : (PORTB|= (1<<4));;
  3062                           
  3063  07E2  1606               	bsf	6,4	;volatile
  3064                           
  3065                           ;Elements/Elements.c: 43:                           break;
  3066  07E3  2FFE               	goto	l146
  3067  07E4                     l3505:
  3068  07E4  30EF               	movlw	239
  3069  07E5  00FF               	movwf	btemp+1
  3070  07E6  087F               	movf	btemp+1,w
  3071  07E7  0586               	andwf	6,f	;volatile
  3072                           
  3073                           ;Elements/Elements.c: 46:                           break;
  3074  07E8  2FFE               	goto	l146
  3075  07E9                     l3509:
  3076  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  3077  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  3078  07EB  084E               	movf	_LED_Status,w
  3079  07EC  00C2               	movwf	??_LED_Control
  3080  07ED  01C3               	clrf	??_LED_Control+1
  3081                           
  3082                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3083                           ; Switch size 1, requested type "simple"
  3084                           ; Number of cases is 1, Range of values is 0 to 0
  3085                           ; switch strategies available:
  3086                           ; Name         Instructions Cycles
  3087                           ; simple_byte            4     3 (average)
  3088                           ; direct_byte           11     8 (fixed)
  3089                           ; jumptable            260     6 (fixed)
  3090                           ;	Chosen strategy is simple_byte
  3091  07EE  0843               	movf	??_LED_Control+1,w
  3092  07EF  3A00               	xorlw	0	; case 0
  3093  07F0  1903               	skipnz
  3094  07F1  2FF3               	goto	l3871
  3095  07F2  2FFE               	goto	l146
  3096  07F3                     l3871:
  3097                           
  3098                           ; Switch size 1, requested type "simple"
  3099                           ; Number of cases is 3, Range of values is 0 to 2
  3100                           ; switch strategies available:
  3101                           ; Name         Instructions Cycles
  3102                           ; simple_byte           10     6 (average)
  3103                           ; direct_byte           17     8 (fixed)
  3104                           ; jumptable            260     6 (fixed)
  3105                           ;	Chosen strategy is simple_byte
  3106  07F3  0842               	movf	??_LED_Control,w
  3107  07F4  3A00               	xorlw	0	; case 0
  3108  07F5  1903               	skipnz
  3109  07F6  2FE4               	goto	l3505
  3110  07F7  3A01               	xorlw	1	; case 1
  3111  07F8  1903               	skipnz
  3112  07F9  2FE2               	goto	l144
  3113  07FA  3A03               	xorlw	3	; case 2
  3114  07FB  1903               	skipnz
  3115  07FC  2FD4               	goto	l3503
  3116  07FD  2FFE               	goto	l146
  3117  07FE                     l146:
  3118  07FE  0008               	return
  3119  07FF                     __end_of_LED_Control:
  3120                           
  3121                           	psect	text13
  3122  0AD4                     __ptext13:	
  3123 ;; *************** function _LED_BLINKING *****************
  3124 ;; Defined at:
  3125 ;;		line 19 in file "Elements/Elements.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  Time_Ms         2   28[BANK0 ] unsigned int 
  3128 ;;  Task_Peroid     2   30[BANK0 ] unsigned int 
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3140 ;;      Params:         0       4       0       0       0
  3141 ;;      Locals:         0       0       0       0       0
  3142 ;;      Temps:          0       2       0       0       0
  3143 ;;      Totals:         0       6       0       0       0
  3144 ;;Total ram usage:        6 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    5
  3147 ;; This function calls:
  3148 ;;		___wmul
  3149 ;; This function is called by:
  3150 ;;		_LED_Control
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           
  3155                           ;psect for function _LED_BLINKING
  3156  0AD4                     _LED_BLINKING:
  3157  0AD4                     l3385:	
  3158                           ;incstack = 0
  3159 ;; hardware stack exceeded
  3160                           ; Regs used in _LED_BLINKING: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3161                           
  3162                           
  3163                           ;Elements/Elements.c: 19: void LED_BLINKING(uint16_t Time_Ms,uint16_t Task_Peroid);Eleme
      +                          nts/Elements.c: 20: {;Elements/Elements.c: 21:  static uint8_t Counter=1;;Elements/Eleme
      +                          nts.c: 23:    if(Counter*Task_Peroid==Time_Ms)
  3164  0AD4  1283               	bcf	3,5	;RP0=0, select bank0
  3165  0AD5  1303               	bcf	3,6	;RP1=0, select bank0
  3166  0AD6  0858               	movf	LED_BLINKING@Counter,w
  3167  0AD7  00C0               	movwf	??_LED_BLINKING
  3168  0AD8  01C1               	clrf	??_LED_BLINKING+1
  3169  0AD9  0840               	movf	??_LED_BLINKING,w
  3170  0ADA  00B6               	movwf	___wmul@multiplier
  3171  0ADB  0841               	movf	??_LED_BLINKING+1,w
  3172  0ADC  00B7               	movwf	___wmul@multiplier+1
  3173  0ADD  083F               	movf	LED_BLINKING@Task_Peroid+1,w
  3174  0ADE  00B9               	movwf	___wmul@multiplicand+1
  3175  0ADF  083E               	movf	LED_BLINKING@Task_Peroid,w
  3176  0AE0  00B8               	movwf	___wmul@multiplicand
  3177  0AE1  120A  158A  2284  120A  158A  	fcall	___wmul
  3178  0AE6  1283               	bcf	3,5	;RP0=0, select bank0
  3179  0AE7  1303               	bcf	3,6	;RP1=0, select bank0
  3180  0AE8  083D               	movf	LED_BLINKING@Time_Ms+1,w
  3181  0AE9  0637               	xorwf	?___wmul+1,w
  3182  0AEA  1D03               	skipz
  3183  0AEB  2AEE               	goto	u4515
  3184  0AEC  083C               	movf	LED_BLINKING@Time_Ms,w
  3185  0AED  0636               	xorwf	?___wmul,w
  3186  0AEE                     u4515:
  3187  0AEE  1D03               	skipz
  3188  0AEF  2AF1               	goto	u4511
  3189  0AF0  2AF2               	goto	u4510
  3190  0AF1                     u4511:
  3191  0AF1  2AF9               	goto	l3391
  3192  0AF2                     u4510:
  3193  0AF2                     l3387:
  3194                           
  3195                           ;Elements/Elements.c: 24:    {;Elements/Elements.c: 25:     (PORTB^= (1<<4));
  3196  0AF2  3010               	movlw	16
  3197  0AF3  00FF               	movwf	btemp+1
  3198  0AF4  087F               	movf	btemp+1,w
  3199  0AF5  0686               	xorwf	6,f	;volatile
  3200  0AF6                     l3389:
  3201                           
  3202                           ;Elements/Elements.c: 26:        Counter=1;
  3203  0AF6  01D8               	clrf	LED_BLINKING@Counter
  3204  0AF7  0AD8               	incf	LED_BLINKING@Counter,f
  3205                           
  3206                           ;Elements/Elements.c: 27:    }
  3207  0AF8  2AFD               	goto	l138
  3208  0AF9                     l3391:
  3209                           
  3210                           ;Elements/Elements.c: 29:    {;Elements/Elements.c: 30:     Counter++;
  3211  0AF9  3001               	movlw	1
  3212  0AFA  00FF               	movwf	btemp+1
  3213  0AFB  087F               	movf	btemp+1,w
  3214  0AFC  07D8               	addwf	LED_BLINKING@Counter,f
  3215  0AFD                     l138:
  3216  0AFD  0008               	return
  3217  0AFE                     __end_of_LED_BLINKING:
  3218                           
  3219                           	psect	text14
  3220  0E77                     __ptext14:	
  3221 ;; *************** function _Buttons_MainFunction *****************
  3222 ;; Defined at:
  3223 ;;		line 38 in file "Buttons/Buttons.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;		None
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;		None
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      void 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0, btemp+1
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3237 ;;      Params:         0       0       0       0       0
  3238 ;;      Locals:         0       0       0       0       0
  3239 ;;      Temps:          0       1       0       0       0
  3240 ;;      Totals:         0       1       0       0       0
  3241 ;;Total ram usage:        1 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:    4
  3244 ;; This function calls:
  3245 ;;		Nothing
  3246 ;; This function is called by:
  3247 ;;		_Scheduler_Task2
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           
  3252                           ;psect for function _Buttons_MainFunction
  3253  0E77                     _Buttons_MainFunction:
  3254  0E77                     l3583:	
  3255                           ;incstack = 0
  3256                           ; Regs used in _Buttons_MainFunction: [wreg+status,2+status,0+btemp+1]
  3257                           
  3258                           
  3259                           ;Buttons/Buttons.c: 40:     if(((((PORTB>>2)&1)==0) ||(((PORTB>>1)&1)==0)))
  3260  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3261  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3262  0E79  0806               	movf	6,w	;volatile
  3263  0E7A  00B6               	movwf	??_Buttons_MainFunction
  3264  0E7B  3002               	movlw	2
  3265  0E7C                     u4885:
  3266  0E7C  1003               	clrc
  3267  0E7D  0CB6               	rrf	??_Buttons_MainFunction,f
  3268  0E7E  3EFF               	addlw	-1
  3269  0E7F  1D03               	skipz
  3270  0E80  2E7C               	goto	u4885
  3271  0E81  1C36               	btfss	??_Buttons_MainFunction,0
  3272  0E82  2E84               	goto	u4891
  3273  0E83  2E85               	goto	u4890
  3274  0E84                     u4891:
  3275  0E84  2E91               	goto	l3587
  3276  0E85                     u4890:
  3277  0E85                     l3585:
  3278  0E85  0806               	movf	6,w	;volatile
  3279  0E86  00B6               	movwf	??_Buttons_MainFunction
  3280  0E87  3001               	movlw	1
  3281  0E88                     u4905:
  3282  0E88  1003               	clrc
  3283  0E89  0CB6               	rrf	??_Buttons_MainFunction,f
  3284  0E8A  3EFF               	addlw	-1
  3285  0E8B  1D03               	skipz
  3286  0E8C  2E88               	goto	u4905
  3287  0E8D  1836               	btfsc	??_Buttons_MainFunction,0
  3288  0E8E  2E90               	goto	u4911
  3289  0E8F  2E91               	goto	u4910
  3290  0E90                     u4911:
  3291  0E90  2ED3               	goto	l118
  3292  0E91                     u4910:
  3293  0E91                     l3587:
  3294                           
  3295                           ;Buttons/Buttons.c: 41:     {;Buttons/Buttons.c: 42:      if(Mode.Select_Mode==Normal_Mo
      +                          de)
  3296  0E91  0345               	decf	_Mode,w
  3297  0E92  1D03               	btfss	3,2
  3298  0E93  2E95               	goto	u4921
  3299  0E94  2E96               	goto	u4920
  3300  0E95                     u4921:
  3301  0E95  2E9B               	goto	l3591
  3302  0E96                     u4920:
  3303  0E96                     l3589:
  3304                           
  3305                           ;Buttons/Buttons.c: 43:         {;Buttons/Buttons.c: 44:          Mode.Select_Mode=Setti
      +                          ng_Mode;
  3306  0E96  3002               	movlw	2
  3307  0E97  00FF               	movwf	btemp+1
  3308  0E98  087F               	movf	btemp+1,w
  3309  0E99  00C5               	movwf	_Mode
  3310                           
  3311                           ;Buttons/Buttons.c: 45:         }
  3312  0E9A  2ED3               	goto	l118
  3313  0E9B                     l3591:
  3314  0E9B  3002               	movlw	2
  3315  0E9C  0645               	xorwf	_Mode,w
  3316  0E9D  1D03               	btfss	3,2
  3317  0E9E  2EA0               	goto	u4931
  3318  0E9F  2EA1               	goto	u4930
  3319  0EA0                     u4931:
  3320  0EA0  2ED3               	goto	l118
  3321  0EA1                     u4930:
  3322  0EA1                     l3593:
  3323                           
  3324                           ;Buttons/Buttons.c: 47:         {;Buttons/Buttons.c: 48:             if(((PORTB>>2)&1)==
      +                          0)
  3325  0EA1  0806               	movf	6,w	;volatile
  3326  0EA2  00B6               	movwf	??_Buttons_MainFunction
  3327  0EA3  3002               	movlw	2
  3328  0EA4                     u4945:
  3329  0EA4  1003               	clrc
  3330  0EA5  0CB6               	rrf	??_Buttons_MainFunction,f
  3331  0EA6  3EFF               	addlw	-1
  3332  0EA7  1D03               	skipz
  3333  0EA8  2EA4               	goto	u4945
  3334  0EA9  1836               	btfsc	??_Buttons_MainFunction,0
  3335  0EAA  2EAC               	goto	u4951
  3336  0EAB  2EAD               	goto	u4950
  3337  0EAC                     u4951:
  3338  0EAC  2EBA               	goto	l3597
  3339  0EAD                     u4950:
  3340  0EAD                     l3595:
  3341                           
  3342                           ;Buttons/Buttons.c: 49:             {;Buttons/Buttons.c: 50:                 Buttons.UpF
      +                          lag=Buttons.UpFlag=1;
  3343  0EAD  144D               	bsf	_Buttons,0
  3344  0EAE  184D               	btfsc	_Buttons,0
  3345  0EAF  2EB1               	goto	u4961
  3346  0EB0  2EB5               	goto	u4960
  3347  0EB1                     u4961:
  3348  0EB1  1283               	bcf	3,5	;RP0=0, select bank0
  3349  0EB2  1303               	bcf	3,6	;RP1=0, select bank0
  3350  0EB3  144D               	bsf	_Buttons,0
  3351  0EB4  2EB8               	goto	u4974
  3352  0EB5                     u4960:
  3353  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  3355  0EB7  104D               	bcf	_Buttons,0
  3356  0EB8                     u4974:
  3357                           
  3358                           ;Buttons/Buttons.c: 51:                 Buttons.DownFlag=0;
  3359  0EB8  10CD               	bcf	_Buttons,1
  3360                           
  3361                           ;Buttons/Buttons.c: 52:             }
  3362  0EB9  2ED3               	goto	l118
  3363  0EBA                     l3597:
  3364  0EBA  0806               	movf	6,w	;volatile
  3365  0EBB  00B6               	movwf	??_Buttons_MainFunction
  3366  0EBC  3001               	movlw	1
  3367  0EBD                     u4985:
  3368  0EBD  1003               	clrc
  3369  0EBE  0CB6               	rrf	??_Buttons_MainFunction,f
  3370  0EBF  3EFF               	addlw	-1
  3371  0EC0  1D03               	skipz
  3372  0EC1  2EBD               	goto	u4985
  3373  0EC2  1836               	btfsc	??_Buttons_MainFunction,0
  3374  0EC3  2EC5               	goto	u4991
  3375  0EC4  2EC6               	goto	u4990
  3376  0EC5                     u4991:
  3377  0EC5  2ED3               	goto	l113
  3378  0EC6                     u4990:
  3379  0EC6                     l3599:
  3380                           
  3381                           ;Buttons/Buttons.c: 54:             {;Buttons/Buttons.c: 55:                Buttons.Down
      +                          Flag=Buttons.DownFlag=1;
  3382  0EC6  14CD               	bsf	_Buttons,1
  3383  0EC7  18CD               	btfsc	_Buttons,1
  3384  0EC8  2ECA               	goto	u5001
  3385  0EC9  2ECE               	goto	u5000
  3386  0ECA                     u5001:
  3387  0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  3388  0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  3389  0ECC  14CD               	bsf	_Buttons,1
  3390  0ECD  2ED1               	goto	u5014
  3391  0ECE                     u5000:
  3392  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  3393  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  3394  0ED0  10CD               	bcf	_Buttons,1
  3395  0ED1                     u5014:
  3396                           
  3397                           ;Buttons/Buttons.c: 56:                Buttons.UpFlag=0;
  3398  0ED1  104D               	bcf	_Buttons,0
  3399  0ED2  2ED3               	goto	l118
  3400  0ED3                     l113:
  3401  0ED3                     l118:
  3402  0ED3  0008               	return
  3403  0ED4                     __end_of_Buttons_MainFunction:
  3404                           
  3405                           	psect	text15
  3406  09D5                     __ptext15:	
  3407 ;; *************** function _ADC_Conv_MainFunction *****************
  3408 ;; Defined at:
  3409 ;;		line 47 in file "ADC/ADC.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;		None
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;		None
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3423 ;;      Params:         0       0       0       0       0
  3424 ;;      Locals:         0       0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0
  3426 ;;      Totals:         0       0       0       0       0
  3427 ;;Total ram usage:        0 bytes
  3428 ;; Hardware stack levels used:    1
  3429 ;; Hardware stack levels required when called:    8
  3430 ;; This function calls:
  3431 ;;		_ADC_Value_Ready_CallBack
  3432 ;; This function is called by:
  3433 ;;		_Scheduler_Task2
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           
  3438                           ;psect for function _ADC_Conv_MainFunction
  3439  09D5                     _ADC_Conv_MainFunction:
  3440  09D5                     l3573:	
  3441                           ;incstack = 0
  3442 ;; hardware stack exceeded
  3443                           ; Regs used in _ADC_Conv_MainFunction: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3444                           
  3445                           
  3446                           ;ADC/ADC.c: 49:  if( ADC_Info.ADC_START_FLAG==1 && Mode.Select_Mode==Normal_Mode)
  3447  09D5  1283               	bcf	3,5	;RP0=0, select bank0
  3448  09D6  1303               	bcf	3,6	;RP1=0, select bank0
  3449  09D7  1CD0               	btfss	_ADC_Info,1
  3450  09D8  29DA               	goto	u4851
  3451  09D9  29DB               	goto	u4850
  3452  09DA                     u4851:
  3453  09DA  29EC               	goto	l30
  3454  09DB                     u4850:
  3455  09DB                     l3575:
  3456  09DB  0345               	decf	_Mode,w
  3457  09DC  1D03               	btfss	3,2
  3458  09DD  29DF               	goto	u4861
  3459  09DE  29E0               	goto	u4860
  3460  09DF                     u4861:
  3461  09DF  29EC               	goto	l30
  3462  09E0                     u4860:
  3463  09E0                     l3577:
  3464                           
  3465                           ;ADC/ADC.c: 50:  {;ADC/ADC.c: 51:      if(ADCON0bits.GO_DONE==0)
  3466  09E0  191F               	btfsc	31,2	;volatile
  3467  09E1  29E3               	goto	u4871
  3468  09E2  29E4               	goto	u4870
  3469  09E3                     u4871:
  3470  09E3  29EC               	goto	l30
  3471  09E4                     u4870:
  3472  09E4                     l3579:
  3473                           
  3474                           ;ADC/ADC.c: 52:      {;ADC/ADC.c: 53:       ADC_Value_Ready_CallBack();
  3475  09E4  120A  158A  2104  120A  158A  	fcall	_ADC_Value_Ready_CallBack
  3476  09E9                     l3581:
  3477                           
  3478                           ;ADC/ADC.c: 54:       ADCON0bits.GO_DONE=1;
  3479  09E9  1283               	bcf	3,5	;RP0=0, select bank0
  3480  09EA  1303               	bcf	3,6	;RP1=0, select bank0
  3481  09EB  151F               	bsf	31,2	;volatile
  3482  09EC                     l30:
  3483  09EC  0008               	return
  3484  09ED                     __end_of_ADC_Conv_MainFunction:
  3485                           
  3486                           	psect	text16
  3487  0904                     __ptext16:	
  3488 ;; *************** function _ADC_Value_Ready_CallBack *****************
  3489 ;; Defined at:
  3490 ;;		line 59 in file "ADC/ADC.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;		None
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;		None
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3504 ;;      Params:         0       0       0       0       0
  3505 ;;      Locals:         0       0       0       0       0
  3506 ;;      Temps:          0       0       0       0       0
  3507 ;;      Totals:         0       0       0       0       0
  3508 ;;Total ram usage:        0 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; Hardware stack levels required when called:    7
  3511 ;; This function calls:
  3512 ;;		_Temperature_Calc
  3513 ;; This function is called by:
  3514 ;;		_ADC_Conv_MainFunction
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           
  3519                           ;psect for function _ADC_Value_Ready_CallBack
  3520  0904                     _ADC_Value_Ready_CallBack:
  3521  0904                     l3499:	
  3522                           ;incstack = 0
  3523 ;; hardware stack exceeded
  3524                           ; Regs used in _ADC_Value_Ready_CallBack: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  3525                           
  3526                           
  3527                           ;ADC/ADC.c: 61:   Temperature_Calc((ADRESH<<8)|(ADRESL));
  3528  0904  1683               	bsf	3,5	;RP0=1, select bank1
  3529  0905  1303               	bcf	3,6	;RP1=0, select bank1
  3530  0906  081E               	movf	30,w	;volatile
  3531  0907  120A  118A  256E  120A  158A  	fcall	_Temperature_Calc
  3532  090C                     l33:
  3533  090C  0008               	return
  3534  090D                     __end_of_ADC_Value_Ready_CallBack:
  3535                           
  3536                           	psect	text17
  3537  056E                     __ptext17:	
  3538 ;; *************** function _Temperature_Calc *****************
  3539 ;; Defined at:
  3540 ;;		line 14 in file "Temperature/Temperature.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;  ADC_VALUE       1    wreg     unsigned char 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  ADC_VALUE       1   28[BANK1 ] unsigned char 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3554 ;;      Params:         0       0       0       0       0
  3555 ;;      Locals:         0       0       1       0       0
  3556 ;;      Temps:          0       0       0       4       0
  3557 ;;      Totals:         0       0       1       4       0
  3558 ;;Total ram usage:        5 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    6
  3561 ;; This function calls:
  3562 ;;		_Average_Value
  3563 ;;		___flmul
  3564 ;;		___fltol
  3565 ;;		___lwmod
  3566 ;;		___xxtofl
  3567 ;; This function is called by:
  3568 ;;		_ADC_Value_Ready_CallBack
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           
  3573                           ;psect for function _Temperature_Calc
  3574  056E                     _Temperature_Calc:
  3575                           
  3576                           ;incstack = 0
  3577 ;; hardware stack exceeded
  3578                           ; Regs used in _Temperature_Calc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3579                           ;Temperature_Calc@ADC_VALUE stored from wreg
  3580  056E  1683               	bsf	3,5	;RP0=1, select bank1
  3581  056F  1303               	bcf	3,6	;RP1=0, select bank1
  3582  0570  00EF               	movwf	Temperature_Calc@ADC_VALUE^(0+128)
  3583  0571                     l3375:
  3584                           
  3585                           ;Temperature/Temperature.c: 14: void Temperature_Calc(uint8_t ADC_VALUE);Temperature/Tem
      +                          perature.c: 15: {;Temperature/Temperature.c: 16:  Temperature.Temp_Value=ADC_VALUE * 0.4
      +                          882;
  3586  0571  086F               	movf	Temperature_Calc@ADC_VALUE^(0+128),w
  3587  0572  1683               	bsf	3,5	;RP0=1, select bank3
  3588  0573  1703               	bsf	3,6	;RP1=1, select bank3
  3589  0574  0098               	movwf	??_Temperature_Calc^(0+384)
  3590  0575  0199               	clrf	(??_Temperature_Calc^(0+384)+1)
  3591  0576  019A               	clrf	(??_Temperature_Calc^(0+384)+2)
  3592  0577  019B               	clrf	(??_Temperature_Calc^(0+384)+3)
  3593  0578  081B               	movf	(??_Temperature_Calc+3)^(0+384),w
  3594  0579  1283               	bcf	3,5	;RP0=0, select bank0
  3595  057A  1303               	bcf	3,6	;RP1=0, select bank0
  3596  057B  00B9               	movwf	___xxtofl@val+3
  3597  057C  1683               	bsf	3,5	;RP0=1, select bank3
  3598  057D  1703               	bsf	3,6	;RP1=1, select bank3
  3599  057E  081A               	movf	(??_Temperature_Calc+2)^(0+384),w
  3600  057F  1283               	bcf	3,5	;RP0=0, select bank0
  3601  0580  1303               	bcf	3,6	;RP1=0, select bank0
  3602  0581  00B8               	movwf	___xxtofl@val+2
  3603  0582  1683               	bsf	3,5	;RP0=1, select bank3
  3604  0583  1703               	bsf	3,6	;RP1=1, select bank3
  3605  0584  0819               	movf	(??_Temperature_Calc+1)^(0+384),w
  3606  0585  1283               	bcf	3,5	;RP0=0, select bank0
  3607  0586  1303               	bcf	3,6	;RP1=0, select bank0
  3608  0587  00B7               	movwf	___xxtofl@val+1
  3609  0588  1683               	bsf	3,5	;RP0=1, select bank3
  3610  0589  1703               	bsf	3,6	;RP1=1, select bank3
  3611  058A  0818               	movf	??_Temperature_Calc^(0+384),w
  3612  058B  1283               	bcf	3,5	;RP0=0, select bank0
  3613  058C  1303               	bcf	3,6	;RP1=0, select bank0
  3614  058D  00B6               	movwf	___xxtofl@val
  3615  058E  3001               	movlw	1
  3616  058F  120A  118A  240C  120A  118A  	fcall	___xxtofl
  3617  0594  1283               	bcf	3,5	;RP0=0, select bank0
  3618  0595  1303               	bcf	3,6	;RP1=0, select bank0
  3619  0596  0839               	movf	?___xxtofl+3,w
  3620  0597  1683               	bsf	3,5	;RP0=1, select bank1
  3621  0598  1303               	bcf	3,6	;RP1=0, select bank1
  3622  0599  00DA               	movwf	(___flmul@a+3)^(0+128)
  3623  059A  1283               	bcf	3,5	;RP0=0, select bank0
  3624  059B  1303               	bcf	3,6	;RP1=0, select bank0
  3625  059C  0838               	movf	?___xxtofl+2,w
  3626  059D  1683               	bsf	3,5	;RP0=1, select bank1
  3627  059E  1303               	bcf	3,6	;RP1=0, select bank1
  3628  059F  00D9               	movwf	(___flmul@a+2)^(0+128)
  3629  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  3630  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  3631  05A2  0837               	movf	?___xxtofl+1,w
  3632  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  3633  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  3634  05A5  00D8               	movwf	(___flmul@a+1)^(0+128)
  3635  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  3636  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  3637  05A8  0836               	movf	?___xxtofl,w
  3638  05A9  1683               	bsf	3,5	;RP0=1, select bank1
  3639  05AA  1303               	bcf	3,6	;RP1=0, select bank1
  3640  05AB  00D7               	movwf	___flmul@a^(0+128)
  3641  05AC  303E               	movlw	62
  3642  05AD  00D6               	movwf	(___flmul@b+3)^(0+128)
  3643  05AE  30F9               	movlw	249
  3644  05AF  00D5               	movwf	(___flmul@b+2)^(0+128)
  3645  05B0  30F5               	movlw	245
  3646  05B1  00D4               	movwf	(___flmul@b+1)^(0+128)
  3647  05B2  305A               	movlw	90
  3648  05B3  00D3               	movwf	___flmul@b^(0+128)
  3649  05B4  120A  118A  2051  120A  118A  	fcall	___flmul
  3650  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  3651  05BA  1303               	bcf	3,6	;RP1=0, select bank1
  3652  05BB  0856               	movf	(?___flmul+3)^(0+128),w
  3653  05BC  1683               	bsf	3,5	;RP0=1, select bank3
  3654  05BD  1703               	bsf	3,6	;RP1=1, select bank3
  3655  05BE  0093               	movwf	(___fltol@f1+3)^(0+384)
  3656  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  3657  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  3658  05C1  0855               	movf	(?___flmul+2)^(0+128),w
  3659  05C2  1683               	bsf	3,5	;RP0=1, select bank3
  3660  05C3  1703               	bsf	3,6	;RP1=1, select bank3
  3661  05C4  0092               	movwf	(___fltol@f1+2)^(0+384)
  3662  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  3663  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  3664  05C7  0854               	movf	(?___flmul+1)^(0+128),w
  3665  05C8  1683               	bsf	3,5	;RP0=1, select bank3
  3666  05C9  1703               	bsf	3,6	;RP1=1, select bank3
  3667  05CA  0091               	movwf	(___fltol@f1+1)^(0+384)
  3668  05CB  1683               	bsf	3,5	;RP0=1, select bank1
  3669  05CC  1303               	bcf	3,6	;RP1=0, select bank1
  3670  05CD  0853               	movf	?___flmul^(0+128),w
  3671  05CE  1683               	bsf	3,5	;RP0=1, select bank3
  3672  05CF  1703               	bsf	3,6	;RP1=1, select bank3
  3673  05D0  0090               	movwf	___fltol@f1^(0+384)
  3674  05D1  120A  118A  2608  120A  118A  	fcall	___fltol
  3675  05D6  1683               	bsf	3,5	;RP0=1, select bank3
  3676  05D7  1703               	bsf	3,6	;RP1=1, select bank3
  3677  05D8  0810               	movf	?___fltol^(0+384),w
  3678  05D9  00FF               	movwf	btemp+1
  3679  05DA  087F               	movf	btemp+1,w
  3680  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  3681  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  3682  05DD  00D1               	movwf	_Temperature
  3683  05DE                     l3377:
  3684                           
  3685                           ;Temperature/Temperature.c: 17:  Average_Value(Temperature.Temp_Value, &Temperature.Aver
      +                          age_Value);
  3686  05DE  3052               	movlw	(low ((_Temperature| 0+1)))& (0+255)
  3687  05DF  00FF               	movwf	btemp+1
  3688  05E0  087F               	movf	btemp+1,w
  3689  05E1  00C4               	movwf	Average_Value@Avrage_Values
  3690  05E2  0851               	movf	_Temperature,w
  3691  05E3  120A  118A  24C8  120A  118A  	fcall	_Average_Value
  3692  05E8                     l3379:
  3693                           
  3694                           ;Temperature/Temperature.c: 18:  Temperature.Average_NValues=(Temperature.Average_NValue
      +                          s+1)%10U;
  3695  05E8  300A               	movlw	10
  3696  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  3697  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  3698  05EB  00B6               	movwf	___lwmod@divisor
  3699  05EC  3000               	movlw	0
  3700  05ED  00B7               	movwf	___lwmod@divisor+1
  3701  05EE  0855               	movf	_Temperature+4,w
  3702  05EF  3E01               	addlw	1
  3703  05F0  00B8               	movwf	___lwmod@dividend
  3704  05F1  3000               	movlw	0
  3705  05F2  1803               	skipnc
  3706  05F3  3001               	movlw	1
  3707  05F4  00B9               	movwf	___lwmod@dividend+1
  3708  05F5  120A  158A  2469  120A  118A  	fcall	___lwmod
  3709  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  3710  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  3711  05FC  0836               	movf	?___lwmod,w
  3712  05FD  00FF               	movwf	btemp+1
  3713  05FE  087F               	movf	btemp+1,w
  3714  05FF  00D5               	movwf	_Temperature+4
  3715  0600                     l3381:
  3716                           
  3717                           ;Temperature/Temperature.c: 20:  if(Temperature.Average_NValues==9)
  3718  0600  3009               	movlw	9
  3719  0601  0655               	xorwf	_Temperature+4,w
  3720  0602  1D03               	btfss	3,2
  3721  0603  2E05               	goto	u4501
  3722  0604  2E06               	goto	u4500
  3723  0605                     u4501:
  3724  0605  2E07               	goto	l308
  3725  0606                     u4500:
  3726  0606                     l3383:
  3727                           
  3728                           ;Temperature/Temperature.c: 21:  {;Temperature/Temperature.c: 22:        Temperature.Ave
      +                          rage_Value_Ready_Flag=1;
  3729  0606  1454               	bsf	_Temperature+3,0
  3730  0607                     l308:
  3731  0607  0008               	return
  3732  0608                     __end_of_Temperature_Calc:
  3733                           
  3734                           	psect	text18
  3735  040C                     __ptext18:	
  3736 ;; *************** function ___xxtofl *****************
  3737 ;; Defined at:
  3738 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  sign            1    wreg     unsigned char 
  3741 ;;  val             4   22[BANK0 ] long 
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;  sign            1   30[BANK0 ] unsigned char 
  3744 ;;  arg             4   32[BANK0 ] unsigned long 
  3745 ;;  exp             1   31[BANK0 ] unsigned char 
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  4   22[BANK0 ] unsigned char 
  3748 ;; Registers used:
  3749 ;;		wreg, status,2, status,0, btemp+1
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3755 ;;      Params:         0       4       0       0       0
  3756 ;;      Locals:         0       6       0       0       0
  3757 ;;      Temps:          0       4       0       0       0
  3758 ;;      Totals:         0      14       0       0       0
  3759 ;;Total ram usage:       14 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; Hardware stack levels required when called:    4
  3762 ;; This function calls:
  3763 ;;		Nothing
  3764 ;; This function is called by:
  3765 ;;		_Temperature_Calc
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           
  3770                           ;psect for function ___xxtofl
  3771  040C                     ___xxtofl:
  3772                           
  3773                           ;incstack = 0
  3774 ;; hardware stack exceeded
  3775                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  3776                           ;___xxtofl@sign stored from wreg
  3777  040C  1283               	bcf	3,5	;RP0=0, select bank0
  3778  040D  1303               	bcf	3,6	;RP1=0, select bank0
  3779  040E  00BE               	movwf	___xxtofl@sign
  3780  040F                     l3327:
  3781  040F  083E               	movf	___xxtofl@sign,w
  3782  0410  1903               	btfsc	3,2
  3783  0411  2C13               	goto	u4361
  3784  0412  2C14               	goto	u4360
  3785  0413                     u4361:
  3786  0413  2C28               	goto	l3333
  3787  0414                     u4360:
  3788  0414                     l3329:
  3789  0414  1FB9               	btfss	___xxtofl@val+3,7
  3790  0415  2C17               	goto	u4371
  3791  0416  2C18               	goto	u4370
  3792  0417                     u4371:
  3793  0417  2C28               	goto	l3333
  3794  0418                     u4370:
  3795  0418                     l3331:
  3796  0418  0936               	comf	___xxtofl@val,w
  3797  0419  00C0               	movwf	___xxtofl@arg
  3798  041A  0937               	comf	___xxtofl@val+1,w
  3799  041B  00C1               	movwf	___xxtofl@arg+1
  3800  041C  0938               	comf	___xxtofl@val+2,w
  3801  041D  00C2               	movwf	___xxtofl@arg+2
  3802  041E  0939               	comf	___xxtofl@val+3,w
  3803  041F  00C3               	movwf	___xxtofl@arg+3
  3804  0420  0AC0               	incf	___xxtofl@arg,f
  3805  0421  1903               	skipnz
  3806  0422  0AC1               	incf	___xxtofl@arg+1,f
  3807  0423  1903               	skipnz
  3808  0424  0AC2               	incf	___xxtofl@arg+2,f
  3809  0425  1903               	skipnz
  3810  0426  0AC3               	incf	___xxtofl@arg+3,f
  3811  0427  2C30               	goto	l1036
  3812  0428                     l3333:
  3813  0428  0839               	movf	___xxtofl@val+3,w
  3814  0429  00C3               	movwf	___xxtofl@arg+3
  3815  042A  0838               	movf	___xxtofl@val+2,w
  3816  042B  00C2               	movwf	___xxtofl@arg+2
  3817  042C  0837               	movf	___xxtofl@val+1,w
  3818  042D  00C1               	movwf	___xxtofl@arg+1
  3819  042E  0836               	movf	___xxtofl@val,w
  3820  042F  00C0               	movwf	___xxtofl@arg
  3821  0430                     l1036:
  3822  0430  0839               	movf	___xxtofl@val+3,w
  3823  0431  0438               	iorwf	___xxtofl@val+2,w
  3824  0432  0437               	iorwf	___xxtofl@val+1,w
  3825  0433  0436               	iorwf	___xxtofl@val,w
  3826  0434  1D03               	skipz
  3827  0435  2C37               	goto	u4381
  3828  0436  2C38               	goto	u4380
  3829  0437                     u4381:
  3830  0437  2C41               	goto	l3339
  3831  0438                     u4380:
  3832  0438                     l3335:
  3833  0438  3000               	movlw	0
  3834  0439  00B9               	movwf	?___xxtofl+3
  3835  043A  3000               	movlw	0
  3836  043B  00B8               	movwf	?___xxtofl+2
  3837  043C  3000               	movlw	0
  3838  043D  00B7               	movwf	?___xxtofl+1
  3839  043E  3000               	movlw	0
  3840  043F  00B6               	movwf	?___xxtofl
  3841  0440  2CC7               	goto	l1038
  3842  0441                     l3339:
  3843  0441  3096               	movlw	150
  3844  0442  00FF               	movwf	btemp+1
  3845  0443  087F               	movf	btemp+1,w
  3846  0444  00BF               	movwf	___xxtofl@exp
  3847  0445  2C53               	goto	l3345
  3848  0446                     l3341:
  3849  0446  3001               	movlw	1
  3850  0447  00FF               	movwf	btemp+1
  3851  0448  087F               	movf	btemp+1,w
  3852  0449  07BF               	addwf	___xxtofl@exp,f
  3853  044A                     l3343:
  3854  044A  3001               	movlw	1
  3855  044B                     u4395:
  3856  044B  1003               	clrc
  3857  044C  0CC3               	rrf	___xxtofl@arg+3,f
  3858  044D  0CC2               	rrf	___xxtofl@arg+2,f
  3859  044E  0CC1               	rrf	___xxtofl@arg+1,f
  3860  044F  0CC0               	rrf	___xxtofl@arg,f
  3861  0450  3EFF               	addlw	-1
  3862  0451  1D03               	skipz
  3863  0452  2C4B               	goto	u4395
  3864  0453                     l3345:
  3865  0453  30FE               	movlw	254
  3866  0454  0543               	andwf	___xxtofl@arg+3,w
  3867  0455  1D03               	btfss	3,2
  3868  0456  2C58               	goto	u4401
  3869  0457  2C59               	goto	u4400
  3870  0458                     u4401:
  3871  0458  2C46               	goto	l3341
  3872  0459                     u4400:
  3873  0459  2C75               	goto	l3353
  3874  045A                     l3347:
  3875  045A  3001               	movlw	1
  3876  045B  00FF               	movwf	btemp+1
  3877  045C  087F               	movf	btemp+1,w
  3878  045D  07BF               	addwf	___xxtofl@exp,f
  3879  045E                     l3349:
  3880  045E  3001               	movlw	1
  3881  045F  07C0               	addwf	___xxtofl@arg,f
  3882  0460  3000               	movlw	0
  3883  0461  1803               	skipnc
  3884  0462  3001               	movlw	1
  3885  0463  07C1               	addwf	___xxtofl@arg+1,f
  3886  0464  3000               	movlw	0
  3887  0465  1803               	skipnc
  3888  0466  3001               	movlw	1
  3889  0467  07C2               	addwf	___xxtofl@arg+2,f
  3890  0468  3000               	movlw	0
  3891  0469  1803               	skipnc
  3892  046A  3001               	movlw	1
  3893  046B  07C3               	addwf	___xxtofl@arg+3,f
  3894  046C                     l3351:
  3895  046C  3001               	movlw	1
  3896  046D                     u4415:
  3897  046D  1003               	clrc
  3898  046E  0CC3               	rrf	___xxtofl@arg+3,f
  3899  046F  0CC2               	rrf	___xxtofl@arg+2,f
  3900  0470  0CC1               	rrf	___xxtofl@arg+1,f
  3901  0471  0CC0               	rrf	___xxtofl@arg,f
  3902  0472  3EFF               	addlw	-1
  3903  0473  1D03               	skipz
  3904  0474  2C6D               	goto	u4415
  3905  0475                     l3353:
  3906  0475  30FF               	movlw	255
  3907  0476  0543               	andwf	___xxtofl@arg+3,w
  3908  0477  1D03               	btfss	3,2
  3909  0478  2C7A               	goto	u4421
  3910  0479  2C7B               	goto	u4420
  3911  047A                     u4421:
  3912  047A  2C5A               	goto	l3347
  3913  047B                     u4420:
  3914  047B  2C87               	goto	l3357
  3915  047C                     l3355:
  3916  047C  3001               	movlw	1
  3917  047D  02BF               	subwf	___xxtofl@exp,f
  3918  047E  3001               	movlw	1
  3919  047F  00BA               	movwf	??___xxtofl
  3920  0480                     u4435:
  3921  0480  1003               	clrc
  3922  0481  0DC0               	rlf	___xxtofl@arg,f
  3923  0482  0DC1               	rlf	___xxtofl@arg+1,f
  3924  0483  0DC2               	rlf	___xxtofl@arg+2,f
  3925  0484  0DC3               	rlf	___xxtofl@arg+3,f
  3926  0485  0BBA               	decfsz	??___xxtofl,f
  3927  0486  2C80               	goto	u4435
  3928  0487                     l3357:
  3929  0487  1BC2               	btfsc	___xxtofl@arg+2,7
  3930  0488  2C8A               	goto	u4441
  3931  0489  2C8B               	goto	u4440
  3932  048A                     u4441:
  3933  048A  2C91               	goto	l1049
  3934  048B                     u4440:
  3935  048B                     l3359:
  3936  048B  3002               	movlw	2
  3937  048C  023F               	subwf	___xxtofl@exp,w
  3938  048D  1803               	skipnc
  3939  048E  2C90               	goto	u4451
  3940  048F  2C91               	goto	u4450
  3941  0490                     u4451:
  3942  0490  2C7C               	goto	l3355
  3943  0491                     u4450:
  3944  0491                     l1049:
  3945  0491  183F               	btfsc	___xxtofl@exp,0
  3946  0492  2C94               	goto	u4461
  3947  0493  2C95               	goto	u4460
  3948  0494                     u4461:
  3949  0494  2C9D               	goto	l1050
  3950  0495                     u4460:
  3951  0495                     l3361:
  3952  0495  30FF               	movlw	255
  3953  0496  05C0               	andwf	___xxtofl@arg,f
  3954  0497  30FF               	movlw	255
  3955  0498  05C1               	andwf	___xxtofl@arg+1,f
  3956  0499  307F               	movlw	127
  3957  049A  05C2               	andwf	___xxtofl@arg+2,f
  3958  049B  30FF               	movlw	255
  3959  049C  05C3               	andwf	___xxtofl@arg+3,f
  3960  049D                     l1050:
  3961  049D  1003               	clrc
  3962  049E  0CBF               	rrf	___xxtofl@exp,f
  3963  049F                     l3363:
  3964  049F  083F               	movf	___xxtofl@exp,w
  3965  04A0  00BA               	movwf	??___xxtofl
  3966  04A1  01BB               	clrf	??___xxtofl+1
  3967  04A2  01BC               	clrf	??___xxtofl+2
  3968  04A3  01BD               	clrf	??___xxtofl+3
  3969  04A4  3018               	movlw	24
  3970  04A5                     u4475:
  3971  04A5  1003               	clrc
  3972  04A6  0DBA               	rlf	??___xxtofl,f
  3973  04A7  0DBB               	rlf	??___xxtofl+1,f
  3974  04A8  0DBC               	rlf	??___xxtofl+2,f
  3975  04A9  0DBD               	rlf	??___xxtofl+3,f
  3976  04AA                     u4470:
  3977  04AA  3EFF               	addlw	-1
  3978  04AB  1D03               	skipz
  3979  04AC  2CA5               	goto	u4475
  3980  04AD  083A               	movf	??___xxtofl,w
  3981  04AE  04C0               	iorwf	___xxtofl@arg,f
  3982  04AF  083B               	movf	??___xxtofl+1,w
  3983  04B0  04C1               	iorwf	___xxtofl@arg+1,f
  3984  04B1  083C               	movf	??___xxtofl+2,w
  3985  04B2  04C2               	iorwf	___xxtofl@arg+2,f
  3986  04B3  083D               	movf	??___xxtofl+3,w
  3987  04B4  04C3               	iorwf	___xxtofl@arg+3,f
  3988  04B5                     l3365:
  3989  04B5  083E               	movf	___xxtofl@sign,w
  3990  04B6  1903               	btfsc	3,2
  3991  04B7  2CB9               	goto	u4481
  3992  04B8  2CBA               	goto	u4480
  3993  04B9                     u4481:
  3994  04B9  2CBF               	goto	l3371
  3995  04BA                     u4480:
  3996  04BA                     l3367:
  3997  04BA  1FB9               	btfss	___xxtofl@val+3,7
  3998  04BB  2CBD               	goto	u4491
  3999  04BC  2CBE               	goto	u4490
  4000  04BD                     u4491:
  4001  04BD  2CBF               	goto	l3371
  4002  04BE                     u4490:
  4003  04BE                     l3369:
  4004  04BE  17C3               	bsf	___xxtofl@arg+3,7
  4005  04BF                     l3371:
  4006  04BF  0843               	movf	___xxtofl@arg+3,w
  4007  04C0  00B9               	movwf	?___xxtofl+3
  4008  04C1  0842               	movf	___xxtofl@arg+2,w
  4009  04C2  00B8               	movwf	?___xxtofl+2
  4010  04C3  0841               	movf	___xxtofl@arg+1,w
  4011  04C4  00B7               	movwf	?___xxtofl+1
  4012  04C5  0840               	movf	___xxtofl@arg,w
  4013  04C6  00B6               	movwf	?___xxtofl
  4014  04C7                     l1038:
  4015  04C7  0008               	return
  4016  04C8                     __end_of___xxtofl:
  4017                           
  4018                           	psect	text19
  4019  0608                     __ptext19:	
  4020 ;; *************** function ___fltol *****************
  4021 ;; Defined at:
  4022 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  f1              4    0[BANK3 ] unsigned char 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  exp1            1   27[BANK1 ] unsigned char 
  4027 ;;  sign1           1   26[BANK1 ] unsigned char 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  4    0[BANK3 ] long 
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0, btemp+1
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4037 ;;      Params:         0       0       0       4       0
  4038 ;;      Locals:         0       0       2       0       0
  4039 ;;      Temps:          0       0       0       4       0
  4040 ;;      Totals:         0       0       2       8       0
  4041 ;;Total ram usage:       10 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    4
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_Temperature_Calc
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           
  4052                           ;psect for function ___fltol
  4053  0608                     ___fltol:
  4054  0608                     l3147:	
  4055                           ;incstack = 0
  4056 ;; hardware stack exceeded
  4057                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  4058                           
  4059  0608  1003               	clrc
  4060  0609  1683               	bsf	3,5	;RP0=1, select bank3
  4061  060A  1703               	bsf	3,6	;RP1=1, select bank3
  4062  060B  0D12               	rlf	(___fltol@f1+2)^(0+384),w
  4063  060C  0D13               	rlf	(___fltol@f1+3)^(0+384),w
  4064  060D  00FF               	movwf	btemp+1
  4065  060E  087F               	movf	btemp+1,w
  4066  060F  1683               	bsf	3,5	;RP0=1, select bank1
  4067  0610  1303               	bcf	3,6	;RP1=0, select bank1
  4068  0611  00EE               	movwf	___fltol@exp1^(0+128)
  4069  0612  086E               	movf	___fltol@exp1^(0+128),w
  4070  0613  1D03               	btfss	3,2
  4071  0614  2E16               	goto	u3891
  4072  0615  2E17               	goto	u3890
  4073  0616                     u3891:
  4074  0616  2E22               	goto	l3153
  4075  0617                     u3890:
  4076  0617                     l3149:
  4077  0617  3000               	movlw	0
  4078  0618  1683               	bsf	3,5	;RP0=1, select bank3
  4079  0619  1703               	bsf	3,6	;RP1=1, select bank3
  4080  061A  0093               	movwf	(?___fltol+3)^(0+384)
  4081  061B  3000               	movlw	0
  4082  061C  0092               	movwf	(?___fltol+2)^(0+384)
  4083  061D  3000               	movlw	0
  4084  061E  0091               	movwf	(?___fltol+1)^(0+384)
  4085  061F  3000               	movlw	0
  4086  0620  0090               	movwf	?___fltol^(0+384)
  4087  0621  2E99               	goto	l789
  4088  0622                     l3153:
  4089  0622  1683               	bsf	3,5	;RP0=1, select bank3
  4090  0623  1703               	bsf	3,6	;RP1=1, select bank3
  4091  0624  0810               	movf	___fltol@f1^(0+384),w
  4092  0625  0094               	movwf	??___fltol^(0+384)
  4093  0626  0811               	movf	(___fltol@f1+1)^(0+384),w
  4094  0627  0095               	movwf	(??___fltol^(0+384)+1)
  4095  0628  0812               	movf	(___fltol@f1+2)^(0+384),w
  4096  0629  0096               	movwf	(??___fltol^(0+384)+2)
  4097  062A  0813               	movf	(___fltol@f1+3)^(0+384),w
  4098  062B  0097               	movwf	(??___fltol^(0+384)+3)
  4099  062C  301F               	movlw	31
  4100  062D                     u3905:
  4101  062D  1003               	clrc
  4102  062E  0C97               	rrf	(??___fltol^(0+384)+3),f
  4103  062F  0C96               	rrf	(??___fltol^(0+384)+2),f
  4104  0630  0C95               	rrf	(??___fltol^(0+384)+1),f
  4105  0631  0C94               	rrf	??___fltol^(0+384),f
  4106  0632                     u3900:
  4107  0632  3EFF               	addlw	-1
  4108  0633  1D03               	skipz
  4109  0634  2E2D               	goto	u3905
  4110  0635  0814               	movf	??___fltol^(0+384),w
  4111  0636  00FF               	movwf	btemp+1
  4112  0637  087F               	movf	btemp+1,w
  4113  0638  1683               	bsf	3,5	;RP0=1, select bank1
  4114  0639  1303               	bcf	3,6	;RP1=0, select bank1
  4115  063A  00ED               	movwf	___fltol@sign1^(0+128)
  4116  063B                     l3155:
  4117  063B  1683               	bsf	3,5	;RP0=1, select bank3
  4118  063C  1703               	bsf	3,6	;RP1=1, select bank3
  4119  063D  1792               	bsf	(___fltol@f1^(0+384)+2),7
  4120  063E                     l3157:
  4121  063E  30FF               	movlw	255
  4122  063F  0590               	andwf	___fltol@f1^(0+384),f
  4123  0640  30FF               	movlw	255
  4124  0641  0591               	andwf	(___fltol@f1+1)^(0+384),f
  4125  0642  30FF               	movlw	255
  4126  0643  0592               	andwf	(___fltol@f1+2)^(0+384),f
  4127  0644  3000               	movlw	0
  4128  0645  0593               	andwf	(___fltol@f1+3)^(0+384),f
  4129  0646                     l3159:
  4130  0646  3096               	movlw	150
  4131  0647  1683               	bsf	3,5	;RP0=1, select bank1
  4132  0648  1303               	bcf	3,6	;RP1=0, select bank1
  4133  0649  02EE               	subwf	___fltol@exp1^(0+128),f
  4134  064A                     l3161:
  4135  064A  1FEE               	btfss	___fltol@exp1^(0+128),7
  4136  064B  2E4D               	goto	u3911
  4137  064C  2E4E               	goto	u3910
  4138  064D                     u3911:
  4139  064D  2E6C               	goto	l3173
  4140  064E                     u3910:
  4141  064E                     l3163:
  4142  064E  086E               	movf	___fltol@exp1^(0+128),w
  4143  064F  3A80               	xorlw	128
  4144  0650  3E97               	addlw	151
  4145  0651  1803               	skipnc
  4146  0652  2E54               	goto	u3921
  4147  0653  2E55               	goto	u3920
  4148  0654                     u3921:
  4149  0654  2E56               	goto	l3169
  4150  0655                     u3920:
  4151  0655  2E17               	goto	l3149
  4152  0656                     l3169:
  4153  0656  3001               	movlw	1
  4154  0657                     u3935:
  4155  0657  1003               	clrc
  4156  0658  1683               	bsf	3,5	;RP0=1, select bank3
  4157  0659  1703               	bsf	3,6	;RP1=1, select bank3
  4158  065A  0C93               	rrf	(___fltol@f1+3)^(0+384),f
  4159  065B  0C92               	rrf	(___fltol@f1+2)^(0+384),f
  4160  065C  0C91               	rrf	(___fltol@f1+1)^(0+384),f
  4161  065D  0C90               	rrf	___fltol@f1^(0+384),f
  4162  065E  3EFF               	addlw	-1
  4163  065F  1D03               	skipz
  4164  0660  2E57               	goto	u3935
  4165  0661                     l3171:
  4166  0661  3001               	movlw	1
  4167  0662  00FF               	movwf	btemp+1
  4168  0663  087F               	movf	btemp+1,w
  4169  0664  1683               	bsf	3,5	;RP0=1, select bank1
  4170  0665  1303               	bcf	3,6	;RP1=0, select bank1
  4171  0666  07EE               	addwf	___fltol@exp1^(0+128),f
  4172  0667  1D03               	btfss	3,2
  4173  0668  2E6A               	goto	u3941
  4174  0669  2E6B               	goto	u3940
  4175  066A                     u3941:
  4176  066A  2E56               	goto	l3169
  4177  066B                     u3940:
  4178  066B  2E87               	goto	l3181
  4179  066C                     l3173:
  4180  066C  3020               	movlw	32
  4181  066D  026E               	subwf	___fltol@exp1^(0+128),w
  4182  066E  1C03               	skipc
  4183  066F  2E71               	goto	u3951
  4184  0670  2E72               	goto	u3950
  4185  0671                     u3951:
  4186  0671  2E82               	goto	l796
  4187  0672                     u3950:
  4188  0672  2E17               	goto	l3149
  4189  0673                     l3179:
  4190  0673  3001               	movlw	1
  4191  0674  1683               	bsf	3,5	;RP0=1, select bank3
  4192  0675  1703               	bsf	3,6	;RP1=1, select bank3
  4193  0676  0094               	movwf	??___fltol^(0+384)
  4194  0677                     u3965:
  4195  0677  1003               	clrc
  4196  0678  0D90               	rlf	___fltol@f1^(0+384),f
  4197  0679  0D91               	rlf	(___fltol@f1+1)^(0+384),f
  4198  067A  0D92               	rlf	(___fltol@f1+2)^(0+384),f
  4199  067B  0D93               	rlf	(___fltol@f1+3)^(0+384),f
  4200  067C  0B94               	decfsz	??___fltol^(0+384),f
  4201  067D  2E77               	goto	u3965
  4202  067E  3001               	movlw	1
  4203  067F  1683               	bsf	3,5	;RP0=1, select bank1
  4204  0680  1303               	bcf	3,6	;RP1=0, select bank1
  4205  0681  02EE               	subwf	___fltol@exp1^(0+128),f
  4206  0682                     l796:
  4207  0682  086E               	movf	___fltol@exp1^(0+128),w
  4208  0683  1D03               	btfss	3,2
  4209  0684  2E86               	goto	u3971
  4210  0685  2E87               	goto	u3970
  4211  0686                     u3971:
  4212  0686  2E73               	goto	l3179
  4213  0687                     u3970:
  4214  0687                     l3181:
  4215  0687  086D               	movf	___fltol@sign1^(0+128),w
  4216  0688  1903               	btfsc	3,2
  4217  0689  2E8B               	goto	u3981
  4218  068A  2E8C               	goto	u3980
  4219  068B                     u3981:
  4220  068B  2E99               	goto	l799
  4221  068C                     u3980:
  4222  068C                     l3183:
  4223  068C  1683               	bsf	3,5	;RP0=1, select bank3
  4224  068D  1703               	bsf	3,6	;RP1=1, select bank3
  4225  068E  0990               	comf	___fltol@f1^(0+384),f
  4226  068F  0991               	comf	(___fltol@f1+1)^(0+384),f
  4227  0690  0992               	comf	(___fltol@f1+2)^(0+384),f
  4228  0691  0993               	comf	(___fltol@f1+3)^(0+384),f
  4229  0692  0A90               	incf	___fltol@f1^(0+384),f
  4230  0693  1903               	skipnz
  4231  0694  0A91               	incf	(___fltol@f1+1)^(0+384),f
  4232  0695  1903               	skipnz
  4233  0696  0A92               	incf	(___fltol@f1+2)^(0+384),f
  4234  0697  1903               	skipnz
  4235  0698  0A93               	incf	(___fltol@f1+3)^(0+384),f
  4236  0699                     l799:
  4237  0699                     l789:
  4238  0699  0008               	return
  4239  069A                     __end_of___fltol:
  4240                           
  4241                           	psect	text20
  4242  0051                     __ptext20:	
  4243 ;; *************** function ___flmul *****************
  4244 ;; Defined at:
  4245 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  b               4    0[BANK1 ] long 
  4248 ;;  a               4    4[BANK1 ] long 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  prod            4   20[BANK1 ] struct .
  4251 ;;  grs             4   15[BANK1 ] unsigned long 
  4252 ;;  temp            2   24[BANK1 ] struct .
  4253 ;;  bexp            1   19[BANK1 ] unsigned char 
  4254 ;;  aexp            1   14[BANK1 ] unsigned char 
  4255 ;;  sign            1   13[BANK1 ] unsigned char 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  4    0[BANK1 ] unsigned char 
  4258 ;; Registers used:
  4259 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4265 ;;      Params:         0       0       8       0       0
  4266 ;;      Locals:         0       0      13       0       0
  4267 ;;      Temps:          0       0       5       0       0
  4268 ;;      Totals:         0       0      26       0       0
  4269 ;;Total ram usage:       26 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    5
  4272 ;; This function calls:
  4273 ;;		__Umul8_16
  4274 ;; This function is called by:
  4275 ;;		_Temperature_Calc
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           
  4280                           ;psect for function ___flmul
  4281  0051                     ___flmul:
  4282  0051                     l3185:	
  4283                           ;incstack = 0
  4284 ;; hardware stack exceeded
  4285                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4286                           
  4287  0051  1683               	bsf	3,5	;RP0=1, select bank1
  4288  0052  1303               	bcf	3,6	;RP1=0, select bank1
  4289  0053  0856               	movf	(___flmul@b^(0+128)+3),w
  4290  0054  3980               	andlw	128
  4291  0055  00FF               	movwf	btemp+1
  4292  0056  087F               	movf	btemp+1,w
  4293  0057  00E0               	movwf	___flmul@sign^(0+128)
  4294  0058                     l3187:
  4295  0058  0856               	movf	(___flmul@b^(0+128)+3),w
  4296  0059  00DB               	movwf	??___flmul^(0+128)
  4297  005A  075B               	addwf	??___flmul^(0+128),w
  4298  005B  00FF               	movwf	btemp+1
  4299  005C  087F               	movf	btemp+1,w
  4300  005D  00E6               	movwf	___flmul@bexp^(0+128)
  4301  005E                     l3189:
  4302  005E  1FD5               	btfss	(___flmul@b^(0+128)+2),7
  4303  005F  2861               	goto	u3991
  4304  0060  2862               	goto	u3990
  4305  0061                     u3991:
  4306  0061  2863               	goto	l3193
  4307  0062                     u3990:
  4308  0062                     l3191:
  4309  0062  1466               	bsf	___flmul@bexp^(0+128),0
  4310  0063                     l3193:
  4311  0063  0866               	movf	___flmul@bexp^(0+128),w
  4312  0064  1903               	btfsc	3,2
  4313  0065  2867               	goto	u4001
  4314  0066  2868               	goto	u4000
  4315  0067                     u4001:
  4316  0067  2877               	goto	l3201
  4317  0068                     u4000:
  4318  0068                     l3195:
  4319  0068  0A66               	incf	___flmul@bexp^(0+128),w
  4320  0069  1D03               	btfss	3,2
  4321  006A  286C               	goto	u4011
  4322  006B  286D               	goto	u4010
  4323  006C                     u4011:
  4324  006C  2875               	goto	l3199
  4325  006D                     u4010:
  4326  006D                     l3197:
  4327  006D  3000               	movlw	0
  4328  006E  00D6               	movwf	(___flmul@b+3)^(0+128)
  4329  006F  3000               	movlw	0
  4330  0070  00D5               	movwf	(___flmul@b+2)^(0+128)
  4331  0071  3000               	movlw	0
  4332  0072  00D4               	movwf	(___flmul@b+1)^(0+128)
  4333  0073  3000               	movlw	0
  4334  0074  00D3               	movwf	___flmul@b^(0+128)
  4335  0075                     l3199:
  4336  0075  17D5               	bsf	(___flmul@b^(0+128)+2),7
  4337  0076  287F               	goto	l3203
  4338  0077                     l3201:
  4339  0077  3000               	movlw	0
  4340  0078  00D6               	movwf	(___flmul@b+3)^(0+128)
  4341  0079  3000               	movlw	0
  4342  007A  00D5               	movwf	(___flmul@b+2)^(0+128)
  4343  007B  3000               	movlw	0
  4344  007C  00D4               	movwf	(___flmul@b+1)^(0+128)
  4345  007D  3000               	movlw	0
  4346  007E  00D3               	movwf	___flmul@b^(0+128)
  4347  007F                     l3203:
  4348  007F  085A               	movf	(___flmul@a^(0+128)+3),w
  4349  0080  3980               	andlw	128
  4350  0081  00FF               	movwf	btemp+1
  4351  0082  087F               	movf	btemp+1,w
  4352  0083  06E0               	xorwf	___flmul@sign^(0+128),f
  4353  0084                     l3205:
  4354  0084  085A               	movf	(___flmul@a^(0+128)+3),w
  4355  0085  00DB               	movwf	??___flmul^(0+128)
  4356  0086  075B               	addwf	??___flmul^(0+128),w
  4357  0087  00FF               	movwf	btemp+1
  4358  0088  087F               	movf	btemp+1,w
  4359  0089  00E1               	movwf	___flmul@aexp^(0+128)
  4360  008A                     l3207:
  4361  008A  1FD9               	btfss	(___flmul@a^(0+128)+2),7
  4362  008B  288D               	goto	u4021
  4363  008C  288E               	goto	u4020
  4364  008D                     u4021:
  4365  008D  288F               	goto	l3211
  4366  008E                     u4020:
  4367  008E                     l3209:
  4368  008E  1461               	bsf	___flmul@aexp^(0+128),0
  4369  008F                     l3211:
  4370  008F  0861               	movf	___flmul@aexp^(0+128),w
  4371  0090  1903               	btfsc	3,2
  4372  0091  2893               	goto	u4031
  4373  0092  2894               	goto	u4030
  4374  0093                     u4031:
  4375  0093  28A3               	goto	l3219
  4376  0094                     u4030:
  4377  0094                     l3213:
  4378  0094  0A61               	incf	___flmul@aexp^(0+128),w
  4379  0095  1D03               	btfss	3,2
  4380  0096  2898               	goto	u4041
  4381  0097  2899               	goto	u4040
  4382  0098                     u4041:
  4383  0098  28A1               	goto	l3217
  4384  0099                     u4040:
  4385  0099                     l3215:
  4386  0099  3000               	movlw	0
  4387  009A  00DA               	movwf	(___flmul@a+3)^(0+128)
  4388  009B  3000               	movlw	0
  4389  009C  00D9               	movwf	(___flmul@a+2)^(0+128)
  4390  009D  3000               	movlw	0
  4391  009E  00D8               	movwf	(___flmul@a+1)^(0+128)
  4392  009F  3000               	movlw	0
  4393  00A0  00D7               	movwf	___flmul@a^(0+128)
  4394  00A1                     l3217:
  4395  00A1  17D9               	bsf	(___flmul@a^(0+128)+2),7
  4396  00A2  28AB               	goto	l3221
  4397  00A3                     l3219:
  4398  00A3  3000               	movlw	0
  4399  00A4  00DA               	movwf	(___flmul@a+3)^(0+128)
  4400  00A5  3000               	movlw	0
  4401  00A6  00D9               	movwf	(___flmul@a+2)^(0+128)
  4402  00A7  3000               	movlw	0
  4403  00A8  00D8               	movwf	(___flmul@a+1)^(0+128)
  4404  00A9  3000               	movlw	0
  4405  00AA  00D7               	movwf	___flmul@a^(0+128)
  4406  00AB                     l3221:
  4407  00AB  0861               	movf	___flmul@aexp^(0+128),w
  4408  00AC  1903               	btfsc	3,2
  4409  00AD  28AF               	goto	u4051
  4410  00AE  28B0               	goto	u4050
  4411  00AF                     u4051:
  4412  00AF  28B5               	goto	l3225
  4413  00B0                     u4050:
  4414  00B0                     l3223:
  4415  00B0  0866               	movf	___flmul@bexp^(0+128),w
  4416  00B1  1D03               	btfss	3,2
  4417  00B2  28B4               	goto	u4061
  4418  00B3  28B5               	goto	u4060
  4419  00B4                     u4061:
  4420  00B4  28BE               	goto	l3229
  4421  00B5                     u4060:
  4422  00B5                     l3225:
  4423  00B5  3000               	movlw	0
  4424  00B6  00D6               	movwf	(?___flmul+3)^(0+128)
  4425  00B7  3000               	movlw	0
  4426  00B8  00D5               	movwf	(?___flmul+2)^(0+128)
  4427  00B9  3000               	movlw	0
  4428  00BA  00D4               	movwf	(?___flmul+1)^(0+128)
  4429  00BB  3000               	movlw	0
  4430  00BC  00D3               	movwf	?___flmul^(0+128)
  4431  00BD  2C0B               	goto	l992
  4432  00BE                     l3229:
  4433  00BE  0853               	movf	___flmul@b^(0+128),w
  4434  00BF  00FF               	movwf	btemp+1
  4435  00C0  087F               	movf	btemp+1,w
  4436  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  4437  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  4438  00C3  00B6               	movwf	__Umul8_16@multiplicand
  4439  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  4440  00C5  1303               	bcf	3,6	;RP1=0, select bank1
  4441  00C6  0859               	movf	(___flmul@a^(0+128)+2),w
  4442  00C7  120A  158A  22AB  120A  118A  	fcall	__Umul8_16
  4443  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  4444  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  4445  00CE  0837               	movf	?__Umul8_16+1,w
  4446  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  4447  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  4448  00D1  00EC               	movwf	(___flmul@temp+1)^(0+128)
  4449  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  4450  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  4451  00D4  0836               	movf	?__Umul8_16,w
  4452  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  4453  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  4454  00D7  00EB               	movwf	___flmul@temp^(0+128)
  4455  00D8                     l3231:
  4456  00D8  086B               	movf	___flmul@temp^(0+128),w
  4457  00D9  00DB               	movwf	??___flmul^(0+128)
  4458  00DA  01DC               	clrf	(??___flmul^(0+128)+1)
  4459  00DB  01DD               	clrf	(??___flmul^(0+128)+2)
  4460  00DC  01DE               	clrf	(??___flmul^(0+128)+3)
  4461  00DD  085E               	movf	(??___flmul+3)^(0+128),w
  4462  00DE  00E5               	movwf	(___flmul@grs+3)^(0+128)
  4463  00DF  085D               	movf	(??___flmul+2)^(0+128),w
  4464  00E0  00E4               	movwf	(___flmul@grs+2)^(0+128)
  4465  00E1  085C               	movf	(??___flmul+1)^(0+128),w
  4466  00E2  00E3               	movwf	(___flmul@grs+1)^(0+128)
  4467  00E3  085B               	movf	??___flmul^(0+128),w
  4468  00E4  00E2               	movwf	___flmul@grs^(0+128)
  4469  00E5                     l3233:
  4470  00E5  086C               	movf	(___flmul@temp^(0+128)+1),w
  4471  00E6  00DB               	movwf	??___flmul^(0+128)
  4472  00E7  01DC               	clrf	(??___flmul^(0+128)+1)
  4473  00E8  01DD               	clrf	(??___flmul^(0+128)+2)
  4474  00E9  01DE               	clrf	(??___flmul^(0+128)+3)
  4475  00EA  085E               	movf	(??___flmul+3)^(0+128),w
  4476  00EB  00EA               	movwf	(___flmul@prod+3)^(0+128)
  4477  00EC  085D               	movf	(??___flmul+2)^(0+128),w
  4478  00ED  00E9               	movwf	(___flmul@prod+2)^(0+128)
  4479  00EE  085C               	movf	(??___flmul+1)^(0+128),w
  4480  00EF  00E8               	movwf	(___flmul@prod+1)^(0+128)
  4481  00F0  085B               	movf	??___flmul^(0+128),w
  4482  00F1  00E7               	movwf	___flmul@prod^(0+128)
  4483  00F2  0854               	movf	(___flmul@b^(0+128)+1),w
  4484  00F3  00FF               	movwf	btemp+1
  4485  00F4  087F               	movf	btemp+1,w
  4486  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  4487  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  4488  00F7  00B6               	movwf	__Umul8_16@multiplicand
  4489  00F8  1683               	bsf	3,5	;RP0=1, select bank1
  4490  00F9  1303               	bcf	3,6	;RP1=0, select bank1
  4491  00FA  0858               	movf	(___flmul@a^(0+128)+1),w
  4492  00FB  120A  158A  22AB  120A  118A  	fcall	__Umul8_16
  4493  0100  1283               	bcf	3,5	;RP0=0, select bank0
  4494  0101  1303               	bcf	3,6	;RP1=0, select bank0
  4495  0102  0837               	movf	?__Umul8_16+1,w
  4496  0103  1683               	bsf	3,5	;RP0=1, select bank1
  4497  0104  1303               	bcf	3,6	;RP1=0, select bank1
  4498  0105  00EC               	movwf	(___flmul@temp+1)^(0+128)
  4499  0106  1283               	bcf	3,5	;RP0=0, select bank0
  4500  0107  1303               	bcf	3,6	;RP1=0, select bank0
  4501  0108  0836               	movf	?__Umul8_16,w
  4502  0109  1683               	bsf	3,5	;RP0=1, select bank1
  4503  010A  1303               	bcf	3,6	;RP1=0, select bank1
  4504  010B  00EB               	movwf	___flmul@temp^(0+128)
  4505  010C                     l3235:
  4506  010C  086B               	movf	___flmul@temp^(0+128),w
  4507  010D  00DB               	movwf	??___flmul^(0+128)
  4508  010E  01DC               	clrf	(??___flmul^(0+128)+1)
  4509  010F  01DD               	clrf	(??___flmul^(0+128)+2)
  4510  0110  01DE               	clrf	(??___flmul^(0+128)+3)
  4511  0111  085B               	movf	??___flmul^(0+128),w
  4512  0112  07E2               	addwf	___flmul@grs^(0+128),f
  4513  0113  085C               	movf	(??___flmul+1)^(0+128),w
  4514  0114  1103               	clrz
  4515  0115  1803               	skipnc
  4516  0116  3E01               	addlw	1
  4517  0117  1903               	skipnz
  4518  0118  291A               	goto	u4071
  4519  0119  07E3               	addwf	(___flmul@grs+1)^(0+128),f
  4520  011A                     u4071:
  4521  011A  085D               	movf	(??___flmul+2)^(0+128),w
  4522  011B  1103               	clrz
  4523  011C  1803               	skipnc
  4524  011D  3E01               	addlw	1
  4525  011E  1903               	skipnz
  4526  011F  2921               	goto	u4072
  4527  0120  07E4               	addwf	(___flmul@grs+2)^(0+128),f
  4528  0121                     u4072:
  4529  0121  085E               	movf	(??___flmul+3)^(0+128),w
  4530  0122  1103               	clrz
  4531  0123  1803               	skipnc
  4532  0124  3E01               	addlw	1
  4533  0125  1903               	skipnz
  4534  0126  2928               	goto	u4073
  4535  0127  07E5               	addwf	(___flmul@grs+3)^(0+128),f
  4536  0128                     u4073:
  4537  0128                     l3237:
  4538  0128  086C               	movf	(___flmul@temp^(0+128)+1),w
  4539  0129  00DB               	movwf	??___flmul^(0+128)
  4540  012A  01DC               	clrf	(??___flmul^(0+128)+1)
  4541  012B  01DD               	clrf	(??___flmul^(0+128)+2)
  4542  012C  01DE               	clrf	(??___flmul^(0+128)+3)
  4543  012D  085B               	movf	??___flmul^(0+128),w
  4544  012E  07E7               	addwf	___flmul@prod^(0+128),f
  4545  012F  085C               	movf	(??___flmul+1)^(0+128),w
  4546  0130  1103               	clrz
  4547  0131  1803               	skipnc
  4548  0132  3E01               	addlw	1
  4549  0133  1903               	skipnz
  4550  0134  2936               	goto	u4081
  4551  0135  07E8               	addwf	(___flmul@prod+1)^(0+128),f
  4552  0136                     u4081:
  4553  0136  085D               	movf	(??___flmul+2)^(0+128),w
  4554  0137  1103               	clrz
  4555  0138  1803               	skipnc
  4556  0139  3E01               	addlw	1
  4557  013A  1903               	skipnz
  4558  013B  293D               	goto	u4082
  4559  013C  07E9               	addwf	(___flmul@prod+2)^(0+128),f
  4560  013D                     u4082:
  4561  013D  085E               	movf	(??___flmul+3)^(0+128),w
  4562  013E  1103               	clrz
  4563  013F  1803               	skipnc
  4564  0140  3E01               	addlw	1
  4565  0141  1903               	skipnz
  4566  0142  2944               	goto	u4083
  4567  0143  07EA               	addwf	(___flmul@prod+3)^(0+128),f
  4568  0144                     u4083:
  4569  0144  0855               	movf	(___flmul@b^(0+128)+2),w
  4570  0145  00FF               	movwf	btemp+1
  4571  0146  087F               	movf	btemp+1,w
  4572  0147  1283               	bcf	3,5	;RP0=0, select bank0
  4573  0148  1303               	bcf	3,6	;RP1=0, select bank0
  4574  0149  00B6               	movwf	__Umul8_16@multiplicand
  4575  014A  1683               	bsf	3,5	;RP0=1, select bank1
  4576  014B  1303               	bcf	3,6	;RP1=0, select bank1
  4577  014C  0857               	movf	___flmul@a^(0+128),w
  4578  014D  120A  158A  22AB  120A  118A  	fcall	__Umul8_16
  4579  0152  1283               	bcf	3,5	;RP0=0, select bank0
  4580  0153  1303               	bcf	3,6	;RP1=0, select bank0
  4581  0154  0837               	movf	?__Umul8_16+1,w
  4582  0155  1683               	bsf	3,5	;RP0=1, select bank1
  4583  0156  1303               	bcf	3,6	;RP1=0, select bank1
  4584  0157  00EC               	movwf	(___flmul@temp+1)^(0+128)
  4585  0158  1283               	bcf	3,5	;RP0=0, select bank0
  4586  0159  1303               	bcf	3,6	;RP1=0, select bank0
  4587  015A  0836               	movf	?__Umul8_16,w
  4588  015B  1683               	bsf	3,5	;RP0=1, select bank1
  4589  015C  1303               	bcf	3,6	;RP1=0, select bank1
  4590  015D  00EB               	movwf	___flmul@temp^(0+128)
  4591  015E                     l3239:
  4592  015E  086B               	movf	___flmul@temp^(0+128),w
  4593  015F  00DB               	movwf	??___flmul^(0+128)
  4594  0160  01DC               	clrf	(??___flmul^(0+128)+1)
  4595  0161  01DD               	clrf	(??___flmul^(0+128)+2)
  4596  0162  01DE               	clrf	(??___flmul^(0+128)+3)
  4597  0163  085B               	movf	??___flmul^(0+128),w
  4598  0164  07E2               	addwf	___flmul@grs^(0+128),f
  4599  0165  085C               	movf	(??___flmul+1)^(0+128),w
  4600  0166  1103               	clrz
  4601  0167  1803               	skipnc
  4602  0168  3E01               	addlw	1
  4603  0169  1903               	skipnz
  4604  016A  296C               	goto	u4091
  4605  016B  07E3               	addwf	(___flmul@grs+1)^(0+128),f
  4606  016C                     u4091:
  4607  016C  085D               	movf	(??___flmul+2)^(0+128),w
  4608  016D  1103               	clrz
  4609  016E  1803               	skipnc
  4610  016F  3E01               	addlw	1
  4611  0170  1903               	skipnz
  4612  0171  2973               	goto	u4092
  4613  0172  07E4               	addwf	(___flmul@grs+2)^(0+128),f
  4614  0173                     u4092:
  4615  0173  085E               	movf	(??___flmul+3)^(0+128),w
  4616  0174  1103               	clrz
  4617  0175  1803               	skipnc
  4618  0176  3E01               	addlw	1
  4619  0177  1903               	skipnz
  4620  0178  297A               	goto	u4093
  4621  0179  07E5               	addwf	(___flmul@grs+3)^(0+128),f
  4622  017A                     u4093:
  4623  017A                     l3241:
  4624  017A  086C               	movf	(___flmul@temp^(0+128)+1),w
  4625  017B  00DB               	movwf	??___flmul^(0+128)
  4626  017C  01DC               	clrf	(??___flmul^(0+128)+1)
  4627  017D  01DD               	clrf	(??___flmul^(0+128)+2)
  4628  017E  01DE               	clrf	(??___flmul^(0+128)+3)
  4629  017F  085B               	movf	??___flmul^(0+128),w
  4630  0180  07E7               	addwf	___flmul@prod^(0+128),f
  4631  0181  085C               	movf	(??___flmul+1)^(0+128),w
  4632  0182  1103               	clrz
  4633  0183  1803               	skipnc
  4634  0184  3E01               	addlw	1
  4635  0185  1903               	skipnz
  4636  0186  2988               	goto	u4101
  4637  0187  07E8               	addwf	(___flmul@prod+1)^(0+128),f
  4638  0188                     u4101:
  4639  0188  085D               	movf	(??___flmul+2)^(0+128),w
  4640  0189  1103               	clrz
  4641  018A  1803               	skipnc
  4642  018B  3E01               	addlw	1
  4643  018C  1903               	skipnz
  4644  018D  298F               	goto	u4102
  4645  018E  07E9               	addwf	(___flmul@prod+2)^(0+128),f
  4646  018F                     u4102:
  4647  018F  085E               	movf	(??___flmul+3)^(0+128),w
  4648  0190  1103               	clrz
  4649  0191  1803               	skipnc
  4650  0192  3E01               	addlw	1
  4651  0193  1903               	skipnz
  4652  0194  2996               	goto	u4103
  4653  0195  07EA               	addwf	(___flmul@prod+3)^(0+128),f
  4654  0196                     u4103:
  4655  0196                     l3243:
  4656  0196  3008               	movlw	8
  4657  0197  00DB               	movwf	??___flmul^(0+128)
  4658  0198                     u4115:
  4659  0198  1003               	clrc
  4660  0199  0DE2               	rlf	___flmul@grs^(0+128),f
  4661  019A  0DE3               	rlf	(___flmul@grs+1)^(0+128),f
  4662  019B  0DE4               	rlf	(___flmul@grs+2)^(0+128),f
  4663  019C  0DE5               	rlf	(___flmul@grs+3)^(0+128),f
  4664  019D  0BDB               	decfsz	??___flmul^(0+128),f
  4665  019E  2998               	goto	u4115
  4666  019F                     l3245:
  4667  019F  0854               	movf	(___flmul@b^(0+128)+1),w
  4668  01A0  00FF               	movwf	btemp+1
  4669  01A1  087F               	movf	btemp+1,w
  4670  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  4671  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  4672  01A4  00B6               	movwf	__Umul8_16@multiplicand
  4673  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  4674  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  4675  01A7  0857               	movf	___flmul@a^(0+128),w
  4676  01A8  120A  158A  22AB  120A  118A  	fcall	__Umul8_16
  4677  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  4678  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  4679  01AF  0837               	movf	?__Umul8_16+1,w
  4680  01B0  1683               	bsf	3,5	;RP0=1, select bank1
  4681  01B1  1303               	bcf	3,6	;RP1=0, select bank1
  4682  01B2  00EC               	movwf	(___flmul@temp+1)^(0+128)
  4683  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  4684  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  4685  01B5  0836               	movf	?__Umul8_16,w
  4686  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  4687  01B7  1303               	bcf	3,6	;RP1=0, select bank1
  4688  01B8  00EB               	movwf	___flmul@temp^(0+128)
  4689  01B9                     l3247:
  4690  01B9  086B               	movf	___flmul@temp^(0+128),w
  4691  01BA  00DB               	movwf	??___flmul^(0+128)
  4692  01BB  086C               	movf	(___flmul@temp+1)^(0+128),w
  4693  01BC  00DC               	movwf	(??___flmul^(0+128)+1)
  4694  01BD  01DD               	clrf	(??___flmul^(0+128)+2)
  4695  01BE  01DE               	clrf	(??___flmul^(0+128)+3)
  4696  01BF  085B               	movf	??___flmul^(0+128),w
  4697  01C0  07E2               	addwf	___flmul@grs^(0+128),f
  4698  01C1  085C               	movf	(??___flmul+1)^(0+128),w
  4699  01C2  1103               	clrz
  4700  01C3  1803               	skipnc
  4701  01C4  3E01               	addlw	1
  4702  01C5  1903               	skipnz
  4703  01C6  29C8               	goto	u4121
  4704  01C7  07E3               	addwf	(___flmul@grs+1)^(0+128),f
  4705  01C8                     u4121:
  4706  01C8  085D               	movf	(??___flmul+2)^(0+128),w
  4707  01C9  1103               	clrz
  4708  01CA  1803               	skipnc
  4709  01CB  3E01               	addlw	1
  4710  01CC  1903               	skipnz
  4711  01CD  29CF               	goto	u4122
  4712  01CE  07E4               	addwf	(___flmul@grs+2)^(0+128),f
  4713  01CF                     u4122:
  4714  01CF  085E               	movf	(??___flmul+3)^(0+128),w
  4715  01D0  1103               	clrz
  4716  01D1  1803               	skipnc
  4717  01D2  3E01               	addlw	1
  4718  01D3  1903               	skipnz
  4719  01D4  29D6               	goto	u4123
  4720  01D5  07E5               	addwf	(___flmul@grs+3)^(0+128),f
  4721  01D6                     u4123:
  4722  01D6                     l3249:
  4723  01D6  0853               	movf	___flmul@b^(0+128),w
  4724  01D7  00FF               	movwf	btemp+1
  4725  01D8  087F               	movf	btemp+1,w
  4726  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  4727  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  4728  01DB  00B6               	movwf	__Umul8_16@multiplicand
  4729  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  4730  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  4731  01DE  0858               	movf	(___flmul@a^(0+128)+1),w
  4732  01DF  120A  158A  22AB  120A  118A  	fcall	__Umul8_16
  4733  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  4734  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  4735  01E6  0837               	movf	?__Umul8_16+1,w
  4736  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  4737  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  4738  01E9  00EC               	movwf	(___flmul@temp+1)^(0+128)
  4739  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  4740  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  4741  01EC  0836               	movf	?__Umul8_16,w
  4742  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  4743  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  4744  01EF  00EB               	movwf	___flmul@temp^(0+128)
  4745  01F0                     l3251:
  4746  01F0  086B               	movf	___flmul@temp^(0+128),w
  4747  01F1  00DB               	movwf	??___flmul^(0+128)
  4748  01F2  086C               	movf	(___flmul@temp+1)^(0+128),w
  4749  01F3  00DC               	movwf	(??___flmul^(0+128)+1)
  4750  01F4  01DD               	clrf	(??___flmul^(0+128)+2)
  4751  01F5  01DE               	clrf	(??___flmul^(0+128)+3)
  4752  01F6  085B               	movf	??___flmul^(0+128),w
  4753  01F7  07E2               	addwf	___flmul@grs^(0+128),f
  4754  01F8  085C               	movf	(??___flmul+1)^(0+128),w
  4755  01F9  1103               	clrz
  4756  01FA  1803               	skipnc
  4757  01FB  3E01               	addlw	1
  4758  01FC  1903               	skipnz
  4759  01FD  29FF               	goto	u4131
  4760  01FE  07E3               	addwf	(___flmul@grs+1)^(0+128),f
  4761  01FF                     u4131:
  4762  01FF  085D               	movf	(??___flmul+2)^(0+128),w
  4763  0200  1103               	clrz
  4764  0201  1803               	skipnc
  4765  0202  3E01               	addlw	1
  4766  0203  1903               	skipnz
  4767  0204  2A06               	goto	u4132
  4768  0205  07E4               	addwf	(___flmul@grs+2)^(0+128),f
  4769  0206                     u4132:
  4770  0206  085E               	movf	(??___flmul+3)^(0+128),w
  4771  0207  1103               	clrz
  4772  0208  1803               	skipnc
  4773  0209  3E01               	addlw	1
  4774  020A  1903               	skipnz
  4775  020B  2A0D               	goto	u4133
  4776  020C  07E5               	addwf	(___flmul@grs+3)^(0+128),f
  4777  020D                     u4133:
  4778  020D                     l3253:
  4779  020D  3008               	movlw	8
  4780  020E  00DB               	movwf	??___flmul^(0+128)
  4781  020F                     u4145:
  4782  020F  1003               	clrc
  4783  0210  0DE2               	rlf	___flmul@grs^(0+128),f
  4784  0211  0DE3               	rlf	(___flmul@grs+1)^(0+128),f
  4785  0212  0DE4               	rlf	(___flmul@grs+2)^(0+128),f
  4786  0213  0DE5               	rlf	(___flmul@grs+3)^(0+128),f
  4787  0214  0BDB               	decfsz	??___flmul^(0+128),f
  4788  0215  2A0F               	goto	u4145
  4789  0216  0853               	movf	___flmul@b^(0+128),w
  4790  0217  00FF               	movwf	btemp+1
  4791  0218  087F               	movf	btemp+1,w
  4792  0219  1283               	bcf	3,5	;RP0=0, select bank0
  4793  021A  1303               	bcf	3,6	;RP1=0, select bank0
  4794  021B  00B6               	movwf	__Umul8_16@multiplicand
  4795  021C  1683               	bsf	3,5	;RP0=1, select bank1
  4796  021D  1303               	bcf	3,6	;RP1=0, select bank1
  4797  021E  0857               	movf	___flmul@a^(0+128),w
  4798  021F  120A  158A  22AB  120A  118A  	fcall	__Umul8_16
  4799  0224  1283               	bcf	3,5	;RP0=0, select bank0
  4800  0225  1303               	bcf	3,6	;RP1=0, select bank0
  4801  0226  0837               	movf	?__Umul8_16+1,w
  4802  0227  1683               	bsf	3,5	;RP0=1, select bank1
  4803  0228  1303               	bcf	3,6	;RP1=0, select bank1
  4804  0229  00EC               	movwf	(___flmul@temp+1)^(0+128)
  4805  022A  1283               	bcf	3,5	;RP0=0, select bank0
  4806  022B  1303               	bcf	3,6	;RP1=0, select bank0
  4807  022C  0836               	movf	?__Umul8_16,w
  4808  022D  1683               	bsf	3,5	;RP0=1, select bank1
  4809  022E  1303               	bcf	3,6	;RP1=0, select bank1
  4810  022F  00EB               	movwf	___flmul@temp^(0+128)
  4811  0230                     l3255:
  4812  0230  086B               	movf	___flmul@temp^(0+128),w
  4813  0231  00DB               	movwf	??___flmul^(0+128)
  4814  0232  086C               	movf	(___flmul@temp+1)^(0+128),w
  4815  0233  00DC               	movwf	(??___flmul^(0+128)+1)
  4816  0234  01DD               	clrf	(??___flmul^(0+128)+2)
  4817  0235  01DE               	clrf	(??___flmul^(0+128)+3)
  4818  0236  085B               	movf	??___flmul^(0+128),w
  4819  0237  07E2               	addwf	___flmul@grs^(0+128),f
  4820  0238  085C               	movf	(??___flmul+1)^(0+128),w
  4821  0239  1103               	clrz
  4822  023A  1803               	skipnc
  4823  023B  3E01               	addlw	1
  4824  023C  1903               	skipnz
  4825  023D  2A3F               	goto	u4151
  4826  023E  07E3               	addwf	(___flmul@grs+1)^(0+128),f
  4827  023F                     u4151:
  4828  023F  085D               	movf	(??___flmul+2)^(0+128),w
  4829  0240  1103               	clrz
  4830  0241  1803               	skipnc
  4831  0242  3E01               	addlw	1
  4832  0243  1903               	skipnz
  4833  0244  2A46               	goto	u4152
  4834  0245  07E4               	addwf	(___flmul@grs+2)^(0+128),f
  4835  0246                     u4152:
  4836  0246  085E               	movf	(??___flmul+3)^(0+128),w
  4837  0247  1103               	clrz
  4838  0248  1803               	skipnc
  4839  0249  3E01               	addlw	1
  4840  024A  1903               	skipnz
  4841  024B  2A4D               	goto	u4153
  4842  024C  07E5               	addwf	(___flmul@grs+3)^(0+128),f
  4843  024D                     u4153:
  4844  024D                     l3257:
  4845  024D  0854               	movf	(___flmul@b^(0+128)+1),w
  4846  024E  00FF               	movwf	btemp+1
  4847  024F  087F               	movf	btemp+1,w
  4848  0250  1283               	bcf	3,5	;RP0=0, select bank0
  4849  0251  1303               	bcf	3,6	;RP1=0, select bank0
  4850  0252  00B6               	movwf	__Umul8_16@multiplicand
  4851  0253  1683               	bsf	3,5	;RP0=1, select bank1
  4852  0254  1303               	bcf	3,6	;RP1=0, select bank1
  4853  0255  0859               	movf	(___flmul@a^(0+128)+2),w
  4854  0256  120A  158A  22AB  120A  118A  	fcall	__Umul8_16
  4855  025B  1283               	bcf	3,5	;RP0=0, select bank0
  4856  025C  1303               	bcf	3,6	;RP1=0, select bank0
  4857  025D  0837               	movf	?__Umul8_16+1,w
  4858  025E  1683               	bsf	3,5	;RP0=1, select bank1
  4859  025F  1303               	bcf	3,6	;RP1=0, select bank1
  4860  0260  00EC               	movwf	(___flmul@temp+1)^(0+128)
  4861  0261  1283               	bcf	3,5	;RP0=0, select bank0
  4862  0262  1303               	bcf	3,6	;RP1=0, select bank0
  4863  0263  0836               	movf	?__Umul8_16,w
  4864  0264  1683               	bsf	3,5	;RP0=1, select bank1
  4865  0265  1303               	bcf	3,6	;RP1=0, select bank1
  4866  0266  00EB               	movwf	___flmul@temp^(0+128)
  4867  0267  086B               	movf	___flmul@temp^(0+128),w
  4868  0268  00DB               	movwf	??___flmul^(0+128)
  4869  0269  086C               	movf	(___flmul@temp+1)^(0+128),w
  4870  026A  00DC               	movwf	(??___flmul^(0+128)+1)
  4871  026B  01DD               	clrf	(??___flmul^(0+128)+2)
  4872  026C  01DE               	clrf	(??___flmul^(0+128)+3)
  4873  026D  085B               	movf	??___flmul^(0+128),w
  4874  026E  07E7               	addwf	___flmul@prod^(0+128),f
  4875  026F  085C               	movf	(??___flmul+1)^(0+128),w
  4876  0270  1103               	clrz
  4877  0271  1803               	skipnc
  4878  0272  3E01               	addlw	1
  4879  0273  1903               	skipnz
  4880  0274  2A76               	goto	u4161
  4881  0275  07E8               	addwf	(___flmul@prod+1)^(0+128),f
  4882  0276                     u4161:
  4883  0276  085D               	movf	(??___flmul+2)^(0+128),w
  4884  0277  1103               	clrz
  4885  0278  1803               	skipnc
  4886  0279  3E01               	addlw	1
  4887  027A  1903               	skipnz
  4888  027B  2A7D               	goto	u4162
  4889  027C  07E9               	addwf	(___flmul@prod+2)^(0+128),f
  4890  027D                     u4162:
  4891  027D  085E               	movf	(??___flmul+3)^(0+128),w
  4892  027E  1103               	clrz
  4893  027F  1803               	skipnc
  4894  0280  3E01               	addlw	1
  4895  0281  1903               	skipnz
  4896  0282  2A84               	goto	u4163
  4897  0283  07EA               	addwf	(___flmul@prod+3)^(0+128),f
  4898  0284                     u4163:
  4899  0284                     l3259:
  4900  0284  0855               	movf	(___flmul@b^(0+128)+2),w
  4901  0285  00FF               	movwf	btemp+1
  4902  0286  087F               	movf	btemp+1,w
  4903  0287  1283               	bcf	3,5	;RP0=0, select bank0
  4904  0288  1303               	bcf	3,6	;RP1=0, select bank0
  4905  0289  00B6               	movwf	__Umul8_16@multiplicand
  4906  028A  1683               	bsf	3,5	;RP0=1, select bank1
  4907  028B  1303               	bcf	3,6	;RP1=0, select bank1
  4908  028C  0858               	movf	(___flmul@a^(0+128)+1),w
  4909  028D  120A  158A  22AB  120A  118A  	fcall	__Umul8_16
  4910  0292  1283               	bcf	3,5	;RP0=0, select bank0
  4911  0293  1303               	bcf	3,6	;RP1=0, select bank0
  4912  0294  0837               	movf	?__Umul8_16+1,w
  4913  0295  1683               	bsf	3,5	;RP0=1, select bank1
  4914  0296  1303               	bcf	3,6	;RP1=0, select bank1
  4915  0297  00EC               	movwf	(___flmul@temp+1)^(0+128)
  4916  0298  1283               	bcf	3,5	;RP0=0, select bank0
  4917  0299  1303               	bcf	3,6	;RP1=0, select bank0
  4918  029A  0836               	movf	?__Umul8_16,w
  4919  029B  1683               	bsf	3,5	;RP0=1, select bank1
  4920  029C  1303               	bcf	3,6	;RP1=0, select bank1
  4921  029D  00EB               	movwf	___flmul@temp^(0+128)
  4922  029E                     l3261:
  4923  029E  086B               	movf	___flmul@temp^(0+128),w
  4924  029F  00DB               	movwf	??___flmul^(0+128)
  4925  02A0  086C               	movf	(___flmul@temp+1)^(0+128),w
  4926  02A1  00DC               	movwf	(??___flmul^(0+128)+1)
  4927  02A2  01DD               	clrf	(??___flmul^(0+128)+2)
  4928  02A3  01DE               	clrf	(??___flmul^(0+128)+3)
  4929  02A4  085B               	movf	??___flmul^(0+128),w
  4930  02A5  07E7               	addwf	___flmul@prod^(0+128),f
  4931  02A6  085C               	movf	(??___flmul+1)^(0+128),w
  4932  02A7  1103               	clrz
  4933  02A8  1803               	skipnc
  4934  02A9  3E01               	addlw	1
  4935  02AA  1903               	skipnz
  4936  02AB  2AAD               	goto	u4171
  4937  02AC  07E8               	addwf	(___flmul@prod+1)^(0+128),f
  4938  02AD                     u4171:
  4939  02AD  085D               	movf	(??___flmul+2)^(0+128),w
  4940  02AE  1103               	clrz
  4941  02AF  1803               	skipnc
  4942  02B0  3E01               	addlw	1
  4943  02B1  1903               	skipnz
  4944  02B2  2AB4               	goto	u4172
  4945  02B3  07E9               	addwf	(___flmul@prod+2)^(0+128),f
  4946  02B4                     u4172:
  4947  02B4  085E               	movf	(??___flmul+3)^(0+128),w
  4948  02B5  1103               	clrz
  4949  02B6  1803               	skipnc
  4950  02B7  3E01               	addlw	1
  4951  02B8  1903               	skipnz
  4952  02B9  2ABB               	goto	u4173
  4953  02BA  07EA               	addwf	(___flmul@prod+3)^(0+128),f
  4954  02BB                     u4173:
  4955  02BB  0855               	movf	(___flmul@b^(0+128)+2),w
  4956  02BC  00FF               	movwf	btemp+1
  4957  02BD  087F               	movf	btemp+1,w
  4958  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  4959  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  4960  02C0  00B6               	movwf	__Umul8_16@multiplicand
  4961  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  4962  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  4963  02C3  0859               	movf	(___flmul@a^(0+128)+2),w
  4964  02C4  120A  158A  22AB  120A  118A  	fcall	__Umul8_16
  4965  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  4966  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  4967  02CB  0837               	movf	?__Umul8_16+1,w
  4968  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  4969  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  4970  02CE  00EC               	movwf	(___flmul@temp+1)^(0+128)
  4971  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  4972  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  4973  02D1  0836               	movf	?__Umul8_16,w
  4974  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  4975  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  4976  02D4  00EB               	movwf	___flmul@temp^(0+128)
  4977  02D5                     l3263:
  4978  02D5  086B               	movf	___flmul@temp^(0+128),w
  4979  02D6  00DB               	movwf	??___flmul^(0+128)
  4980  02D7  086C               	movf	(___flmul@temp+1)^(0+128),w
  4981  02D8  00DC               	movwf	(??___flmul^(0+128)+1)
  4982  02D9  01DD               	clrf	(??___flmul^(0+128)+2)
  4983  02DA  01DE               	clrf	(??___flmul^(0+128)+3)
  4984  02DB  3008               	movlw	8
  4985  02DC                     u4185:
  4986  02DC  1003               	clrc
  4987  02DD  0DDB               	rlf	??___flmul^(0+128),f
  4988  02DE  0DDC               	rlf	(??___flmul^(0+128)+1),f
  4989  02DF  0DDD               	rlf	(??___flmul^(0+128)+2),f
  4990  02E0  0DDE               	rlf	(??___flmul^(0+128)+3),f
  4991  02E1                     u4180:
  4992  02E1  3EFF               	addlw	-1
  4993  02E2  1D03               	skipz
  4994  02E3  2ADC               	goto	u4185
  4995  02E4  085B               	movf	??___flmul^(0+128),w
  4996  02E5  07E7               	addwf	___flmul@prod^(0+128),f
  4997  02E6  085C               	movf	(??___flmul+1)^(0+128),w
  4998  02E7  1103               	clrz
  4999  02E8  1803               	skipnc
  5000  02E9  3E01               	addlw	1
  5001  02EA  1903               	skipnz
  5002  02EB  2AED               	goto	u4191
  5003  02EC  07E8               	addwf	(___flmul@prod+1)^(0+128),f
  5004  02ED                     u4191:
  5005  02ED  085D               	movf	(??___flmul+2)^(0+128),w
  5006  02EE  1103               	clrz
  5007  02EF  1803               	skipnc
  5008  02F0  3E01               	addlw	1
  5009  02F1  1903               	skipnz
  5010  02F2  2AF4               	goto	u4192
  5011  02F3  07E9               	addwf	(___flmul@prod+2)^(0+128),f
  5012  02F4                     u4192:
  5013  02F4  085E               	movf	(??___flmul+3)^(0+128),w
  5014  02F5  1103               	clrz
  5015  02F6  1803               	skipnc
  5016  02F7  3E01               	addlw	1
  5017  02F8  1903               	skipnz
  5018  02F9  2AFB               	goto	u4193
  5019  02FA  07EA               	addwf	(___flmul@prod+3)^(0+128),f
  5020  02FB                     u4193:
  5021  02FB                     l3265:
  5022  02FB  0862               	movf	___flmul@grs^(0+128),w
  5023  02FC  00DB               	movwf	??___flmul^(0+128)
  5024  02FD  0863               	movf	(___flmul@grs+1)^(0+128),w
  5025  02FE  00DC               	movwf	(??___flmul^(0+128)+1)
  5026  02FF  0864               	movf	(___flmul@grs+2)^(0+128),w
  5027  0300  00DD               	movwf	(??___flmul^(0+128)+2)
  5028  0301  0865               	movf	(___flmul@grs+3)^(0+128),w
  5029  0302  00DE               	movwf	(??___flmul^(0+128)+3)
  5030  0303  3018               	movlw	24
  5031  0304                     u4205:
  5032  0304  1003               	clrc
  5033  0305  0CDE               	rrf	(??___flmul^(0+128)+3),f
  5034  0306  0CDD               	rrf	(??___flmul^(0+128)+2),f
  5035  0307  0CDC               	rrf	(??___flmul^(0+128)+1),f
  5036  0308  0CDB               	rrf	??___flmul^(0+128),f
  5037  0309                     u4200:
  5038  0309  3EFF               	addlw	-1
  5039  030A  1D03               	skipz
  5040  030B  2B04               	goto	u4205
  5041  030C  085B               	movf	??___flmul^(0+128),w
  5042  030D  07E7               	addwf	___flmul@prod^(0+128),f
  5043  030E  085C               	movf	(??___flmul+1)^(0+128),w
  5044  030F  1103               	clrz
  5045  0310  1803               	skipnc
  5046  0311  3E01               	addlw	1
  5047  0312  1903               	skipnz
  5048  0313  2B15               	goto	u4211
  5049  0314  07E8               	addwf	(___flmul@prod+1)^(0+128),f
  5050  0315                     u4211:
  5051  0315  085D               	movf	(??___flmul+2)^(0+128),w
  5052  0316  1103               	clrz
  5053  0317  1803               	skipnc
  5054  0318  3E01               	addlw	1
  5055  0319  1903               	skipnz
  5056  031A  2B1C               	goto	u4212
  5057  031B  07E9               	addwf	(___flmul@prod+2)^(0+128),f
  5058  031C                     u4212:
  5059  031C  085E               	movf	(??___flmul+3)^(0+128),w
  5060  031D  1103               	clrz
  5061  031E  1803               	skipnc
  5062  031F  3E01               	addlw	1
  5063  0320  1903               	skipnz
  5064  0321  2B23               	goto	u4213
  5065  0322  07EA               	addwf	(___flmul@prod+3)^(0+128),f
  5066  0323                     u4213:
  5067  0323                     l3267:
  5068  0323  3008               	movlw	8
  5069  0324  00DB               	movwf	??___flmul^(0+128)
  5070  0325                     u4225:
  5071  0325  1003               	clrc
  5072  0326  0DE2               	rlf	___flmul@grs^(0+128),f
  5073  0327  0DE3               	rlf	(___flmul@grs+1)^(0+128),f
  5074  0328  0DE4               	rlf	(___flmul@grs+2)^(0+128),f
  5075  0329  0DE5               	rlf	(___flmul@grs+3)^(0+128),f
  5076  032A  0BDB               	decfsz	??___flmul^(0+128),f
  5077  032B  2B25               	goto	u4225
  5078  032C                     l3269:
  5079  032C  0866               	movf	___flmul@bexp^(0+128),w
  5080  032D  0761               	addwf	___flmul@aexp^(0+128),w
  5081  032E  00DB               	movwf	??___flmul^(0+128)
  5082  032F  01DC               	clrf	(??___flmul^(0+128)+1)
  5083  0330  0DDC               	rlf	(??___flmul+1)^(0+128),f
  5084  0331  085B               	movf	??___flmul^(0+128),w
  5085  0332  3E82               	addlw	130
  5086  0333  00EB               	movwf	___flmul@temp^(0+128)
  5087  0334  085C               	movf	(??___flmul+1)^(0+128),w
  5088  0335  1803               	skipnc
  5089  0336  3E01               	addlw	1
  5090  0337  3EFF               	addlw	255
  5091  0338  00EC               	movwf	(___flmul@temp+1)^(0+128)
  5092  0339  2B57               	goto	l3281
  5093  033A                     l3271:
  5094  033A  3001               	movlw	1
  5095  033B  00DB               	movwf	??___flmul^(0+128)
  5096  033C                     u4235:
  5097  033C  1003               	clrc
  5098  033D  0DE7               	rlf	___flmul@prod^(0+128),f
  5099  033E  0DE8               	rlf	(___flmul@prod+1)^(0+128),f
  5100  033F  0DE9               	rlf	(___flmul@prod+2)^(0+128),f
  5101  0340  0DEA               	rlf	(___flmul@prod+3)^(0+128),f
  5102  0341  0BDB               	decfsz	??___flmul^(0+128),f
  5103  0342  2B3C               	goto	u4235
  5104  0343                     l3273:
  5105  0343  1FE5               	btfss	(___flmul@grs+3)^(0+128),7
  5106  0344  2B46               	goto	u4241
  5107  0345  2B47               	goto	u4240
  5108  0346                     u4241:
  5109  0346  2B48               	goto	l3277
  5110  0347                     u4240:
  5111  0347                     l3275:
  5112  0347  1467               	bsf	___flmul@prod^(0+128),0
  5113  0348                     l3277:
  5114  0348  3001               	movlw	1
  5115  0349  00DB               	movwf	??___flmul^(0+128)
  5116  034A                     u4255:
  5117  034A  1003               	clrc
  5118  034B  0DE2               	rlf	___flmul@grs^(0+128),f
  5119  034C  0DE3               	rlf	(___flmul@grs+1)^(0+128),f
  5120  034D  0DE4               	rlf	(___flmul@grs+2)^(0+128),f
  5121  034E  0DE5               	rlf	(___flmul@grs+3)^(0+128),f
  5122  034F  0BDB               	decfsz	??___flmul^(0+128),f
  5123  0350  2B4A               	goto	u4255
  5124  0351                     l3279:
  5125  0351  30FF               	movlw	255
  5126  0352  07EB               	addwf	___flmul@temp^(0+128),f
  5127  0353  1803               	skipnc
  5128  0354  0AEC               	incf	(___flmul@temp+1)^(0+128),f
  5129  0355  30FF               	movlw	255
  5130  0356  07EC               	addwf	(___flmul@temp+1)^(0+128),f
  5131  0357                     l3281:
  5132  0357  1FE9               	btfss	(___flmul@prod+2)^(0+128),7
  5133  0358  2B5A               	goto	u4261
  5134  0359  2B5B               	goto	u4260
  5135  035A                     u4261:
  5136  035A  2B3A               	goto	l3271
  5137  035B                     u4260:
  5138  035B                     l3283:
  5139  035B  01E1               	clrf	___flmul@aexp^(0+128)
  5140  035C                     l3285:
  5141  035C  1FE5               	btfss	(___flmul@grs+3)^(0+128),7
  5142  035D  2B5F               	goto	u4271
  5143  035E  2B60               	goto	u4270
  5144  035F                     u4271:
  5145  035F  2B7C               	goto	l3293
  5146  0360                     u4270:
  5147  0360                     l3287:
  5148  0360  30FF               	movlw	255
  5149  0361  0562               	andwf	___flmul@grs^(0+128),w
  5150  0362  00DB               	movwf	??___flmul^(0+128)
  5151  0363  30FF               	movlw	255
  5152  0364  0563               	andwf	(___flmul@grs+1)^(0+128),w
  5153  0365  00DC               	movwf	(??___flmul^(0+128)+1)
  5154  0366  30FF               	movlw	255
  5155  0367  0564               	andwf	(___flmul@grs+2)^(0+128),w
  5156  0368  00DD               	movwf	(??___flmul^(0+128)+2)
  5157  0369  307F               	movlw	127
  5158  036A  0565               	andwf	(___flmul@grs+3)^(0+128),w
  5159  036B  00DE               	movwf	(??___flmul^(0+128)+3)
  5160  036C  085E               	movf	(??___flmul+3)^(0+128),w
  5161  036D  045D               	iorwf	(??___flmul+2)^(0+128),w
  5162  036E  045C               	iorwf	(??___flmul+1)^(0+128),w
  5163  036F  045B               	iorwf	??___flmul^(0+128),w
  5164  0370  1903               	skipnz
  5165  0371  2B73               	goto	u4281
  5166  0372  2B74               	goto	u4280
  5167  0373                     u4281:
  5168  0373  2B77               	goto	l998
  5169  0374                     u4280:
  5170  0374                     l3289:
  5171  0374  01E1               	clrf	___flmul@aexp^(0+128)
  5172  0375  0AE1               	incf	___flmul@aexp^(0+128),f
  5173  0376  2B7C               	goto	l3293
  5174  0377                     l998:
  5175  0377  1C67               	btfss	___flmul@prod^(0+128),0
  5176  0378  2B7A               	goto	u4291
  5177  0379  2B7B               	goto	u4290
  5178  037A                     u4291:
  5179  037A  2B7C               	goto	l3293
  5180  037B                     u4290:
  5181  037B  2B74               	goto	l3289
  5182  037C                     l3293:
  5183  037C  0861               	movf	___flmul@aexp^(0+128),w
  5184  037D  1903               	btfsc	3,2
  5185  037E  2B80               	goto	u4301
  5186  037F  2B81               	goto	u4300
  5187  0380                     u4301:
  5188  0380  2BB2               	goto	l3303
  5189  0381                     u4300:
  5190  0381                     l3295:
  5191  0381  3001               	movlw	1
  5192  0382  07E7               	addwf	___flmul@prod^(0+128),f
  5193  0383  3000               	movlw	0
  5194  0384  1803               	skipnc
  5195  0385  3001               	movlw	1
  5196  0386  07E8               	addwf	(___flmul@prod+1)^(0+128),f
  5197  0387  3000               	movlw	0
  5198  0388  1803               	skipnc
  5199  0389  3001               	movlw	1
  5200  038A  07E9               	addwf	(___flmul@prod+2)^(0+128),f
  5201  038B  3000               	movlw	0
  5202  038C  1803               	skipnc
  5203  038D  3001               	movlw	1
  5204  038E  07EA               	addwf	(___flmul@prod+3)^(0+128),f
  5205  038F                     l3297:
  5206  038F  1C6A               	btfss	(___flmul@prod+3)^(0+128),0
  5207  0390  2B92               	goto	u4311
  5208  0391  2B93               	goto	u4310
  5209  0392                     u4311:
  5210  0392  2BB2               	goto	l3303
  5211  0393                     u4310:
  5212  0393                     l3299:
  5213  0393  0867               	movf	___flmul@prod^(0+128),w
  5214  0394  00DB               	movwf	??___flmul^(0+128)
  5215  0395  0868               	movf	(___flmul@prod+1)^(0+128),w
  5216  0396  00DC               	movwf	(??___flmul^(0+128)+1)
  5217  0397  0869               	movf	(___flmul@prod+2)^(0+128),w
  5218  0398  00DD               	movwf	(??___flmul^(0+128)+2)
  5219  0399  086A               	movf	(___flmul@prod+3)^(0+128),w
  5220  039A  00DE               	movwf	(??___flmul^(0+128)+3)
  5221  039B  3001               	movlw	1
  5222  039C  00DF               	movwf	(??___flmul+4)^(0+128)
  5223  039D                     u4325:
  5224  039D  0D5E               	rlf	(??___flmul^(0+128)+3),w
  5225  039E  0CDE               	rrf	(??___flmul^(0+128)+3),f
  5226  039F  0CDD               	rrf	(??___flmul^(0+128)+2),f
  5227  03A0  0CDC               	rrf	(??___flmul^(0+128)+1),f
  5228  03A1  0CDB               	rrf	??___flmul^(0+128),f
  5229  03A2                     u4320:
  5230  03A2  0BDF               	decfsz	(??___flmul+4)^(0+128),f
  5231  03A3  2B9D               	goto	u4325
  5232  03A4  085E               	movf	(??___flmul+3)^(0+128),w
  5233  03A5  00EA               	movwf	(___flmul@prod+3)^(0+128)
  5234  03A6  085D               	movf	(??___flmul+2)^(0+128),w
  5235  03A7  00E9               	movwf	(___flmul@prod+2)^(0+128)
  5236  03A8  085C               	movf	(??___flmul+1)^(0+128),w
  5237  03A9  00E8               	movwf	(___flmul@prod+1)^(0+128)
  5238  03AA  085B               	movf	??___flmul^(0+128),w
  5239  03AB  00E7               	movwf	___flmul@prod^(0+128)
  5240  03AC                     l3301:
  5241  03AC  3001               	movlw	1
  5242  03AD  07EB               	addwf	___flmul@temp^(0+128),f
  5243  03AE  1803               	skipnc
  5244  03AF  0AEC               	incf	(___flmul@temp+1)^(0+128),f
  5245  03B0  3000               	movlw	0
  5246  03B1  07EC               	addwf	(___flmul@temp+1)^(0+128),f
  5247  03B2                     l3303:
  5248  03B2  086C               	movf	(___flmul@temp+1)^(0+128),w
  5249  03B3  3A80               	xorlw	128
  5250  03B4  00FF               	movwf	btemp+1
  5251  03B5  3080               	movlw	128
  5252  03B6  027F               	subwf	btemp+1,w
  5253  03B7  1D03               	skipz
  5254  03B8  2BBB               	goto	u4335
  5255  03B9  30FF               	movlw	255
  5256  03BA  026B               	subwf	___flmul@temp^(0+128),w
  5257  03BB                     u4335:
  5258  03BB  1C03               	skipc
  5259  03BC  2BBE               	goto	u4331
  5260  03BD  2BBF               	goto	u4330
  5261  03BE                     u4331:
  5262  03BE  2BCA               	goto	l3307
  5263  03BF                     u4330:
  5264  03BF                     l3305:
  5265  03BF  307F               	movlw	127
  5266  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  5267  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  5268  03C2  00EA               	movwf	(___flmul@prod+3)^(0+128)
  5269  03C3  3080               	movlw	128
  5270  03C4  00E9               	movwf	(___flmul@prod+2)^(0+128)
  5271  03C5  3000               	movlw	0
  5272  03C6  00E8               	movwf	(___flmul@prod+1)^(0+128)
  5273  03C7  3000               	movlw	0
  5274  03C8  00E7               	movwf	___flmul@prod^(0+128)
  5275  03C9  2BFF               	goto	l1004
  5276  03CA                     l3307:
  5277  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  5278  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  5279  03CC  086C               	movf	(___flmul@temp+1)^(0+128),w
  5280  03CD  3A80               	xorlw	128
  5281  03CE  00FF               	movwf	btemp+1
  5282  03CF  3080               	movlw	128
  5283  03D0  027F               	subwf	btemp+1,w
  5284  03D1  1D03               	skipz
  5285  03D2  2BD5               	goto	u4345
  5286  03D3  3001               	movlw	1
  5287  03D4  026B               	subwf	___flmul@temp^(0+128),w
  5288  03D5                     u4345:
  5289  03D5  1803               	skipnc
  5290  03D6  2BD8               	goto	u4341
  5291  03D7  2BD9               	goto	u4340
  5292  03D8                     u4341:
  5293  03D8  2BE5               	goto	l3313
  5294  03D9                     u4340:
  5295  03D9                     l3309:
  5296  03D9  3000               	movlw	0
  5297  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  5298  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  5299  03DC  00EA               	movwf	(___flmul@prod+3)^(0+128)
  5300  03DD  3000               	movlw	0
  5301  03DE  00E9               	movwf	(___flmul@prod+2)^(0+128)
  5302  03DF  3000               	movlw	0
  5303  03E0  00E8               	movwf	(___flmul@prod+1)^(0+128)
  5304  03E1  3000               	movlw	0
  5305  03E2  00E7               	movwf	___flmul@prod^(0+128)
  5306  03E3                     l3311:
  5307  03E3  01E0               	clrf	___flmul@sign^(0+128)
  5308  03E4  2BFF               	goto	l1004
  5309  03E5                     l3313:
  5310  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  5311  03E6  1303               	bcf	3,6	;RP1=0, select bank1
  5312  03E7  086B               	movf	___flmul@temp^(0+128),w
  5313  03E8  00FF               	movwf	btemp+1
  5314  03E9  087F               	movf	btemp+1,w
  5315  03EA  00E6               	movwf	___flmul@bexp^(0+128)
  5316  03EB                     l3315:
  5317  03EB  30FF               	movlw	255
  5318  03EC  05E7               	andwf	___flmul@prod^(0+128),f
  5319  03ED  30FF               	movlw	255
  5320  03EE  05E8               	andwf	(___flmul@prod+1)^(0+128),f
  5321  03EF  307F               	movlw	127
  5322  03F0  05E9               	andwf	(___flmul@prod+2)^(0+128),f
  5323  03F1  3000               	movlw	0
  5324  03F2  05EA               	andwf	(___flmul@prod+3)^(0+128),f
  5325  03F3                     l3317:
  5326  03F3  1C66               	btfss	___flmul@bexp^(0+128),0
  5327  03F4  2BF6               	goto	u4351
  5328  03F5  2BF7               	goto	u4350
  5329  03F6                     u4351:
  5330  03F6  2BF8               	goto	l3321
  5331  03F7                     u4350:
  5332  03F7                     l3319:
  5333  03F7  17E9               	bsf	(___flmul@prod^(0+128)+2),7
  5334  03F8                     l3321:
  5335  03F8  0866               	movf	___flmul@bexp^(0+128),w
  5336  03F9  00DB               	movwf	??___flmul^(0+128)
  5337  03FA  1003               	clrc
  5338  03FB  0C5B               	rrf	??___flmul^(0+128),w
  5339  03FC  00FF               	movwf	btemp+1
  5340  03FD  087F               	movf	btemp+1,w
  5341  03FE  00EA               	movwf	(___flmul@prod^(0+128)+3)
  5342  03FF                     l1004:
  5343  03FF  0860               	movf	___flmul@sign^(0+128),w
  5344  0400  00FF               	movwf	btemp+1
  5345  0401  087F               	movf	btemp+1,w
  5346  0402  04EA               	iorwf	(___flmul@prod^(0+128)+3),f
  5347  0403                     l3323:
  5348  0403  086A               	movf	(___flmul@prod+3)^(0+128),w
  5349  0404  00D6               	movwf	(?___flmul+3)^(0+128)
  5350  0405  0869               	movf	(___flmul@prod+2)^(0+128),w
  5351  0406  00D5               	movwf	(?___flmul+2)^(0+128)
  5352  0407  0868               	movf	(___flmul@prod+1)^(0+128),w
  5353  0408  00D4               	movwf	(?___flmul+1)^(0+128)
  5354  0409  0867               	movf	___flmul@prod^(0+128),w
  5355  040A  00D3               	movwf	?___flmul^(0+128)
  5356  040B                     l992:
  5357  040B  0008               	return
  5358  040C                     __end_of___flmul:
  5359                           
  5360                           	psect	text21
  5361  0AAB                     __ptext21:	
  5362 ;; *************** function __Umul8_16 *****************
  5363 ;; Defined at:
  5364 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8_16.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  multiplier      1    wreg     unsigned char 
  5367 ;;  multiplicand    1   22[BANK0 ] unsigned char 
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;  multiplier      1   30[BANK0 ] unsigned char 
  5370 ;;  word_mpld       2   28[BANK0 ] unsigned int 
  5371 ;;  product         2   26[BANK0 ] unsigned int 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  2   22[BANK0 ] unsigned int 
  5374 ;; Registers used:
  5375 ;;		wreg, status,2, status,0
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5381 ;;      Params:         0       2       0       0       0
  5382 ;;      Locals:         0       5       0       0       0
  5383 ;;      Temps:          0       2       0       0       0
  5384 ;;      Totals:         0       9       0       0       0
  5385 ;;Total ram usage:        9 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:    4
  5388 ;; This function calls:
  5389 ;;		Nothing
  5390 ;; This function is called by:
  5391 ;;		___flmul
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           
  5396                           ;psect for function __Umul8_16
  5397  0AAB                     __Umul8_16:
  5398                           
  5399                           ;incstack = 0
  5400 ;; hardware stack exceeded
  5401                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5402                           ;__Umul8_16@multiplier stored from wreg
  5403  0AAB  1283               	bcf	3,5	;RP0=0, select bank0
  5404  0AAC  1303               	bcf	3,6	;RP1=0, select bank0
  5405  0AAD  00BE               	movwf	__Umul8_16@multiplier
  5406  0AAE                     l3099:
  5407  0AAE  01BA               	clrf	__Umul8_16@product
  5408  0AAF  01BB               	clrf	__Umul8_16@product+1
  5409  0AB0                     l3101:
  5410  0AB0  0836               	movf	__Umul8_16@multiplicand,w
  5411  0AB1  00B8               	movwf	??__Umul8_16
  5412  0AB2  01B9               	clrf	??__Umul8_16+1
  5413  0AB3  0838               	movf	??__Umul8_16,w
  5414  0AB4  00BC               	movwf	__Umul8_16@word_mpld
  5415  0AB5  0839               	movf	??__Umul8_16+1,w
  5416  0AB6  00BD               	movwf	__Umul8_16@word_mpld+1
  5417  0AB7                     l3103:
  5418  0AB7  1C3E               	btfss	__Umul8_16@multiplier,0
  5419  0AB8  2ABA               	goto	u3781
  5420  0AB9  2ABB               	goto	u3780
  5421  0ABA                     u3781:
  5422  0ABA  2AC1               	goto	l1011
  5423  0ABB                     u3780:
  5424  0ABB                     l3105:
  5425  0ABB  083C               	movf	__Umul8_16@word_mpld,w
  5426  0ABC  07BA               	addwf	__Umul8_16@product,f
  5427  0ABD  1803               	skipnc
  5428  0ABE  0ABB               	incf	__Umul8_16@product+1,f
  5429  0ABF  083D               	movf	__Umul8_16@word_mpld+1,w
  5430  0AC0  07BB               	addwf	__Umul8_16@product+1,f
  5431  0AC1                     l1011:
  5432  0AC1  3001               	movlw	1
  5433  0AC2                     u3795:
  5434  0AC2  1003               	clrc
  5435  0AC3  0DBC               	rlf	__Umul8_16@word_mpld,f
  5436  0AC4  0DBD               	rlf	__Umul8_16@word_mpld+1,f
  5437  0AC5  3EFF               	addlw	-1
  5438  0AC6  1D03               	skipz
  5439  0AC7  2AC2               	goto	u3795
  5440  0AC8  1003               	clrc
  5441  0AC9  0CBE               	rrf	__Umul8_16@multiplier,f
  5442  0ACA                     l3107:
  5443  0ACA  083E               	movf	__Umul8_16@multiplier,w
  5444  0ACB  1D03               	btfss	3,2
  5445  0ACC  2ACE               	goto	u3801
  5446  0ACD  2ACF               	goto	u3800
  5447  0ACE                     u3801:
  5448  0ACE  2AB7               	goto	l3103
  5449  0ACF                     u3800:
  5450  0ACF                     l3109:
  5451  0ACF  083B               	movf	__Umul8_16@product+1,w
  5452  0AD0  00B7               	movwf	?__Umul8_16+1
  5453  0AD1  083A               	movf	__Umul8_16@product,w
  5454  0AD2  00B6               	movwf	?__Umul8_16
  5455  0AD3                     l1013:
  5456  0AD3  0008               	return
  5457  0AD4                     __end_of__Umul8_16:
  5458                           
  5459                           	psect	text22
  5460  04C8                     __ptext22:	
  5461 ;; *************** function _Average_Value *****************
  5462 ;; Defined at:
  5463 ;;		line 12 in file "Average/Average.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;  Value           1    wreg     unsigned char 
  5466 ;;  Avrage_Value    1   36[BANK0 ] PTR unsigned char 
  5467 ;;		 -> Temperature(5), 
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  Value           1    5[BANK1 ] unsigned char 
  5470 ;;  index           1    6[BANK1 ] unsigned char 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  1    wreg      void 
  5473 ;; Registers used:
  5474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5480 ;;      Params:         0       1       0       0       0
  5481 ;;      Locals:         0       0       2       0       0
  5482 ;;      Temps:          0       0       5       0       0
  5483 ;;      Totals:         0       1       7       0       0
  5484 ;;Total ram usage:        8 bytes
  5485 ;; Hardware stack levels used:    1
  5486 ;; Hardware stack levels required when called:    5
  5487 ;; This function calls:
  5488 ;;		___lldiv
  5489 ;;		___lwmod
  5490 ;; This function is called by:
  5491 ;;		_Temperature_Calc
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           
  5496                           ;psect for function _Average_Value
  5497  04C8                     _Average_Value:
  5498                           
  5499                           ;incstack = 0
  5500 ;; hardware stack exceeded
  5501                           ; Regs used in _Average_Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5502                           ;Average_Value@Value stored from wreg
  5503  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  5504  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  5505  04CA  00D8               	movwf	Average_Value@Value^(0+128)
  5506  04CB                     l3113:
  5507                           
  5508                           ;Average/Average.c: 12: void Average_Value(uint8_t Value,uint8_t *Avrage_Values);Average
      +                          /Average.c: 13: {;Average/Average.c: 15:     Avrage_buffer=0;
  5509  04CB  3000               	movlw	0
  5510  04CC  00CF               	movwf	(_Avrage_buffer+3)^(0+128)
  5511  04CD  3000               	movlw	0
  5512  04CE  00CE               	movwf	(_Avrage_buffer+2)^(0+128)
  5513  04CF  3000               	movlw	0
  5514  04D0  00CD               	movwf	(_Avrage_buffer+1)^(0+128)
  5515  04D1  3000               	movlw	0
  5516  04D2  00CC               	movwf	_Avrage_buffer^(0+128)
  5517  04D3                     l3115:
  5518                           
  5519                           ;Average/Average.c: 16:  temb_val[Average_Nvalues]=Value;
  5520  04D3  0858               	movf	Average_Value@Value^(0+128),w
  5521  04D4  00D3               	movwf	??_Average_Value^(0+128)
  5522  04D5  01D4               	clrf	(??_Average_Value^(0+128)+1)
  5523  04D6  01D5               	clrf	(??_Average_Value^(0+128)+2)
  5524  04D7  01D6               	clrf	(??_Average_Value^(0+128)+3)
  5525  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  5526  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  5527  04DA  0859               	movf	_Average_Nvalues,w
  5528  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  5529  04DC  1303               	bcf	3,6	;RP1=0, select bank1
  5530  04DD  00D7               	movwf	(??_Average_Value+4)^(0+128)
  5531  04DE  3001               	movlw	1
  5532  04DF                     u3815:
  5533  04DF  1003               	clrc
  5534  04E0  0DD7               	rlf	(??_Average_Value+4)^(0+128),f
  5535  04E1  3EFF               	addlw	-1
  5536  04E2  1D03               	skipz
  5537  04E3  2CDF               	goto	u3815
  5538  04E4  1003               	clrc
  5539  04E5  0D57               	rlf	(??_Average_Value+4)^(0+128),w
  5540  04E6  3EA0               	addlw	(low (_temb_val| 0))& (0+255)
  5541  04E7  0084               	movwf	4
  5542  04E8  0853               	movf	??_Average_Value^(0+128),w
  5543  04E9  1383               	bcf	3,7	;select IRP bank1
  5544  04EA  0080               	movwf	0
  5545  04EB  0A84               	incf	4,f
  5546  04EC  0854               	movf	(??_Average_Value+1)^(0+128),w
  5547  04ED  0080               	movwf	0
  5548  04EE  0A84               	incf	4,f
  5549  04EF  0855               	movf	(??_Average_Value+2)^(0+128),w
  5550  04F0  0080               	movwf	0
  5551  04F1  0A84               	incf	4,f
  5552  04F2  0856               	movf	(??_Average_Value+3)^(0+128),w
  5553  04F3  0080               	movwf	0
  5554  04F4                     l3117:
  5555                           
  5556                           ;Average/Average.c: 18:  Average_Nvalues= (Average_Nvalues+1)%10U;
  5557  04F4  300A               	movlw	10
  5558  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  5559  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  5560  04F7  00B6               	movwf	___lwmod@divisor
  5561  04F8  3000               	movlw	0
  5562  04F9  00B7               	movwf	___lwmod@divisor+1
  5563  04FA  0859               	movf	_Average_Nvalues,w
  5564  04FB  3E01               	addlw	1
  5565  04FC  00B8               	movwf	___lwmod@dividend
  5566  04FD  3000               	movlw	0
  5567  04FE  1803               	skipnc
  5568  04FF  3001               	movlw	1
  5569  0500  00B9               	movwf	___lwmod@dividend+1
  5570  0501  120A  158A  2469  120A  118A  	fcall	___lwmod
  5571  0506  1283               	bcf	3,5	;RP0=0, select bank0
  5572  0507  1303               	bcf	3,6	;RP1=0, select bank0
  5573  0508  0836               	movf	?___lwmod,w
  5574  0509  00FF               	movwf	btemp+1
  5575  050A  087F               	movf	btemp+1,w
  5576  050B  00D9               	movwf	_Average_Nvalues
  5577  050C                     l3119:
  5578                           
  5579                           ;Average/Average.c: 20:  for(uint8_t index=0;index<10U;index++)
  5580  050C  1683               	bsf	3,5	;RP0=1, select bank1
  5581  050D  1303               	bcf	3,6	;RP1=0, select bank1
  5582  050E  01D9               	clrf	Average_Value@index^(0+128)
  5583  050F                     l3125:
  5584                           
  5585                           ;Average/Average.c: 21:  {;Average/Average.c: 22:   Avrage_buffer+=temb_val[index];
  5586  050F  0859               	movf	Average_Value@index^(0+128),w
  5587  0510  00D3               	movwf	??_Average_Value^(0+128)
  5588  0511  3001               	movlw	1
  5589  0512                     u3825:
  5590  0512  1003               	clrc
  5591  0513  0DD3               	rlf	??_Average_Value^(0+128),f
  5592  0514  3EFF               	addlw	-1
  5593  0515  1D03               	skipz
  5594  0516  2D12               	goto	u3825
  5595  0517  1003               	clrc
  5596  0518  0D53               	rlf	??_Average_Value^(0+128),w
  5597  0519  3EA0               	addlw	(low (_temb_val| 0))& (0+255)
  5598  051A  0084               	movwf	4
  5599  051B  1383               	bcf	3,7	;select IRP bank1
  5600  051C  0800               	movf	0,w
  5601  051D  07CC               	addwf	_Avrage_buffer^(0+128),f
  5602  051E  0A84               	incf	4,f
  5603  051F  0800               	movf	0,w
  5604  0520  1803               	skipnc
  5605  0521  0F00               	incfsz	0,w
  5606  0522  2D24               	goto	u3831
  5607  0523  2D25               	goto	u3832
  5608  0524                     u3831:
  5609  0524  07CD               	addwf	(_Avrage_buffer+1)^(0+128),f
  5610  0525                     u3832:
  5611  0525  0A84               	incf	4,f
  5612  0526  0800               	movf	0,w
  5613  0527  1803               	skipnc
  5614  0528  0F00               	incfsz	0,w
  5615  0529  2D2B               	goto	u3833
  5616  052A  2D2C               	goto	u3834
  5617  052B                     u3833:
  5618  052B  07CE               	addwf	(_Avrage_buffer+2)^(0+128),f
  5619  052C                     u3834:
  5620  052C  0A84               	incf	4,f
  5621  052D  0800               	movf	0,w
  5622  052E  1803               	skipnc
  5623  052F  0F00               	incfsz	0,w
  5624  0530  2D32               	goto	u3835
  5625  0531  2D33               	goto	u3836
  5626  0532                     u3835:
  5627  0532  07CF               	addwf	(_Avrage_buffer+3)^(0+128),f
  5628  0533                     u3836:
  5629  0533                     l3127:
  5630                           
  5631                           ;Average/Average.c: 23:  }
  5632  0533  3001               	movlw	1
  5633  0534  00FF               	movwf	btemp+1
  5634  0535  087F               	movf	btemp+1,w
  5635  0536  07D9               	addwf	Average_Value@index^(0+128),f
  5636  0537                     l3129:
  5637  0537  300A               	movlw	10
  5638  0538  0259               	subwf	Average_Value@index^(0+128),w
  5639  0539  1C03               	skipc
  5640  053A  2D3C               	goto	u3841
  5641  053B  2D3D               	goto	u3840
  5642  053C                     u3841:
  5643  053C  2D0F               	goto	l3125
  5644  053D                     u3840:
  5645  053D                     l3131:
  5646                           
  5647                           ;Average/Average.c: 26:    *Avrage_Values=Avrage_buffer/10U;
  5648  053D  3000               	movlw	0
  5649  053E  1283               	bcf	3,5	;RP0=0, select bank0
  5650  053F  1303               	bcf	3,6	;RP1=0, select bank0
  5651  0540  00B9               	movwf	___lldiv@divisor+3
  5652  0541  3000               	movlw	0
  5653  0542  00B8               	movwf	___lldiv@divisor+2
  5654  0543  3000               	movlw	0
  5655  0544  00B7               	movwf	___lldiv@divisor+1
  5656  0545  300A               	movlw	10
  5657  0546  00B6               	movwf	___lldiv@divisor
  5658  0547  1683               	bsf	3,5	;RP0=1, select bank1
  5659  0548  1303               	bcf	3,6	;RP1=0, select bank1
  5660  0549  084F               	movf	(_Avrage_buffer+3)^(0+128),w
  5661  054A  1283               	bcf	3,5	;RP0=0, select bank0
  5662  054B  1303               	bcf	3,6	;RP1=0, select bank0
  5663  054C  00BD               	movwf	___lldiv@dividend+3
  5664  054D  1683               	bsf	3,5	;RP0=1, select bank1
  5665  054E  1303               	bcf	3,6	;RP1=0, select bank1
  5666  054F  084E               	movf	(_Avrage_buffer+2)^(0+128),w
  5667  0550  1283               	bcf	3,5	;RP0=0, select bank0
  5668  0551  1303               	bcf	3,6	;RP1=0, select bank0
  5669  0552  00BC               	movwf	___lldiv@dividend+2
  5670  0553  1683               	bsf	3,5	;RP0=1, select bank1
  5671  0554  1303               	bcf	3,6	;RP1=0, select bank1
  5672  0555  084D               	movf	(_Avrage_buffer+1)^(0+128),w
  5673  0556  1283               	bcf	3,5	;RP0=0, select bank0
  5674  0557  1303               	bcf	3,6	;RP1=0, select bank0
  5675  0558  00BB               	movwf	___lldiv@dividend+1
  5676  0559  1683               	bsf	3,5	;RP0=1, select bank1
  5677  055A  1303               	bcf	3,6	;RP1=0, select bank1
  5678  055B  084C               	movf	_Avrage_buffer^(0+128),w
  5679  055C  1283               	bcf	3,5	;RP0=0, select bank0
  5680  055D  1303               	bcf	3,6	;RP1=0, select bank0
  5681  055E  00BA               	movwf	___lldiv@dividend
  5682  055F  120A  118A  2703  120A  118A  	fcall	___lldiv
  5683  0564  1283               	bcf	3,5	;RP0=0, select bank0
  5684  0565  1303               	bcf	3,6	;RP1=0, select bank0
  5685  0566  0836               	movf	?___lldiv,w
  5686  0567  00FF               	movwf	btemp+1
  5687  0568  0844               	movf	Average_Value@Avrage_Values,w
  5688  0569  0084               	movwf	4
  5689  056A  087F               	movf	btemp+1,w
  5690  056B  1383               	bcf	3,7	;select IRP bank0
  5691  056C  0080               	movwf	0
  5692  056D                     l85:
  5693  056D  0008               	return
  5694  056E                     __end_of_Average_Value:
  5695                           
  5696                           	psect	text23
  5697  0C69                     __ptext23:	
  5698 ;; *************** function ___lwmod *****************
  5699 ;; Defined at:
  5700 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;  divisor         2   22[BANK0 ] unsigned int 
  5703 ;;  dividend        2   24[BANK0 ] unsigned int 
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;  counter         1   26[BANK0 ] unsigned char 
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  2   22[BANK0 ] unsigned int 
  5708 ;; Registers used:
  5709 ;;		wreg, status,2, status,0, btemp+1
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5715 ;;      Params:         0       4       0       0       0
  5716 ;;      Locals:         0       1       0       0       0
  5717 ;;      Temps:          0       0       0       0       0
  5718 ;;      Totals:         0       5       0       0       0
  5719 ;;Total ram usage:        5 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; Hardware stack levels required when called:    4
  5722 ;; This function calls:
  5723 ;;		Nothing
  5724 ;; This function is called by:
  5725 ;;		_Average_Value
  5726 ;;		_Temperature_Calc
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           
  5731                           ;psect for function ___lwmod
  5732  0C69                     ___lwmod:
  5733  0C69                     l3077:	
  5734                           ;incstack = 0
  5735 ;; hardware stack exceeded
  5736                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  5737                           
  5738  0C69  1283               	bcf	3,5	;RP0=0, select bank0
  5739  0C6A  1303               	bcf	3,6	;RP1=0, select bank0
  5740  0C6B  0836               	movf	___lwmod@divisor,w
  5741  0C6C  0437               	iorwf	___lwmod@divisor+1,w
  5742  0C6D  1903               	btfsc	3,2
  5743  0C6E  2C70               	goto	u3721
  5744  0C6F  2C71               	goto	u3720
  5745  0C70                     u3721:
  5746  0C70  2CA0               	goto	l3095
  5747  0C71                     u3720:
  5748  0C71                     l3079:
  5749  0C71  01BA               	clrf	___lwmod@counter
  5750  0C72  0ABA               	incf	___lwmod@counter,f
  5751  0C73  2C7F               	goto	l3085
  5752  0C74                     l3081:
  5753  0C74  3001               	movlw	1
  5754  0C75                     u3735:
  5755  0C75  1003               	clrc
  5756  0C76  0DB6               	rlf	___lwmod@divisor,f
  5757  0C77  0DB7               	rlf	___lwmod@divisor+1,f
  5758  0C78  3EFF               	addlw	-1
  5759  0C79  1D03               	skipz
  5760  0C7A  2C75               	goto	u3735
  5761  0C7B                     l3083:
  5762  0C7B  3001               	movlw	1
  5763  0C7C  00FF               	movwf	btemp+1
  5764  0C7D  087F               	movf	btemp+1,w
  5765  0C7E  07BA               	addwf	___lwmod@counter,f
  5766  0C7F                     l3085:
  5767  0C7F  1FB7               	btfss	___lwmod@divisor+1,7
  5768  0C80  2C82               	goto	u3741
  5769  0C81  2C83               	goto	u3740
  5770  0C82                     u3741:
  5771  0C82  2C74               	goto	l3081
  5772  0C83                     u3740:
  5773  0C83                     l3087:
  5774  0C83  0837               	movf	___lwmod@divisor+1,w
  5775  0C84  0239               	subwf	___lwmod@dividend+1,w
  5776  0C85  1D03               	skipz
  5777  0C86  2C89               	goto	u3755
  5778  0C87  0836               	movf	___lwmod@divisor,w
  5779  0C88  0238               	subwf	___lwmod@dividend,w
  5780  0C89                     u3755:
  5781  0C89  1C03               	skipc
  5782  0C8A  2C8C               	goto	u3751
  5783  0C8B  2C8D               	goto	u3750
  5784  0C8C                     u3751:
  5785  0C8C  2C93               	goto	l3091
  5786  0C8D                     u3750:
  5787  0C8D                     l3089:
  5788  0C8D  0836               	movf	___lwmod@divisor,w
  5789  0C8E  02B8               	subwf	___lwmod@dividend,f
  5790  0C8F  0837               	movf	___lwmod@divisor+1,w
  5791  0C90  1C03               	skipc
  5792  0C91  03B9               	decf	___lwmod@dividend+1,f
  5793  0C92  02B9               	subwf	___lwmod@dividend+1,f
  5794  0C93                     l3091:
  5795  0C93  3001               	movlw	1
  5796  0C94                     u3765:
  5797  0C94  1003               	clrc
  5798  0C95  0CB7               	rrf	___lwmod@divisor+1,f
  5799  0C96  0CB6               	rrf	___lwmod@divisor,f
  5800  0C97  3EFF               	addlw	-1
  5801  0C98  1D03               	skipz
  5802  0C99  2C94               	goto	u3765
  5803  0C9A                     l3093:
  5804  0C9A  3001               	movlw	1
  5805  0C9B  02BA               	subwf	___lwmod@counter,f
  5806  0C9C  1D03               	btfss	3,2
  5807  0C9D  2C9F               	goto	u3771
  5808  0C9E  2CA0               	goto	u3770
  5809  0C9F                     u3771:
  5810  0C9F  2C83               	goto	l3087
  5811  0CA0                     u3770:
  5812  0CA0                     l3095:
  5813  0CA0  0839               	movf	___lwmod@dividend+1,w
  5814  0CA1  00B7               	movwf	?___lwmod+1
  5815  0CA2  0838               	movf	___lwmod@dividend,w
  5816  0CA3  00B6               	movwf	?___lwmod
  5817  0CA4                     l885:
  5818  0CA4  0008               	return
  5819  0CA5                     __end_of___lwmod:
  5820                           
  5821                           	psect	text24
  5822  0703                     __ptext24:	
  5823 ;; *************** function ___lldiv *****************
  5824 ;; Defined at:
  5825 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  divisor         4   22[BANK0 ] unsigned long 
  5828 ;;  dividend        4   26[BANK0 ] unsigned long 
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;  quotient        4   31[BANK0 ] unsigned long 
  5831 ;;  counter         1   35[BANK0 ] unsigned char 
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  4   22[BANK0 ] unsigned long 
  5834 ;; Registers used:
  5835 ;;		wreg, status,2, status,0, btemp+1
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5841 ;;      Params:         0       8       0       0       0
  5842 ;;      Locals:         0       5       0       0       0
  5843 ;;      Temps:          0       1       0       0       0
  5844 ;;      Totals:         0      14       0       0       0
  5845 ;;Total ram usage:       14 bytes
  5846 ;; Hardware stack levels used:    1
  5847 ;; Hardware stack levels required when called:    4
  5848 ;; This function calls:
  5849 ;;		Nothing
  5850 ;; This function is called by:
  5851 ;;		_Average_Value
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           
  5856                           ;psect for function ___lldiv
  5857  0703                     ___lldiv:
  5858  0703                     l3051:	
  5859                           ;incstack = 0
  5860 ;; hardware stack exceeded
  5861                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  5862                           
  5863  0703  3000               	movlw	0
  5864  0704  1283               	bcf	3,5	;RP0=0, select bank0
  5865  0705  1303               	bcf	3,6	;RP1=0, select bank0
  5866  0706  00C2               	movwf	___lldiv@quotient+3
  5867  0707  3000               	movlw	0
  5868  0708  00C1               	movwf	___lldiv@quotient+2
  5869  0709  3000               	movlw	0
  5870  070A  00C0               	movwf	___lldiv@quotient+1
  5871  070B  3000               	movlw	0
  5872  070C  00BF               	movwf	___lldiv@quotient
  5873  070D  0839               	movf	___lldiv@divisor+3,w
  5874  070E  0438               	iorwf	___lldiv@divisor+2,w
  5875  070F  0437               	iorwf	___lldiv@divisor+1,w
  5876  0710  0436               	iorwf	___lldiv@divisor,w
  5877  0711  1903               	skipnz
  5878  0712  2F14               	goto	u3651
  5879  0713  2F15               	goto	u3650
  5880  0714                     u3651:
  5881  0714  2F62               	goto	l3073
  5882  0715                     u3650:
  5883  0715                     l3053:
  5884  0715  01C3               	clrf	___lldiv@counter
  5885  0716  0AC3               	incf	___lldiv@counter,f
  5886  0717  2F25               	goto	l3059
  5887  0718                     l3055:
  5888  0718  3001               	movlw	1
  5889  0719  00BE               	movwf	??___lldiv
  5890  071A                     u3665:
  5891  071A  1003               	clrc
  5892  071B  0DB6               	rlf	___lldiv@divisor,f
  5893  071C  0DB7               	rlf	___lldiv@divisor+1,f
  5894  071D  0DB8               	rlf	___lldiv@divisor+2,f
  5895  071E  0DB9               	rlf	___lldiv@divisor+3,f
  5896  071F  0BBE               	decfsz	??___lldiv,f
  5897  0720  2F1A               	goto	u3665
  5898  0721                     l3057:
  5899  0721  3001               	movlw	1
  5900  0722  00FF               	movwf	btemp+1
  5901  0723  087F               	movf	btemp+1,w
  5902  0724  07C3               	addwf	___lldiv@counter,f
  5903  0725                     l3059:
  5904  0725  1FB9               	btfss	___lldiv@divisor+3,7
  5905  0726  2F28               	goto	u3671
  5906  0727  2F29               	goto	u3670
  5907  0728                     u3671:
  5908  0728  2F18               	goto	l3055
  5909  0729                     u3670:
  5910  0729                     l3061:
  5911  0729  3001               	movlw	1
  5912  072A  00BE               	movwf	??___lldiv
  5913  072B                     u3685:
  5914  072B  1003               	clrc
  5915  072C  0DBF               	rlf	___lldiv@quotient,f
  5916  072D  0DC0               	rlf	___lldiv@quotient+1,f
  5917  072E  0DC1               	rlf	___lldiv@quotient+2,f
  5918  072F  0DC2               	rlf	___lldiv@quotient+3,f
  5919  0730  0BBE               	decfsz	??___lldiv,f
  5920  0731  2F2B               	goto	u3685
  5921  0732                     l3063:
  5922  0732  0839               	movf	___lldiv@divisor+3,w
  5923  0733  023D               	subwf	___lldiv@dividend+3,w
  5924  0734  1D03               	skipz
  5925  0735  2F40               	goto	u3695
  5926  0736  0838               	movf	___lldiv@divisor+2,w
  5927  0737  023C               	subwf	___lldiv@dividend+2,w
  5928  0738  1D03               	skipz
  5929  0739  2F40               	goto	u3695
  5930  073A  0837               	movf	___lldiv@divisor+1,w
  5931  073B  023B               	subwf	___lldiv@dividend+1,w
  5932  073C  1D03               	skipz
  5933  073D  2F40               	goto	u3695
  5934  073E  0836               	movf	___lldiv@divisor,w
  5935  073F  023A               	subwf	___lldiv@dividend,w
  5936  0740                     u3695:
  5937  0740  1C03               	skipc
  5938  0741  2F43               	goto	u3691
  5939  0742  2F44               	goto	u3690
  5940  0743                     u3691:
  5941  0743  2F53               	goto	l3069
  5942  0744                     u3690:
  5943  0744                     l3065:
  5944  0744  0836               	movf	___lldiv@divisor,w
  5945  0745  02BA               	subwf	___lldiv@dividend,f
  5946  0746  0837               	movf	___lldiv@divisor+1,w
  5947  0747  1C03               	skipc
  5948  0748  0F37               	incfsz	___lldiv@divisor+1,w
  5949  0749  02BB               	subwf	___lldiv@dividend+1,f
  5950  074A  0838               	movf	___lldiv@divisor+2,w
  5951  074B  1C03               	skipc
  5952  074C  0F38               	incfsz	___lldiv@divisor+2,w
  5953  074D  02BC               	subwf	___lldiv@dividend+2,f
  5954  074E  0839               	movf	___lldiv@divisor+3,w
  5955  074F  1C03               	skipc
  5956  0750  0F39               	incfsz	___lldiv@divisor+3,w
  5957  0751  02BD               	subwf	___lldiv@dividend+3,f
  5958  0752                     l3067:
  5959  0752  143F               	bsf	___lldiv@quotient,0
  5960  0753                     l3069:
  5961  0753  3001               	movlw	1
  5962  0754                     u3705:
  5963  0754  1003               	clrc
  5964  0755  0CB9               	rrf	___lldiv@divisor+3,f
  5965  0756  0CB8               	rrf	___lldiv@divisor+2,f
  5966  0757  0CB7               	rrf	___lldiv@divisor+1,f
  5967  0758  0CB6               	rrf	___lldiv@divisor,f
  5968  0759  3EFF               	addlw	-1
  5969  075A  1D03               	skipz
  5970  075B  2F54               	goto	u3705
  5971  075C                     l3071:
  5972  075C  3001               	movlw	1
  5973  075D  02C3               	subwf	___lldiv@counter,f
  5974  075E  1D03               	btfss	3,2
  5975  075F  2F61               	goto	u3711
  5976  0760  2F62               	goto	u3710
  5977  0761                     u3711:
  5978  0761  2F29               	goto	l3061
  5979  0762                     u3710:
  5980  0762                     l3073:
  5981  0762  0842               	movf	___lldiv@quotient+3,w
  5982  0763  00B9               	movwf	?___lldiv+3
  5983  0764  0841               	movf	___lldiv@quotient+2,w
  5984  0765  00B8               	movwf	?___lldiv+2
  5985  0766  0840               	movf	___lldiv@quotient+1,w
  5986  0767  00B7               	movwf	?___lldiv+1
  5987  0768  083F               	movf	___lldiv@quotient,w
  5988  0769  00B6               	movwf	?___lldiv
  5989  076A                     l639:
  5990  076A  0008               	return
  5991  076B                     __end_of___lldiv:
  5992                           
  5993                           	psect	text25
  5994  0DC3                     __ptext25:	
  5995 ;; *************** function _SSD_MainFunction *****************
  5996 ;; Defined at:
  5997 ;;		line 25 in file "SSD/SSD.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;		None
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;		None
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  1    wreg      void 
  6004 ;; Registers used:
  6005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6006 ;; Tracked objects:
  6007 ;;		On entry : 0/0
  6008 ;;		On exit  : 0/0
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6011 ;;      Params:         0       0       0       0       0
  6012 ;;      Locals:         0       0       0       0       0
  6013 ;;      Temps:          0       2       0       0       0
  6014 ;;      Totals:         0       2       0       0       0
  6015 ;;Total ram usage:        2 bytes
  6016 ;; Hardware stack levels used:    1
  6017 ;; Hardware stack levels required when called:    7
  6018 ;; This function calls:
  6019 ;;		_SSD_SelectDigit
  6020 ;;		_SSD_SelectDisplay
  6021 ;; This function is called by:
  6022 ;;		_Scheduler_Task1
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025                           
  6026                           
  6027                           ;psect for function _SSD_MainFunction
  6028  0DC3                     _SSD_MainFunction:
  6029  0DC3                     l3627:	
  6030                           ;incstack = 0
  6031 ;; hardware stack exceeded
  6032                           ; Regs used in _SSD_MainFunction: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6033                           
  6034                           
  6035                           ;SSD/SSD.c: 28:     SSD_SelectDisplay();
  6036  0DC3  120A  158A  2388  120A  158A  	fcall	_SSD_SelectDisplay
  6037                           
  6038                           ;SSD/SSD.c: 29:     SSD_SelectDigit();
  6039  0DC8  120A  158A  26D4  120A  158A  	fcall	_SSD_SelectDigit
  6040                           
  6041                           ;SSD/SSD.c: 31:     switch(SSD)
  6042  0DCD  2DEE               	goto	l3653
  6043  0DCE                     l3629:
  6044                           
  6045                           ;SSD/SSD.c: 34:         PORTD=0b00111111;
  6046  0DCE  303F               	movlw	63
  6047  0DCF  0088               	movwf	8	;volatile
  6048                           
  6049                           ;SSD/SSD.c: 35:         break;
  6050  0DD0  2E1B               	goto	l485
  6051  0DD1                     l3631:
  6052                           
  6053                           ;SSD/SSD.c: 38:         PORTD=0b00000110;
  6054  0DD1  3006               	movlw	6
  6055  0DD2  0088               	movwf	8	;volatile
  6056                           
  6057                           ;SSD/SSD.c: 39:         break;
  6058  0DD3  2E1B               	goto	l485
  6059  0DD4                     l3633:
  6060                           
  6061                           ;SSD/SSD.c: 42:         PORTD=0b01011011;
  6062  0DD4  305B               	movlw	91
  6063  0DD5  0088               	movwf	8	;volatile
  6064                           
  6065                           ;SSD/SSD.c: 43:         break;
  6066  0DD6  2E1B               	goto	l485
  6067  0DD7                     l3635:
  6068                           
  6069                           ;SSD/SSD.c: 46:         PORTD=0b01001111;
  6070  0DD7  304F               	movlw	79
  6071  0DD8  0088               	movwf	8	;volatile
  6072                           
  6073                           ;SSD/SSD.c: 47:         break;
  6074  0DD9  2E1B               	goto	l485
  6075  0DDA                     l3637:
  6076                           
  6077                           ;SSD/SSD.c: 50:         PORTD=0b01100110;
  6078  0DDA  3066               	movlw	102
  6079  0DDB  0088               	movwf	8	;volatile
  6080                           
  6081                           ;SSD/SSD.c: 51:         break;
  6082  0DDC  2E1B               	goto	l485
  6083  0DDD                     l3639:
  6084                           
  6085                           ;SSD/SSD.c: 54:         PORTD=0b01101101;
  6086  0DDD  306D               	movlw	109
  6087  0DDE  0088               	movwf	8	;volatile
  6088                           
  6089                           ;SSD/SSD.c: 55:         break;
  6090  0DDF  2E1B               	goto	l485
  6091  0DE0                     l3641:
  6092                           
  6093                           ;SSD/SSD.c: 58:         PORTD=0b01111101;
  6094  0DE0  307D               	movlw	125
  6095  0DE1  0088               	movwf	8	;volatile
  6096                           
  6097                           ;SSD/SSD.c: 59:         break;
  6098  0DE2  2E1B               	goto	l485
  6099  0DE3                     l3643:
  6100                           
  6101                           ;SSD/SSD.c: 62:         PORTD=0b00000111;
  6102  0DE3  3007               	movlw	7
  6103  0DE4  0088               	movwf	8	;volatile
  6104                           
  6105                           ;SSD/SSD.c: 63:         break;
  6106  0DE5  2E1B               	goto	l485
  6107  0DE6                     l3645:
  6108                           
  6109                           ;SSD/SSD.c: 66:         PORTD=0b01111111;
  6110  0DE6  307F               	movlw	127
  6111  0DE7  0088               	movwf	8	;volatile
  6112                           
  6113                           ;SSD/SSD.c: 67:         break;
  6114  0DE8  2E1B               	goto	l485
  6115  0DE9                     l3647:
  6116                           
  6117                           ;SSD/SSD.c: 70:         PORTD=0b01101111;
  6118  0DE9  306F               	movlw	111
  6119  0DEA  0088               	movwf	8	;volatile
  6120                           
  6121                           ;SSD/SSD.c: 71:         break;
  6122  0DEB  2E1B               	goto	l485
  6123  0DEC                     l3649:
  6124                           
  6125                           ;SSD/SSD.c: 74:         PORTD=0;
  6126  0DEC  0188               	clrf	8	;volatile
  6127                           
  6128                           ;SSD/SSD.c: 75:         break;
  6129  0DED  2E1B               	goto	l485
  6130  0DEE                     l3653:
  6131  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  6132  0DEF  1303               	bcf	3,6	;RP1=0, select bank0
  6133  0DF0  084A               	movf	_SSD,w
  6134  0DF1  00C2               	movwf	??_SSD_MainFunction
  6135  0DF2  01C3               	clrf	??_SSD_MainFunction+1
  6136                           
  6137                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6138                           ; Switch size 1, requested type "simple"
  6139                           ; Number of cases is 1, Range of values is 0 to 0
  6140                           ; switch strategies available:
  6141                           ; Name         Instructions Cycles
  6142                           ; simple_byte            4     3 (average)
  6143                           ; direct_byte           11     8 (fixed)
  6144                           ; jumptable            260     6 (fixed)
  6145                           ;	Chosen strategy is simple_byte
  6146  0DF3  0843               	movf	??_SSD_MainFunction+1,w
  6147  0DF4  3A00               	xorlw	0	; case 0
  6148  0DF5  1903               	skipnz
  6149  0DF6  2DF8               	goto	l3873
  6150  0DF7  2E1B               	goto	l485
  6151  0DF8                     l3873:
  6152                           
  6153                           ; Switch size 1, requested type "simple"
  6154                           ; Number of cases is 11, Range of values is 0 to 10
  6155                           ; switch strategies available:
  6156                           ; Name         Instructions Cycles
  6157                           ; simple_byte           34    18 (average)
  6158                           ; direct_byte           41     8 (fixed)
  6159                           ; jumptable            260     6 (fixed)
  6160                           ;	Chosen strategy is simple_byte
  6161  0DF8  0842               	movf	??_SSD_MainFunction,w
  6162  0DF9  3A00               	xorlw	0	; case 0
  6163  0DFA  1903               	skipnz
  6164  0DFB  2DCE               	goto	l3629
  6165  0DFC  3A01               	xorlw	1	; case 1
  6166  0DFD  1903               	skipnz
  6167  0DFE  2DD1               	goto	l3631
  6168  0DFF  3A03               	xorlw	3	; case 2
  6169  0E00  1903               	skipnz
  6170  0E01  2DD4               	goto	l3633
  6171  0E02  3A01               	xorlw	1	; case 3
  6172  0E03  1903               	skipnz
  6173  0E04  2DD7               	goto	l3635
  6174  0E05  3A07               	xorlw	7	; case 4
  6175  0E06  1903               	skipnz
  6176  0E07  2DDA               	goto	l3637
  6177  0E08  3A01               	xorlw	1	; case 5
  6178  0E09  1903               	skipnz
  6179  0E0A  2DDD               	goto	l3639
  6180  0E0B  3A03               	xorlw	3	; case 6
  6181  0E0C  1903               	skipnz
  6182  0E0D  2DE0               	goto	l3641
  6183  0E0E  3A01               	xorlw	1	; case 7
  6184  0E0F  1903               	skipnz
  6185  0E10  2DE3               	goto	l3643
  6186  0E11  3A0F               	xorlw	15	; case 8
  6187  0E12  1903               	skipnz
  6188  0E13  2DE6               	goto	l3645
  6189  0E14  3A01               	xorlw	1	; case 9
  6190  0E15  1903               	skipnz
  6191  0E16  2DE9               	goto	l3647
  6192  0E17  3A03               	xorlw	3	; case 10
  6193  0E18  1903               	skipnz
  6194  0E19  2DEC               	goto	l3649
  6195  0E1A  2E1B               	goto	l485
  6196  0E1B                     l485:
  6197  0E1B  0008               	return
  6198  0E1C                     __end_of_SSD_MainFunction:
  6199                           
  6200                           	psect	text26
  6201  0B88                     __ptext26:	
  6202 ;; *************** function _SSD_SelectDisplay *****************
  6203 ;; Defined at:
  6204 ;;		line 101 in file "SSD/SSD.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;		None
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;		None
  6209 ;; Return value:  Size  Location     Type
  6210 ;;                  1    wreg      void 
  6211 ;; Registers used:
  6212 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6218 ;;      Params:         0       0       0       0       0
  6219 ;;      Locals:         0       0       0       0       0
  6220 ;;      Temps:          0       0       0       0       0
  6221 ;;      Totals:         0       0       0       0       0
  6222 ;;Total ram usage:        0 bytes
  6223 ;; Hardware stack levels used:    1
  6224 ;; Hardware stack levels required when called:    6
  6225 ;; This function calls:
  6226 ;;		_SSD_Blink
  6227 ;; This function is called by:
  6228 ;;		_SSD_MainFunction
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           
  6233                           ;psect for function _SSD_SelectDisplay
  6234  0B88                     _SSD_SelectDisplay:
  6235  0B88                     l3531:	
  6236                           ;incstack = 0
  6237 ;; hardware stack exceeded
  6238                           ; Regs used in _SSD_SelectDisplay: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6239                           
  6240                           
  6241                           ;SSD/SSD.c: 105:   if(Mode.Select_Mode==Normal_Mode)
  6242  0B88  1283               	bcf	3,5	;RP0=0, select bank0
  6243  0B89  1303               	bcf	3,6	;RP1=0, select bank0
  6244  0B8A  0345               	decf	_Mode,w
  6245  0B8B  1D03               	btfss	3,2
  6246  0B8C  2B8E               	goto	u4781
  6247  0B8D  2B8F               	goto	u4780
  6248  0B8E                     u4781:
  6249  0B8E  2B96               	goto	l3537
  6250  0B8F                     u4780:
  6251  0B8F                     l3533:
  6252                           
  6253                           ;SSD/SSD.c: 106:   {;SSD/SSD.c: 107:    Tempreture=Temperature.Average_Value;
  6254  0B8F  0852               	movf	_Temperature+1,w
  6255  0B90  00FF               	movwf	btemp+1
  6256  0B91  087F               	movf	btemp+1,w
  6257  0B92  00C9               	movwf	_Tempreture
  6258  0B93                     l3535:
  6259                           
  6260                           ;SSD/SSD.c: 108:    Enable_SSD=Enable_SSD_On;
  6261  0B93  01CF               	clrf	_Enable_SSD
  6262  0B94  0ACF               	incf	_Enable_SSD,f
  6263                           
  6264                           ;SSD/SSD.c: 109:   }
  6265  0B95  2BBB               	goto	l502
  6266  0B96                     l3537:
  6267  0B96  3002               	movlw	2
  6268  0B97  0645               	xorwf	_Mode,w
  6269  0B98  1D03               	btfss	3,2
  6270  0B99  2B9B               	goto	u4791
  6271  0B9A  2B9C               	goto	u4790
  6272  0B9B                     u4791:
  6273  0B9B  2BAE               	goto	l3543
  6274  0B9C                     u4790:
  6275  0B9C                     l3539:
  6276                           
  6277                           ;SSD/SSD.c: 111:   {;SSD/SSD.c: 112:    Tempreture=Temperature.Set_Temp;
  6278  0B9C  0853               	movf	_Temperature+2,w
  6279  0B9D  00FF               	movwf	btemp+1
  6280  0B9E  087F               	movf	btemp+1,w
  6281  0B9F  00C9               	movwf	_Tempreture
  6282  0BA0                     l3541:
  6283                           
  6284                           ;SSD/SSD.c: 113:       SSD_Blink(1000,20);
  6285  0BA0  30E8               	movlw	232
  6286  0BA1  00BC               	movwf	SSD_Blink@Times_Ms
  6287  0BA2  3003               	movlw	3
  6288  0BA3  00BD               	movwf	SSD_Blink@Times_Ms+1
  6289  0BA4  3014               	movlw	20
  6290  0BA5  00BE               	movwf	SSD_Blink@Task_Peroid
  6291  0BA6  3000               	movlw	0
  6292  0BA7  00BF               	movwf	SSD_Blink@Task_Peroid+1
  6293  0BA8  120A  158A  242E  120A  158A  	fcall	_SSD_Blink
  6294                           
  6295                           ;SSD/SSD.c: 114:   }
  6296  0BAD  2BBB               	goto	l502
  6297  0BAE                     l3543:
  6298  0BAE  0845               	movf	_Mode,w
  6299  0BAF  1D03               	btfss	3,2
  6300  0BB0  2BB2               	goto	u4801
  6301  0BB1  2BB3               	goto	u4800
  6302  0BB2                     u4801:
  6303  0BB2  2BBB               	goto	l502
  6304  0BB3                     u4800:
  6305  0BB3                     l3545:
  6306                           
  6307                           ;SSD/SSD.c: 116:   {;SSD/SSD.c: 117:   (PORTA &= ~(1<<5)) ;
  6308  0BB3  30DF               	movlw	223
  6309  0BB4  00FF               	movwf	btemp+1
  6310  0BB5  087F               	movf	btemp+1,w
  6311  0BB6  0585               	andwf	5,f	;volatile
  6312                           
  6313                           ;SSD/SSD.c: 118:   (PORTA &= ~(1<<4)) ;
  6314  0BB7  30EF               	movlw	239
  6315  0BB8  00FF               	movwf	btemp+1
  6316  0BB9  087F               	movf	btemp+1,w
  6317  0BBA  0585               	andwf	5,f	;volatile
  6318  0BBB                     l502:
  6319  0BBB  0008               	return
  6320  0BBC                     __end_of_SSD_SelectDisplay:
  6321                           
  6322                           	psect	text27
  6323  0C2E                     __ptext27:	
  6324 ;; *************** function _SSD_Blink *****************
  6325 ;; Defined at:
  6326 ;;		line 80 in file "SSD/SSD.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;  Times_Ms        2   28[BANK0 ] unsigned int 
  6329 ;;  Task_Peroid     2   30[BANK0 ] unsigned int 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;		None
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  1    wreg      void 
  6334 ;; Registers used:
  6335 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6341 ;;      Params:         0       4       0       0       0
  6342 ;;      Locals:         0       0       0       0       0
  6343 ;;      Temps:          0       2       0       0       0
  6344 ;;      Totals:         0       6       0       0       0
  6345 ;;Total ram usage:        6 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; Hardware stack levels required when called:    5
  6348 ;; This function calls:
  6349 ;;		___wmul
  6350 ;; This function is called by:
  6351 ;;		_SSD_SelectDisplay
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           
  6356                           ;psect for function _SSD_Blink
  6357  0C2E                     _SSD_Blink:
  6358  0C2E                     l3401:	
  6359                           ;incstack = 0
  6360 ;; hardware stack exceeded
  6361                           ; Regs used in _SSD_Blink: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6362                           
  6363                           
  6364                           ;SSD/SSD.c: 80: void SSD_Blink(uint16_t Times_Ms,uint16_t Task_Peroid);SSD/SSD.c: 81: {;
      +                          SSD/SSD.c: 82:   static uint8_t Counter=1;;SSD/SSD.c: 84:   if(Counter*Task_Peroid==Time
      +                          s_Ms)
  6365  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  6366  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  6367  0C30  0857               	movf	SSD_Blink@Counter,w
  6368  0C31  00C0               	movwf	??_SSD_Blink
  6369  0C32  01C1               	clrf	??_SSD_Blink+1
  6370  0C33  0840               	movf	??_SSD_Blink,w
  6371  0C34  00B6               	movwf	___wmul@multiplier
  6372  0C35  0841               	movf	??_SSD_Blink+1,w
  6373  0C36  00B7               	movwf	___wmul@multiplier+1
  6374  0C37  083F               	movf	SSD_Blink@Task_Peroid+1,w
  6375  0C38  00B9               	movwf	___wmul@multiplicand+1
  6376  0C39  083E               	movf	SSD_Blink@Task_Peroid,w
  6377  0C3A  00B8               	movwf	___wmul@multiplicand
  6378  0C3B  120A  158A  2284  120A  158A  	fcall	___wmul
  6379  0C40  1283               	bcf	3,5	;RP0=0, select bank0
  6380  0C41  1303               	bcf	3,6	;RP1=0, select bank0
  6381  0C42  083D               	movf	SSD_Blink@Times_Ms+1,w
  6382  0C43  0637               	xorwf	?___wmul+1,w
  6383  0C44  1D03               	skipz
  6384  0C45  2C48               	goto	u4555
  6385  0C46  083C               	movf	SSD_Blink@Times_Ms,w
  6386  0C47  0636               	xorwf	?___wmul,w
  6387  0C48                     u4555:
  6388  0C48  1D03               	skipz
  6389  0C49  2C4B               	goto	u4551
  6390  0C4A  2C4C               	goto	u4550
  6391  0C4B                     u4551:
  6392  0C4B  2C64               	goto	l3415
  6393  0C4C                     u4550:
  6394  0C4C                     l3403:
  6395                           
  6396                           ;SSD/SSD.c: 85:   {;SSD/SSD.c: 86:       if(Enable_SSD==Enable_SSD_On)
  6397  0C4C  034F               	decf	_Enable_SSD,w
  6398  0C4D  1D03               	btfss	3,2
  6399  0C4E  2C50               	goto	u4561
  6400  0C4F  2C51               	goto	u4560
  6401  0C50                     u4561:
  6402  0C50  2C5B               	goto	l3411
  6403  0C51                     u4560:
  6404  0C51                     l3405:
  6405                           
  6406                           ;SSD/SSD.c: 87:       {;SSD/SSD.c: 88:        Enable_SSD=Enable_SSD_Off;
  6407  0C51  01CF               	clrf	_Enable_SSD
  6408  0C52                     l3407:
  6409                           
  6410                           ;SSD/SSD.c: 89:         (PORTA &= ~(1<<5)) ;
  6411  0C52  30DF               	movlw	223
  6412  0C53  00FF               	movwf	btemp+1
  6413  0C54  087F               	movf	btemp+1,w
  6414  0C55  0585               	andwf	5,f	;volatile
  6415  0C56                     l3409:
  6416                           
  6417                           ;SSD/SSD.c: 90:         (PORTA &= ~(1<<4)) ;
  6418  0C56  30EF               	movlw	239
  6419  0C57  00FF               	movwf	btemp+1
  6420  0C58  087F               	movf	btemp+1,w
  6421  0C59  0585               	andwf	5,f	;volatile
  6422                           
  6423                           ;SSD/SSD.c: 91:       }
  6424  0C5A  2C62               	goto	l492
  6425  0C5B                     l3411:
  6426  0C5B  084F               	movf	_Enable_SSD,w
  6427  0C5C  1D03               	btfss	3,2
  6428  0C5D  2C5F               	goto	u4571
  6429  0C5E  2C60               	goto	u4570
  6430  0C5F                     u4571:
  6431  0C5F  2C62               	goto	l492
  6432  0C60                     u4570:
  6433  0C60                     l3413:
  6434                           
  6435                           ;SSD/SSD.c: 93:       {;SSD/SSD.c: 94:        Enable_SSD=Enable_SSD_On;
  6436  0C60  01CF               	clrf	_Enable_SSD
  6437  0C61  0ACF               	incf	_Enable_SSD,f
  6438  0C62                     l492:
  6439                           
  6440                           ;SSD/SSD.c: 96:         Counter =1;
  6441  0C62  01D7               	clrf	SSD_Blink@Counter
  6442  0C63  0AD7               	incf	SSD_Blink@Counter,f
  6443  0C64                     l3415:
  6444                           
  6445                           ;SSD/SSD.c: 98:   Counter++;
  6446  0C64  3001               	movlw	1
  6447  0C65  00FF               	movwf	btemp+1
  6448  0C66  087F               	movf	btemp+1,w
  6449  0C67  07D7               	addwf	SSD_Blink@Counter,f
  6450  0C68                     l494:
  6451  0C68  0008               	return
  6452  0C69                     __end_of_SSD_Blink:
  6453                           
  6454                           	psect	text28
  6455  0A84                     __ptext28:	
  6456 ;; *************** function ___wmul *****************
  6457 ;; Defined at:
  6458 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  multiplier      2   22[BANK0 ] unsigned int 
  6461 ;;  multiplicand    2   24[BANK0 ] unsigned int 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  product         2   26[BANK0 ] unsigned int 
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  2   22[BANK0 ] unsigned int 
  6466 ;; Registers used:
  6467 ;;		wreg, status,2, status,0
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6473 ;;      Params:         0       4       0       0       0
  6474 ;;      Locals:         0       2       0       0       0
  6475 ;;      Temps:          0       0       0       0       0
  6476 ;;      Totals:         0       6       0       0       0
  6477 ;;Total ram usage:        6 bytes
  6478 ;; Hardware stack levels used:    1
  6479 ;; Hardware stack levels required when called:    4
  6480 ;; This function calls:
  6481 ;;		Nothing
  6482 ;; This function is called by:
  6483 ;;		_LED_BLINKING
  6484 ;;		_Start_Setting_Timer
  6485 ;;		_SSD_Blink
  6486 ;; This function uses a non-reentrant model
  6487 ;;
  6488                           
  6489                           
  6490                           ;psect for function ___wmul
  6491  0A84                     ___wmul:
  6492  0A84                     l3133:	
  6493                           ;incstack = 0
  6494 ;; hardware stack exceeded
  6495                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6496                           
  6497  0A84  1283               	bcf	3,5	;RP0=0, select bank0
  6498  0A85  1303               	bcf	3,6	;RP1=0, select bank0
  6499  0A86  01BA               	clrf	___wmul@product
  6500  0A87  01BB               	clrf	___wmul@product+1
  6501  0A88                     l3135:
  6502  0A88  1C36               	btfss	___wmul@multiplier,0
  6503  0A89  2A8B               	goto	u3851
  6504  0A8A  2A8C               	goto	u3850
  6505  0A8B                     u3851:
  6506  0A8B  2A92               	goto	l603
  6507  0A8C                     u3850:
  6508  0A8C                     l3137:
  6509  0A8C  0838               	movf	___wmul@multiplicand,w
  6510  0A8D  07BA               	addwf	___wmul@product,f
  6511  0A8E  1803               	skipnc
  6512  0A8F  0ABB               	incf	___wmul@product+1,f
  6513  0A90  0839               	movf	___wmul@multiplicand+1,w
  6514  0A91  07BB               	addwf	___wmul@product+1,f
  6515  0A92                     l603:
  6516  0A92  3001               	movlw	1
  6517  0A93                     u3865:
  6518  0A93  1003               	clrc
  6519  0A94  0DB8               	rlf	___wmul@multiplicand,f
  6520  0A95  0DB9               	rlf	___wmul@multiplicand+1,f
  6521  0A96  3EFF               	addlw	-1
  6522  0A97  1D03               	skipz
  6523  0A98  2A93               	goto	u3865
  6524  0A99                     l3139:
  6525  0A99  3001               	movlw	1
  6526  0A9A                     u3875:
  6527  0A9A  1003               	clrc
  6528  0A9B  0CB7               	rrf	___wmul@multiplier+1,f
  6529  0A9C  0CB6               	rrf	___wmul@multiplier,f
  6530  0A9D  3EFF               	addlw	-1
  6531  0A9E  1D03               	skipz
  6532  0A9F  2A9A               	goto	u3875
  6533  0AA0                     l3141:
  6534  0AA0  0836               	movf	___wmul@multiplier,w
  6535  0AA1  0437               	iorwf	___wmul@multiplier+1,w
  6536  0AA2  1D03               	btfss	3,2
  6537  0AA3  2AA5               	goto	u3881
  6538  0AA4  2AA6               	goto	u3880
  6539  0AA5                     u3881:
  6540  0AA5  2A88               	goto	l3135
  6541  0AA6                     u3880:
  6542  0AA6                     l3143:
  6543  0AA6  083B               	movf	___wmul@product+1,w
  6544  0AA7  00B7               	movwf	?___wmul+1
  6545  0AA8  083A               	movf	___wmul@product,w
  6546  0AA9  00B6               	movwf	?___wmul
  6547  0AAA                     l605:
  6548  0AAA  0008               	return
  6549  0AAB                     __end_of___wmul:
  6550                           
  6551                           	psect	text29
  6552  0ED4                     __ptext29:	
  6553 ;; *************** function _SSD_SelectDigit *****************
  6554 ;; Defined at:
  6555 ;;		line 123 in file "SSD/SSD.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;		None
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;		None
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  1    wreg      void 
  6562 ;; Registers used:
  6563 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6569 ;;      Params:         0       0       0       0       0
  6570 ;;      Locals:         0       0       0       0       0
  6571 ;;      Temps:          0       2       0       0       0
  6572 ;;      Totals:         0       2       0       0       0
  6573 ;;Total ram usage:        2 bytes
  6574 ;; Hardware stack levels used:    1
  6575 ;; Hardware stack levels required when called:    5
  6576 ;; This function calls:
  6577 ;;		___awdiv
  6578 ;;		___awmod
  6579 ;; This function is called by:
  6580 ;;		_SSD_MainFunction
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583                           
  6584                           
  6585                           ;psect for function _SSD_SelectDigit
  6586  0ED4                     _SSD_SelectDigit:
  6587  0ED4                     l3547:	
  6588                           ;incstack = 0
  6589 ;; hardware stack exceeded
  6590                           ; Regs used in _SSD_SelectDigit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6591                           
  6592                           
  6593                           ;SSD/SSD.c: 125:     static uint8_t Enable_Digit_Selector=1;;SSD/SSD.c: 126:     static 
      +                          uint8_t Digit_1=0;;SSD/SSD.c: 127:     static uint8_t Digit_2=0;;SSD/SSD.c: 129:     if(
      +                          Mode.Select_Mode!=Off_Mode)
  6594  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  6595  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  6596  0ED6  0845               	movf	_Mode,w
  6597  0ED7  1903               	btfsc	3,2
  6598  0ED8  2EDA               	goto	u4811
  6599  0ED9  2EDB               	goto	u4810
  6600  0EDA                     u4811:
  6601  0EDA  2F2F               	goto	l3571
  6602  0EDB                     u4810:
  6603  0EDB                     l3549:
  6604                           
  6605                           ;SSD/SSD.c: 130:     {;SSD/SSD.c: 131:         if(Enable_SSD==Enable_SSD_On)
  6606  0EDB  034F               	decf	_Enable_SSD,w
  6607  0EDC  1D03               	btfss	3,2
  6608  0EDD  2EDF               	goto	u4821
  6609  0EDE  2EE0               	goto	u4820
  6610  0EDF                     u4821:
  6611  0EDF  2F33               	goto	l517
  6612  0EE0                     u4820:
  6613  0EE0                     l3551:
  6614                           
  6615                           ;SSD/SSD.c: 132:      {;SSD/SSD.c: 133:             Digit_1=Tempreture%10;
  6616  0EE0  300A               	movlw	10
  6617  0EE1  00B6               	movwf	___awmod@divisor
  6618  0EE2  3000               	movlw	0
  6619  0EE3  00B7               	movwf	___awmod@divisor+1
  6620  0EE4  0849               	movf	_Tempreture,w
  6621  0EE5  00BE               	movwf	??_SSD_SelectDigit
  6622  0EE6  01BF               	clrf	??_SSD_SelectDigit+1
  6623  0EE7  083E               	movf	??_SSD_SelectDigit,w
  6624  0EE8  00B8               	movwf	___awmod@dividend
  6625  0EE9  083F               	movf	??_SSD_SelectDigit+1,w
  6626  0EEA  00B9               	movwf	___awmod@dividend+1
  6627  0EEB  120A  158A  261C  120A  158A  	fcall	___awmod
  6628  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  6629  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  6630  0EF2  0836               	movf	?___awmod,w
  6631  0EF3  00FF               	movwf	btemp+1
  6632  0EF4  087F               	movf	btemp+1,w
  6633  0EF5  00C8               	movwf	SSD_SelectDigit@Digit_1
  6634                           
  6635                           ;SSD/SSD.c: 134:             Digit_2=Tempreture/10;
  6636  0EF6  300A               	movlw	10
  6637  0EF7  00B6               	movwf	___awdiv@divisor
  6638  0EF8  3000               	movlw	0
  6639  0EF9  00B7               	movwf	___awdiv@divisor+1
  6640  0EFA  0849               	movf	_Tempreture,w
  6641  0EFB  00BE               	movwf	??_SSD_SelectDigit
  6642  0EFC  01BF               	clrf	??_SSD_SelectDigit+1
  6643  0EFD  083E               	movf	??_SSD_SelectDigit,w
  6644  0EFE  00B8               	movwf	___awdiv@dividend
  6645  0EFF  083F               	movf	??_SSD_SelectDigit+1,w
  6646  0F00  00B9               	movwf	___awdiv@dividend+1
  6647  0F01  120A  118A  269A  120A  158A  	fcall	___awdiv
  6648  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  6649  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  6650  0F08  0836               	movf	?___awdiv,w
  6651  0F09  00FF               	movwf	btemp+1
  6652  0F0A  087F               	movf	btemp+1,w
  6653  0F0B  00C7               	movwf	SSD_SelectDigit@Digit_2
  6654  0F0C                     l3553:
  6655                           
  6656                           ;SSD/SSD.c: 136:             Enable_Digit_Selector^=1;
  6657  0F0C  3001               	movlw	1
  6658  0F0D  00FF               	movwf	btemp+1
  6659  0F0E  087F               	movf	btemp+1,w
  6660  0F0F  06D6               	xorwf	SSD_SelectDigit@Enable_Digit_Selector,f
  6661  0F10                     l3555:
  6662                           
  6663                           ;SSD/SSD.c: 138:             if(Enable_Digit_Selector==0)
  6664  0F10  0856               	movf	SSD_SelectDigit@Enable_Digit_Selector,w
  6665  0F11  1D03               	btfss	3,2
  6666  0F12  2F14               	goto	u4831
  6667  0F13  2F15               	goto	u4830
  6668  0F14                     u4831:
  6669  0F14  2F1F               	goto	l3563
  6670  0F15                     u4830:
  6671  0F15                     l3557:
  6672                           
  6673                           ;SSD/SSD.c: 139:             {;SSD/SSD.c: 140:               SSD=Digit_1;
  6674  0F15  0848               	movf	SSD_SelectDigit@Digit_1,w
  6675  0F16  00FF               	movwf	btemp+1
  6676  0F17  087F               	movf	btemp+1,w
  6677  0F18  00CA               	movwf	_SSD
  6678  0F19                     l3559:
  6679                           
  6680                           ;SSD/SSD.c: 141:                (PORTA &= ~(1<<4));
  6681  0F19  30EF               	movlw	239
  6682  0F1A  00FF               	movwf	btemp+1
  6683  0F1B  087F               	movf	btemp+1,w
  6684  0F1C  0585               	andwf	5,f	;volatile
  6685  0F1D                     l3561:
  6686                           
  6687                           ;SSD/SSD.c: 142:                (PORTA|= (1<<5)) ;
  6688  0F1D  1685               	bsf	5,5	;volatile
  6689                           
  6690                           ;SSD/SSD.c: 144:             }
  6691  0F1E  2F33               	goto	l517
  6692  0F1F                     l3563:
  6693  0F1F  0356               	decf	SSD_SelectDigit@Enable_Digit_Selector,w
  6694  0F20  1D03               	btfss	3,2
  6695  0F21  2F23               	goto	u4841
  6696  0F22  2F24               	goto	u4840
  6697  0F23                     u4841:
  6698  0F23  2F2E               	goto	l512
  6699  0F24                     u4840:
  6700  0F24                     l3565:
  6701                           
  6702                           ;SSD/SSD.c: 146:             {;SSD/SSD.c: 147:               SSD=Digit_2;
  6703  0F24  0847               	movf	SSD_SelectDigit@Digit_2,w
  6704  0F25  00FF               	movwf	btemp+1
  6705  0F26  087F               	movf	btemp+1,w
  6706  0F27  00CA               	movwf	_SSD
  6707  0F28                     l3567:
  6708                           
  6709                           ;SSD/SSD.c: 148:               (PORTA &= ~(1<<5));
  6710  0F28  30DF               	movlw	223
  6711  0F29  00FF               	movwf	btemp+1
  6712  0F2A  087F               	movf	btemp+1,w
  6713  0F2B  0585               	andwf	5,f	;volatile
  6714  0F2C                     l3569:
  6715                           
  6716                           ;SSD/SSD.c: 149:               (PORTA|= (1<<4));
  6717  0F2C  1605               	bsf	5,4	;volatile
  6718  0F2D  2F33               	goto	l517
  6719  0F2E                     l512:	
  6720                           ;SSD/SSD.c: 152:         }
  6721                           
  6722                           
  6723                           ;SSD/SSD.c: 153:     }
  6724  0F2E  2F33               	goto	l517
  6725  0F2F                     l3571:
  6726                           
  6727                           ;SSD/SSD.c: 155:     {;SSD/SSD.c: 156:      SSD=10;
  6728  0F2F  300A               	movlw	10
  6729  0F30  00FF               	movwf	btemp+1
  6730  0F31  087F               	movf	btemp+1,w
  6731  0F32  00CA               	movwf	_SSD
  6732  0F33                     l517:
  6733  0F33  0008               	return
  6734  0F34                     __end_of_SSD_SelectDigit:
  6735                           
  6736                           	psect	text30
  6737  069A                     __ptext30:	
  6738 ;; *************** function ___awdiv *****************
  6739 ;; Defined at:
  6740 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  divisor         2   22[BANK0 ] int 
  6743 ;;  dividend        2   24[BANK0 ] int 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  quotient        2   28[BANK0 ] int 
  6746 ;;  sign            1   27[BANK0 ] unsigned char 
  6747 ;;  counter         1   26[BANK0 ] unsigned char 
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  2   22[BANK0 ] int 
  6750 ;; Registers used:
  6751 ;;		wreg, status,2, status,0, btemp+1
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6757 ;;      Params:         0       4       0       0       0
  6758 ;;      Locals:         0       4       0       0       0
  6759 ;;      Temps:          0       0       0       0       0
  6760 ;;      Totals:         0       8       0       0       0
  6761 ;;Total ram usage:        8 bytes
  6762 ;; Hardware stack levels used:    1
  6763 ;; Hardware stack levels required when called:    4
  6764 ;; This function calls:
  6765 ;;		Nothing
  6766 ;; This function is called by:
  6767 ;;		_SSD_SelectDigit
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           
  6772                           ;psect for function ___awdiv
  6773  069A                     ___awdiv:
  6774  069A                     l3417:	
  6775                           ;incstack = 0
  6776 ;; hardware stack exceeded
  6777                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  6778                           
  6779  069A  1283               	bcf	3,5	;RP0=0, select bank0
  6780  069B  1303               	bcf	3,6	;RP1=0, select bank0
  6781  069C  01BB               	clrf	___awdiv@sign
  6782  069D                     l3419:
  6783  069D  1FB7               	btfss	___awdiv@divisor+1,7
  6784  069E  2EA0               	goto	u4581
  6785  069F  2EA1               	goto	u4580
  6786  06A0                     u4581:
  6787  06A0  2EA8               	goto	l3425
  6788  06A1                     u4580:
  6789  06A1                     l3421:
  6790  06A1  09B6               	comf	___awdiv@divisor,f
  6791  06A2  09B7               	comf	___awdiv@divisor+1,f
  6792  06A3  0AB6               	incf	___awdiv@divisor,f
  6793  06A4  1903               	skipnz
  6794  06A5  0AB7               	incf	___awdiv@divisor+1,f
  6795  06A6                     l3423:
  6796  06A6  01BB               	clrf	___awdiv@sign
  6797  06A7  0ABB               	incf	___awdiv@sign,f
  6798  06A8                     l3425:
  6799  06A8  1FB9               	btfss	___awdiv@dividend+1,7
  6800  06A9  2EAB               	goto	u4591
  6801  06AA  2EAC               	goto	u4590
  6802  06AB                     u4591:
  6803  06AB  2EB5               	goto	l3431
  6804  06AC                     u4590:
  6805  06AC                     l3427:
  6806  06AC  09B8               	comf	___awdiv@dividend,f
  6807  06AD  09B9               	comf	___awdiv@dividend+1,f
  6808  06AE  0AB8               	incf	___awdiv@dividend,f
  6809  06AF  1903               	skipnz
  6810  06B0  0AB9               	incf	___awdiv@dividend+1,f
  6811  06B1                     l3429:
  6812  06B1  3001               	movlw	1
  6813  06B2  00FF               	movwf	btemp+1
  6814  06B3  087F               	movf	btemp+1,w
  6815  06B4  06BB               	xorwf	___awdiv@sign,f
  6816  06B5                     l3431:
  6817  06B5  01BC               	clrf	___awdiv@quotient
  6818  06B6  01BD               	clrf	___awdiv@quotient+1
  6819  06B7                     l3433:
  6820  06B7  0836               	movf	___awdiv@divisor,w
  6821  06B8  0437               	iorwf	___awdiv@divisor+1,w
  6822  06B9  1903               	btfsc	3,2
  6823  06BA  2EBC               	goto	u4601
  6824  06BB  2EBD               	goto	u4600
  6825  06BC                     u4601:
  6826  06BC  2EF4               	goto	l3453
  6827  06BD                     u4600:
  6828  06BD                     l3435:
  6829  06BD  01BA               	clrf	___awdiv@counter
  6830  06BE  0ABA               	incf	___awdiv@counter,f
  6831  06BF  2ECB               	goto	l3441
  6832  06C0                     l3437:
  6833  06C0  3001               	movlw	1
  6834  06C1                     u4615:
  6835  06C1  1003               	clrc
  6836  06C2  0DB6               	rlf	___awdiv@divisor,f
  6837  06C3  0DB7               	rlf	___awdiv@divisor+1,f
  6838  06C4  3EFF               	addlw	-1
  6839  06C5  1D03               	skipz
  6840  06C6  2EC1               	goto	u4615
  6841  06C7                     l3439:
  6842  06C7  3001               	movlw	1
  6843  06C8  00FF               	movwf	btemp+1
  6844  06C9  087F               	movf	btemp+1,w
  6845  06CA  07BA               	addwf	___awdiv@counter,f
  6846  06CB                     l3441:
  6847  06CB  1FB7               	btfss	___awdiv@divisor+1,7
  6848  06CC  2ECE               	goto	u4621
  6849  06CD  2ECF               	goto	u4620
  6850  06CE                     u4621:
  6851  06CE  2EC0               	goto	l3437
  6852  06CF                     u4620:
  6853  06CF                     l3443:
  6854  06CF  3001               	movlw	1
  6855  06D0                     u4635:
  6856  06D0  1003               	clrc
  6857  06D1  0DBC               	rlf	___awdiv@quotient,f
  6858  06D2  0DBD               	rlf	___awdiv@quotient+1,f
  6859  06D3  3EFF               	addlw	-1
  6860  06D4  1D03               	skipz
  6861  06D5  2ED0               	goto	u4635
  6862  06D6  0837               	movf	___awdiv@divisor+1,w
  6863  06D7  0239               	subwf	___awdiv@dividend+1,w
  6864  06D8  1D03               	skipz
  6865  06D9  2EDC               	goto	u4645
  6866  06DA  0836               	movf	___awdiv@divisor,w
  6867  06DB  0238               	subwf	___awdiv@dividend,w
  6868  06DC                     u4645:
  6869  06DC  1C03               	skipc
  6870  06DD  2EDF               	goto	u4641
  6871  06DE  2EE0               	goto	u4640
  6872  06DF                     u4641:
  6873  06DF  2EE7               	goto	l3449
  6874  06E0                     u4640:
  6875  06E0                     l3445:
  6876  06E0  0836               	movf	___awdiv@divisor,w
  6877  06E1  02B8               	subwf	___awdiv@dividend,f
  6878  06E2  0837               	movf	___awdiv@divisor+1,w
  6879  06E3  1C03               	skipc
  6880  06E4  03B9               	decf	___awdiv@dividend+1,f
  6881  06E5  02B9               	subwf	___awdiv@dividend+1,f
  6882  06E6                     l3447:
  6883  06E6  143C               	bsf	___awdiv@quotient,0
  6884  06E7                     l3449:
  6885  06E7  3001               	movlw	1
  6886  06E8                     u4655:
  6887  06E8  1003               	clrc
  6888  06E9  0CB7               	rrf	___awdiv@divisor+1,f
  6889  06EA  0CB6               	rrf	___awdiv@divisor,f
  6890  06EB  3EFF               	addlw	-1
  6891  06EC  1D03               	skipz
  6892  06ED  2EE8               	goto	u4655
  6893  06EE                     l3451:
  6894  06EE  3001               	movlw	1
  6895  06EF  02BA               	subwf	___awdiv@counter,f
  6896  06F0  1D03               	btfss	3,2
  6897  06F1  2EF3               	goto	u4661
  6898  06F2  2EF4               	goto	u4660
  6899  06F3                     u4661:
  6900  06F3  2ECF               	goto	l3443
  6901  06F4                     u4660:
  6902  06F4                     l3453:
  6903  06F4  083B               	movf	___awdiv@sign,w
  6904  06F5  1903               	btfsc	3,2
  6905  06F6  2EF8               	goto	u4671
  6906  06F7  2EF9               	goto	u4670
  6907  06F8                     u4671:
  6908  06F8  2EFE               	goto	l3457
  6909  06F9                     u4670:
  6910  06F9                     l3455:
  6911  06F9  09BC               	comf	___awdiv@quotient,f
  6912  06FA  09BD               	comf	___awdiv@quotient+1,f
  6913  06FB  0ABC               	incf	___awdiv@quotient,f
  6914  06FC  1903               	skipnz
  6915  06FD  0ABD               	incf	___awdiv@quotient+1,f
  6916  06FE                     l3457:
  6917  06FE  083D               	movf	___awdiv@quotient+1,w
  6918  06FF  00B7               	movwf	?___awdiv+1
  6919  0700  083C               	movf	___awdiv@quotient,w
  6920  0701  00B6               	movwf	?___awdiv
  6921  0702                     l756:
  6922  0702  0008               	return
  6923  0703                     __end_of___awdiv:
  6924                           
  6925                           	psect	text31
  6926  0962                     __ptext31:	
  6927 ;; *************** function _Scheduler_Init *****************
  6928 ;; Defined at:
  6929 ;;		line 29 in file "Scheduler/Scheduler.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;		None
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;		None
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  1    wreg      void 
  6936 ;; Registers used:
  6937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6938 ;; Tracked objects:
  6939 ;;		On entry : 0/0
  6940 ;;		On exit  : 0/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6943 ;;      Params:         0       0       0       0       0
  6944 ;;      Locals:         0       0       0       0       0
  6945 ;;      Temps:          0       0       0       0       0
  6946 ;;      Totals:         0       0       0       0       0
  6947 ;;Total ram usage:        0 bytes
  6948 ;; Hardware stack levels used:    1
  6949 ;; Hardware stack levels required when called:    5
  6950 ;; This function calls:
  6951 ;;		_memset
  6952 ;; This function is called by:
  6953 ;;		_main
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957                           
  6958                           ;psect for function _Scheduler_Init
  6959  0962                     _Scheduler_Init:
  6960  0962                     l3775:	
  6961                           ;incstack = 0
  6962                           ; Regs used in _Scheduler_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6963                           
  6964                           
  6965                           ;Scheduler/Scheduler.c: 31:   memset( Scheduler_ActivationFlags , 0 , sizeof( Scheduler_
      +                          ActivationFlags ) );
  6966  0962  3000               	movlw	0
  6967  0963  1283               	bcf	3,5	;RP0=0, select bank0
  6968  0964  1303               	bcf	3,6	;RP1=0, select bank0
  6969  0965  00B6               	movwf	memset@c
  6970  0966  00B7               	movwf	memset@c+1
  6971  0967  3003               	movlw	3
  6972  0968  00B8               	movwf	memset@n
  6973  0969  3000               	movlw	0
  6974  096A  00B9               	movwf	memset@n+1
  6975  096B  30D0               	movlw	(low (_Scheduler_ActivationFlags| 0))& (0+255)
  6976  096C  120A  158A  223E  120A  158A  	fcall	_memset
  6977  0971                     l249:
  6978  0971  0008               	return
  6979  0972                     __end_of_Scheduler_Init:
  6980                           
  6981                           	psect	text32
  6982  0A3E                     __ptext32:	
  6983 ;; *************** function _memset *****************
  6984 ;; Defined at:
  6985 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\memset.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;  p1              1    wreg     PTR void 
  6988 ;;		 -> Scheduler_ActivationFlags(3), 
  6989 ;;  c               2   22[BANK0 ] int 
  6990 ;;  n               2   24[BANK0 ] unsigned int 
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;  p1              1   27[BANK0 ] PTR void 
  6993 ;;		 -> Scheduler_ActivationFlags(3), 
  6994 ;;  p               1   26[BANK0 ] PTR unsigned char 
  6995 ;;		 -> Scheduler_ActivationFlags(3), 
  6996 ;; Return value:  Size  Location     Type
  6997 ;;                  1    wreg      PTR void 
  6998 ;; Registers used:
  6999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7000 ;; Tracked objects:
  7001 ;;		On entry : 0/0
  7002 ;;		On exit  : 0/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7005 ;;      Params:         0       4       0       0       0
  7006 ;;      Locals:         0       2       0       0       0
  7007 ;;      Temps:          0       0       0       0       0
  7008 ;;      Totals:         0       6       0       0       0
  7009 ;;Total ram usage:        6 bytes
  7010 ;; Hardware stack levels used:    1
  7011 ;; Hardware stack levels required when called:    4
  7012 ;; This function calls:
  7013 ;;		Nothing
  7014 ;; This function is called by:
  7015 ;;		_Scheduler_Init
  7016 ;; This function uses a non-reentrant model
  7017 ;;
  7018                           
  7019                           
  7020                           ;psect for function _memset
  7021  0A3E                     _memset:
  7022                           
  7023                           ;incstack = 0
  7024                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0+btemp+1]
  7025                           ;memset@p1 stored from wreg
  7026  0A3E  1283               	bcf	3,5	;RP0=0, select bank0
  7027  0A3F  1303               	bcf	3,6	;RP1=0, select bank0
  7028  0A40  00BB               	movwf	memset@p1
  7029  0A41                     l3693:
  7030  0A41  083B               	movf	memset@p1,w
  7031  0A42  00FF               	movwf	btemp+1
  7032  0A43  087F               	movf	btemp+1,w
  7033  0A44  00BA               	movwf	memset@p
  7034  0A45  2A51               	goto	l3699
  7035  0A46                     l3695:
  7036  0A46  0836               	movf	memset@c,w
  7037  0A47  00FF               	movwf	btemp+1
  7038  0A48  083A               	movf	memset@p,w
  7039  0A49  0084               	movwf	4
  7040  0A4A  087F               	movf	btemp+1,w
  7041  0A4B  1383               	bcf	3,7	;select IRP bank0
  7042  0A4C  0080               	movwf	0
  7043  0A4D                     l3697:
  7044  0A4D  3001               	movlw	1
  7045  0A4E  00FF               	movwf	btemp+1
  7046  0A4F  087F               	movf	btemp+1,w
  7047  0A50  07BA               	addwf	memset@p,f
  7048  0A51                     l3699:
  7049  0A51  3001               	movlw	1
  7050  0A52  02B8               	subwf	memset@n,f
  7051  0A53  3000               	movlw	0
  7052  0A54  1C03               	skipc
  7053  0A55  03B9               	decf	memset@n+1,f
  7054  0A56  02B9               	subwf	memset@n+1,f
  7055  0A57  0A38               	incf	memset@n,w
  7056  0A58  1D03               	skipz
  7057  0A59  2A5E               	goto	u5141
  7058  0A5A  0A39               	incf	memset@n+1,w
  7059  0A5B  1D03               	btfss	3,2
  7060  0A5C  2A5E               	goto	u5141
  7061  0A5D  2A5F               	goto	u5140
  7062  0A5E                     u5141:
  7063  0A5E  2A46               	goto	l3695
  7064  0A5F                     u5140:
  7065  0A5F                     l1057:
  7066  0A5F  0008               	return
  7067  0A60                     __end_of_memset:
  7068                           
  7069                           	psect	text33
  7070  0946                     __ptext33:	
  7071 ;; *************** function _SSD_Init *****************
  7072 ;; Defined at:
  7073 ;;		line 17 in file "SSD/SSD.c"
  7074 ;; Parameters:    Size  Location     Type
  7075 ;;		None
  7076 ;; Auto vars:     Size  Location     Type
  7077 ;;		None
  7078 ;; Return value:  Size  Location     Type
  7079 ;;                  1    wreg      void 
  7080 ;; Registers used:
  7081 ;;		wreg, status,2, status,0, btemp+1
  7082 ;; Tracked objects:
  7083 ;;		On entry : 0/0
  7084 ;;		On exit  : 0/0
  7085 ;;		Unchanged: 0/0
  7086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7087 ;;      Params:         0       0       0       0       0
  7088 ;;      Locals:         0       0       0       0       0
  7089 ;;      Temps:          0       0       0       0       0
  7090 ;;      Totals:         0       0       0       0       0
  7091 ;;Total ram usage:        0 bytes
  7092 ;; Hardware stack levels used:    1
  7093 ;; Hardware stack levels required when called:    4
  7094 ;; This function calls:
  7095 ;;		Nothing
  7096 ;; This function is called by:
  7097 ;;		_main
  7098 ;; This function uses a non-reentrant model
  7099 ;;
  7100                           
  7101                           
  7102                           ;psect for function _SSD_Init
  7103  0946                     _SSD_Init:
  7104  0946                     l2915:	
  7105                           ;incstack = 0
  7106                           ; Regs used in _SSD_Init: [wreg+status,2+status,0+btemp+1]
  7107                           
  7108                           
  7109                           ;SSD/SSD.c: 19:  (PORTA &= ~(1<<5)) ;
  7110  0946  30DF               	movlw	223
  7111  0947  00FF               	movwf	btemp+1
  7112  0948  087F               	movf	btemp+1,w
  7113  0949  1283               	bcf	3,5	;RP0=0, select bank0
  7114  094A  1303               	bcf	3,6	;RP1=0, select bank0
  7115  094B  0585               	andwf	5,f	;volatile
  7116                           
  7117                           ;SSD/SSD.c: 20:  (PORTA &= ~(1<<4)) ;
  7118  094C  30EF               	movlw	239
  7119  094D  00FF               	movwf	btemp+1
  7120  094E  087F               	movf	btemp+1,w
  7121  094F  0585               	andwf	5,f	;volatile
  7122  0950                     l2917:
  7123                           
  7124                           ;SSD/SSD.c: 21:  PORTD=0b00111111;
  7125  0950  303F               	movlw	63
  7126  0951  0088               	movwf	8	;volatile
  7127  0952                     l469:
  7128  0952  0008               	return
  7129  0953                     __end_of_SSD_Init:
  7130                           
  7131                           	psect	text34
  7132  08D6                     __ptext34:	
  7133 ;; *************** function _On_Off_Init *****************
  7134 ;; Defined at:
  7135 ;;		line 12 in file "Buttons/Buttons.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;		None
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;		None
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  1    wreg      void 
  7142 ;; Registers used:
  7143 ;;		None
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7149 ;;      Params:         0       0       0       0       0
  7150 ;;      Locals:         0       0       0       0       0
  7151 ;;      Temps:          0       0       0       0       0
  7152 ;;      Totals:         0       0       0       0       0
  7153 ;;Total ram usage:        0 bytes
  7154 ;; Hardware stack levels used:    1
  7155 ;; Hardware stack levels required when called:    4
  7156 ;; This function calls:
  7157 ;;		Nothing
  7158 ;; This function is called by:
  7159 ;;		_main
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163                           
  7164                           ;psect for function _On_Off_Init
  7165  08D6                     _On_Off_Init:
  7166  08D6                     l2913:	
  7167                           ;incstack = 0
  7168                           ; Regs used in _On_Off_Init: []
  7169                           
  7170                           
  7171                           ;Buttons/Buttons.c: 15:     INTCONbits.INTE=1;
  7172  08D6  160B               	bsf	11,4	;volatile
  7173                           
  7174                           ;Buttons/Buttons.c: 16:     INTEDG=1;
  7175  08D7  1683               	bsf	3,5	;RP0=1, select bank1
  7176  08D8  1303               	bcf	3,6	;RP1=0, select bank1
  7177  08D9  1701               	bsf	1,6	;volatile
  7178                           
  7179                           ;Buttons/Buttons.c: 17:     INTCONbits.INTF=0;
  7180  08DA  108B               	bcf	11,1	;volatile
  7181  08DB                     l98:
  7182  08DB  0008               	return
  7183  08DC                     __end_of_On_Off_Init:
  7184                           
  7185                           	psect	text35
  7186  08C8                     __ptext35:	
  7187 ;; *************** function _Mode_Init *****************
  7188 ;; Defined at:
  7189 ;;		line 13 in file "WaterHeater_Mode/WaterHeater_Mode.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;		None
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;		None
  7194 ;; Return value:  Size  Location     Type
  7195 ;;                  1    wreg      void 
  7196 ;; Registers used:
  7197 ;;		status,2
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7203 ;;      Params:         0       0       0       0       0
  7204 ;;      Locals:         0       0       0       0       0
  7205 ;;      Temps:          0       0       0       0       0
  7206 ;;      Totals:         0       0       0       0       0
  7207 ;;Total ram usage:        0 bytes
  7208 ;; Hardware stack levels used:    1
  7209 ;; Hardware stack levels required when called:    4
  7210 ;; This function calls:
  7211 ;;		Nothing
  7212 ;; This function is called by:
  7213 ;;		_main
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           
  7218                           ;psect for function _Mode_Init
  7219  08C8                     _Mode_Init:
  7220  08C8                     l2925:	
  7221                           ;incstack = 0
  7222                           ; Regs used in _Mode_Init: [status,2]
  7223                           
  7224                           
  7225                           ;WaterHeater_Mode/WaterHeater_Mode.c: 15:  Mode.Select_Mode=Off_Mode;
  7226  08C8  1283               	bcf	3,5	;RP0=0, select bank0
  7227  08C9  1303               	bcf	3,6	;RP1=0, select bank0
  7228  08CA  01C5               	clrf	_Mode
  7229  08CB                     l335:
  7230  08CB  0008               	return
  7231  08CC                     __end_of_Mode_Init:
  7232                           
  7233                           	psect	text36
  7234  093A                     __ptext36:	
  7235 ;; *************** function _I2c_Init *****************
  7236 ;; Defined at:
  7237 ;;		line 10 in file "I2C/I2C.c"
  7238 ;; Parameters:    Size  Location     Type
  7239 ;;		None
  7240 ;; Auto vars:     Size  Location     Type
  7241 ;;		None
  7242 ;; Return value:  Size  Location     Type
  7243 ;;                  1    wreg      void 
  7244 ;; Registers used:
  7245 ;;		wreg
  7246 ;; Tracked objects:
  7247 ;;		On entry : 0/0
  7248 ;;		On exit  : 0/0
  7249 ;;		Unchanged: 0/0
  7250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7251 ;;      Params:         0       0       0       0       0
  7252 ;;      Locals:         0       0       0       0       0
  7253 ;;      Temps:          0       0       0       0       0
  7254 ;;      Totals:         0       0       0       0       0
  7255 ;;Total ram usage:        0 bytes
  7256 ;; Hardware stack levels used:    1
  7257 ;; Hardware stack levels required when called:    4
  7258 ;; This function calls:
  7259 ;;		Nothing
  7260 ;; This function is called by:
  7261 ;;		_main
  7262 ;; This function uses a non-reentrant model
  7263 ;;
  7264                           
  7265                           
  7266                           ;psect for function _I2c_Init
  7267  093A                     _I2c_Init:
  7268  093A                     l2901:	
  7269                           ;incstack = 0
  7270                           ; Regs used in _I2c_Init: [wreg]
  7271                           
  7272                           
  7273                           ;I2C/I2C.c: 12:     SSPADD = (8000000/(4*100000))-1;
  7274  093A  3013               	movlw	19
  7275  093B  1683               	bsf	3,5	;RP0=1, select bank1
  7276  093C  1303               	bcf	3,6	;RP1=0, select bank1
  7277  093D  0093               	movwf	19	;volatile
  7278  093E                     l2903:
  7279                           
  7280                           ;I2C/I2C.c: 14:     SSPM0=0;
  7281  093E  1283               	bcf	3,5	;RP0=0, select bank0
  7282  093F  1303               	bcf	3,6	;RP1=0, select bank0
  7283  0940  1014               	bcf	20,0	;volatile
  7284  0941                     l2905:
  7285                           
  7286                           ;I2C/I2C.c: 15:     SSPM1=0;
  7287  0941  1094               	bcf	20,1	;volatile
  7288  0942                     l2907:
  7289                           
  7290                           ;I2C/I2C.c: 16:     SSPM2=0;
  7291  0942  1114               	bcf	20,2	;volatile
  7292  0943                     l2909:
  7293                           
  7294                           ;I2C/I2C.c: 17:     SSPM3=1;
  7295  0943  1594               	bsf	20,3	;volatile
  7296  0944                     l2911:
  7297                           
  7298                           ;I2C/I2C.c: 19:     SSPEN=1;
  7299  0944  1694               	bsf	20,5	;volatile
  7300  0945                     l378:
  7301  0945  0008               	return
  7302  0946                     __end_of_I2c_Init:
  7303                           
  7304                           	psect	text37
  7305  0BBC                     __ptext37:	
  7306 ;; *************** function _Get_EEPROM_Data *****************
  7307 ;; Defined at:
  7308 ;;		line 14 in file "EEPROM/EEPROM.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;		None
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;		None
  7313 ;; Return value:  Size  Location     Type
  7314 ;;                  1    wreg      void 
  7315 ;; Registers used:
  7316 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7317 ;; Tracked objects:
  7318 ;;		On entry : 0/0
  7319 ;;		On exit  : 0/0
  7320 ;;		Unchanged: 0/0
  7321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7322 ;;      Params:         0       0       0       0       0
  7323 ;;      Locals:         0       0       0       0       0
  7324 ;;      Temps:          0       2       0       0       0
  7325 ;;      Totals:         0       2       0       0       0
  7326 ;;Total ram usage:        2 bytes
  7327 ;; Hardware stack levels used:    1
  7328 ;; Hardware stack levels required when called:    6
  7329 ;; This function calls:
  7330 ;;		_EEPROM_Read
  7331 ;;		___awmod
  7332 ;; This function is called by:
  7333 ;;		_main
  7334 ;; This function uses a non-reentrant model
  7335 ;;
  7336                           
  7337                           
  7338                           ;psect for function _Get_EEPROM_Data
  7339  0BBC                     _Get_EEPROM_Data:
  7340  0BBC                     l3763:	
  7341                           ;incstack = 0
  7342                           ; Regs used in _Get_EEPROM_Data: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7343                           
  7344                           
  7345                           ;EEPROM/EEPROM.c: 18:  EEPROM_Data=EEPROM_Read(0x0A);
  7346  0BBC  300A               	movlw	10
  7347  0BBD  120A  158A  2525  120A  158A  	fcall	_EEPROM_Read
  7348  0BC2  00FF               	movwf	btemp+1
  7349  0BC3  087F               	movf	btemp+1,w
  7350  0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  7351  0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  7352  0BC6  00CC               	movwf	_EEPROM_Data
  7353  0BC7                     l3765:
  7354                           
  7355                           ;EEPROM/EEPROM.c: 20:  if((EEPROM_Data<=(75U))&&(EEPROM_Data>=(35U) )&& ((EEPROM_Data%5)
      +                          ==0) )
  7356  0BC7  304C               	movlw	76
  7357  0BC8  024C               	subwf	_EEPROM_Data,w
  7358  0BC9  1803               	skipnc
  7359  0BCA  2BCC               	goto	u5191
  7360  0BCB  2BCD               	goto	u5190
  7361  0BCC                     u5191:
  7362  0BCC  2BF0               	goto	l3773
  7363  0BCD                     u5190:
  7364  0BCD                     l3767:
  7365  0BCD  3023               	movlw	35
  7366  0BCE  024C               	subwf	_EEPROM_Data,w
  7367  0BCF  1C03               	skipc
  7368  0BD0  2BD2               	goto	u5201
  7369  0BD1  2BD3               	goto	u5200
  7370  0BD2                     u5201:
  7371  0BD2  2BF0               	goto	l3773
  7372  0BD3                     u5200:
  7373  0BD3                     l3769:
  7374  0BD3  3005               	movlw	5
  7375  0BD4  00B6               	movwf	___awmod@divisor
  7376  0BD5  3000               	movlw	0
  7377  0BD6  00B7               	movwf	___awmod@divisor+1
  7378  0BD7  084C               	movf	_EEPROM_Data,w
  7379  0BD8  00BC               	movwf	??_Get_EEPROM_Data
  7380  0BD9  01BD               	clrf	??_Get_EEPROM_Data+1
  7381  0BDA  083C               	movf	??_Get_EEPROM_Data,w
  7382  0BDB  00B8               	movwf	___awmod@dividend
  7383  0BDC  083D               	movf	??_Get_EEPROM_Data+1,w
  7384  0BDD  00B9               	movwf	___awmod@dividend+1
  7385  0BDE  120A  158A  261C  120A  158A  	fcall	___awmod
  7386  0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  7387  0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  7388  0BE5  0836               	movf	?___awmod,w
  7389  0BE6  0437               	iorwf	?___awmod+1,w
  7390  0BE7  1D03               	btfss	3,2
  7391  0BE8  2BEA               	goto	u5211
  7392  0BE9  2BEB               	goto	u5210
  7393  0BEA                     u5211:
  7394  0BEA  2BF0               	goto	l3773
  7395  0BEB                     u5210:
  7396  0BEB                     l3771:
  7397                           
  7398                           ;EEPROM/EEPROM.c: 21:  {;EEPROM/EEPROM.c: 22:    Temperature.Set_Temp=EEPROM_Data;
  7399  0BEB  084C               	movf	_EEPROM_Data,w
  7400  0BEC  00FF               	movwf	btemp+1
  7401  0BED  087F               	movf	btemp+1,w
  7402  0BEE  00D3               	movwf	_Temperature+2
  7403                           
  7404                           ;EEPROM/EEPROM.c: 23:  }
  7405  0BEF  2BF4               	goto	l436
  7406  0BF0                     l3773:
  7407                           
  7408                           ;EEPROM/EEPROM.c: 25:  {;EEPROM/EEPROM.c: 26:    Temperature.Set_Temp=(60U);
  7409  0BF0  303C               	movlw	60
  7410  0BF1  00FF               	movwf	btemp+1
  7411  0BF2  087F               	movf	btemp+1,w
  7412  0BF3  00D3               	movwf	_Temperature+2
  7413  0BF4                     l436:
  7414  0BF4  0008               	return
  7415  0BF5                     __end_of_Get_EEPROM_Data:
  7416                           
  7417                           	psect	text38
  7418  0E1C                     __ptext38:	
  7419 ;; *************** function ___awmod *****************
  7420 ;; Defined at:
  7421 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  divisor         2   22[BANK0 ] int 
  7424 ;;  dividend        2   24[BANK0 ] int 
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;  sign            1   27[BANK0 ] unsigned char 
  7427 ;;  counter         1   26[BANK0 ] unsigned char 
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  2   22[BANK0 ] int 
  7430 ;; Registers used:
  7431 ;;		wreg, status,2, status,0, btemp+1
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7437 ;;      Params:         0       4       0       0       0
  7438 ;;      Locals:         0       2       0       0       0
  7439 ;;      Temps:          0       0       0       0       0
  7440 ;;      Totals:         0       6       0       0       0
  7441 ;;Total ram usage:        6 bytes
  7442 ;; Hardware stack levels used:    1
  7443 ;; Hardware stack levels required when called:    4
  7444 ;; This function calls:
  7445 ;;		Nothing
  7446 ;; This function is called by:
  7447 ;;		_Get_EEPROM_Data
  7448 ;;		_SSD_SelectDigit
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452                           
  7453                           ;psect for function ___awmod
  7454  0E1C                     ___awmod:
  7455  0E1C                     l3461:	
  7456                           ;incstack = 0
  7457 ;; hardware stack exceeded
  7458                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  7459                           
  7460  0E1C  1283               	bcf	3,5	;RP0=0, select bank0
  7461  0E1D  1303               	bcf	3,6	;RP1=0, select bank0
  7462  0E1E  01BB               	clrf	___awmod@sign
  7463  0E1F                     l3463:
  7464  0E1F  1FB9               	btfss	___awmod@dividend+1,7
  7465  0E20  2E22               	goto	u4681
  7466  0E21  2E23               	goto	u4680
  7467  0E22                     u4681:
  7468  0E22  2E2A               	goto	l3469
  7469  0E23                     u4680:
  7470  0E23                     l3465:
  7471  0E23  09B8               	comf	___awmod@dividend,f
  7472  0E24  09B9               	comf	___awmod@dividend+1,f
  7473  0E25  0AB8               	incf	___awmod@dividend,f
  7474  0E26  1903               	skipnz
  7475  0E27  0AB9               	incf	___awmod@dividend+1,f
  7476  0E28                     l3467:
  7477  0E28  01BB               	clrf	___awmod@sign
  7478  0E29  0ABB               	incf	___awmod@sign,f
  7479  0E2A                     l3469:
  7480  0E2A  1FB7               	btfss	___awmod@divisor+1,7
  7481  0E2B  2E2D               	goto	u4691
  7482  0E2C  2E2E               	goto	u4690
  7483  0E2D                     u4691:
  7484  0E2D  2E33               	goto	l3473
  7485  0E2E                     u4690:
  7486  0E2E                     l3471:
  7487  0E2E  09B6               	comf	___awmod@divisor,f
  7488  0E2F  09B7               	comf	___awmod@divisor+1,f
  7489  0E30  0AB6               	incf	___awmod@divisor,f
  7490  0E31  1903               	skipnz
  7491  0E32  0AB7               	incf	___awmod@divisor+1,f
  7492  0E33                     l3473:
  7493  0E33  0836               	movf	___awmod@divisor,w
  7494  0E34  0437               	iorwf	___awmod@divisor+1,w
  7495  0E35  1903               	btfsc	3,2
  7496  0E36  2E38               	goto	u4701
  7497  0E37  2E39               	goto	u4700
  7498  0E38                     u4701:
  7499  0E38  2E68               	goto	l3491
  7500  0E39                     u4700:
  7501  0E39                     l3475:
  7502  0E39  01BA               	clrf	___awmod@counter
  7503  0E3A  0ABA               	incf	___awmod@counter,f
  7504  0E3B  2E47               	goto	l3481
  7505  0E3C                     l3477:
  7506  0E3C  3001               	movlw	1
  7507  0E3D                     u4715:
  7508  0E3D  1003               	clrc
  7509  0E3E  0DB6               	rlf	___awmod@divisor,f
  7510  0E3F  0DB7               	rlf	___awmod@divisor+1,f
  7511  0E40  3EFF               	addlw	-1
  7512  0E41  1D03               	skipz
  7513  0E42  2E3D               	goto	u4715
  7514  0E43                     l3479:
  7515  0E43  3001               	movlw	1
  7516  0E44  00FF               	movwf	btemp+1
  7517  0E45  087F               	movf	btemp+1,w
  7518  0E46  07BA               	addwf	___awmod@counter,f
  7519  0E47                     l3481:
  7520  0E47  1FB7               	btfss	___awmod@divisor+1,7
  7521  0E48  2E4A               	goto	u4721
  7522  0E49  2E4B               	goto	u4720
  7523  0E4A                     u4721:
  7524  0E4A  2E3C               	goto	l3477
  7525  0E4B                     u4720:
  7526  0E4B                     l3483:
  7527  0E4B  0837               	movf	___awmod@divisor+1,w
  7528  0E4C  0239               	subwf	___awmod@dividend+1,w
  7529  0E4D  1D03               	skipz
  7530  0E4E  2E51               	goto	u4735
  7531  0E4F  0836               	movf	___awmod@divisor,w
  7532  0E50  0238               	subwf	___awmod@dividend,w
  7533  0E51                     u4735:
  7534  0E51  1C03               	skipc
  7535  0E52  2E54               	goto	u4731
  7536  0E53  2E55               	goto	u4730
  7537  0E54                     u4731:
  7538  0E54  2E5B               	goto	l3487
  7539  0E55                     u4730:
  7540  0E55                     l3485:
  7541  0E55  0836               	movf	___awmod@divisor,w
  7542  0E56  02B8               	subwf	___awmod@dividend,f
  7543  0E57  0837               	movf	___awmod@divisor+1,w
  7544  0E58  1C03               	skipc
  7545  0E59  03B9               	decf	___awmod@dividend+1,f
  7546  0E5A  02B9               	subwf	___awmod@dividend+1,f
  7547  0E5B                     l3487:
  7548  0E5B  3001               	movlw	1
  7549  0E5C                     u4745:
  7550  0E5C  1003               	clrc
  7551  0E5D  0CB7               	rrf	___awmod@divisor+1,f
  7552  0E5E  0CB6               	rrf	___awmod@divisor,f
  7553  0E5F  3EFF               	addlw	-1
  7554  0E60  1D03               	skipz
  7555  0E61  2E5C               	goto	u4745
  7556  0E62                     l3489:
  7557  0E62  3001               	movlw	1
  7558  0E63  02BA               	subwf	___awmod@counter,f
  7559  0E64  1D03               	btfss	3,2
  7560  0E65  2E67               	goto	u4751
  7561  0E66  2E68               	goto	u4750
  7562  0E67                     u4751:
  7563  0E67  2E4B               	goto	l3483
  7564  0E68                     u4750:
  7565  0E68                     l3491:
  7566  0E68  083B               	movf	___awmod@sign,w
  7567  0E69  1903               	btfsc	3,2
  7568  0E6A  2E6C               	goto	u4761
  7569  0E6B  2E6D               	goto	u4760
  7570  0E6C                     u4761:
  7571  0E6C  2E72               	goto	l3495
  7572  0E6D                     u4760:
  7573  0E6D                     l3493:
  7574  0E6D  09B8               	comf	___awmod@dividend,f
  7575  0E6E  09B9               	comf	___awmod@dividend+1,f
  7576  0E6F  0AB8               	incf	___awmod@dividend,f
  7577  0E70  1903               	skipnz
  7578  0E71  0AB9               	incf	___awmod@dividend+1,f
  7579  0E72                     l3495:
  7580  0E72  0839               	movf	___awmod@dividend+1,w
  7581  0E73  00B7               	movwf	?___awmod+1
  7582  0E74  0838               	movf	___awmod@dividend,w
  7583  0E75  00B6               	movwf	?___awmod
  7584  0E76                     l769:
  7585  0E76  0008               	return
  7586  0E77                     __end_of___awmod:
  7587                           
  7588                           	psect	text39
  7589  0D25                     __ptext39:	
  7590 ;; *************** function _EEPROM_Read *****************
  7591 ;; Defined at:
  7592 ;;		line 60 in file "EEPROM/EEPROM.c"
  7593 ;; Parameters:    Size  Location     Type
  7594 ;;  Addr            1    wreg     unsigned char 
  7595 ;; Auto vars:     Size  Location     Type
  7596 ;;  Addr            1   23[BANK0 ] unsigned char 
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  1    wreg      unsigned char 
  7599 ;; Registers used:
  7600 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7606 ;;      Params:         0       0       0       0       0
  7607 ;;      Locals:         0       1       0       0       0
  7608 ;;      Temps:          0       0       0       0       0
  7609 ;;      Totals:         0       1       0       0       0
  7610 ;;Total ram usage:        1 bytes
  7611 ;; Hardware stack levels used:    1
  7612 ;; Hardware stack levels required when called:    5
  7613 ;; This function calls:
  7614 ;;		_I2c_Read
  7615 ;;		_I2c_Send_NAck
  7616 ;;		_I2c_Start
  7617 ;;		_I2c_Stop
  7618 ;;		_I2c_WaitAck
  7619 ;;		_I2c_Write
  7620 ;; This function is called by:
  7621 ;;		_Get_EEPROM_Data
  7622 ;; This function uses a non-reentrant model
  7623 ;;
  7624                           
  7625                           
  7626                           ;psect for function _EEPROM_Read
  7627  0D25                     _EEPROM_Read:
  7628                           
  7629                           ;incstack = 0
  7630                           ; Regs used in _EEPROM_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7631                           ;EEPROM_Read@Addr stored from wreg
  7632  0D25  1283               	bcf	3,5	;RP0=0, select bank0
  7633  0D26  1303               	bcf	3,6	;RP1=0, select bank0
  7634  0D27  00B7               	movwf	EEPROM_Read@Addr
  7635  0D28                     l3725:
  7636                           
  7637                           ;EEPROM/EEPROM.c: 60: uint8_t EEPROM_Read(uint8_t Addr);EEPROM/EEPROM.c: 61: {;EEPROM/EE
      +                          PROM.c: 62:   static uint8_t Data;;EEPROM/EEPROM.c: 63:   I2c_Start();
  7638  0D28  120A  158A  210D  120A  158A  	fcall	_I2c_Start
  7639  0D2D                     l3727:
  7640                           
  7641                           ;EEPROM/EEPROM.c: 64:   I2c_Write(0xA0);
  7642  0D2D  30A0               	movlw	160
  7643  0D2E  120A  158A  20D0  120A  158A  	fcall	_I2c_Write
  7644  0D33                     l3729:
  7645                           
  7646                           ;EEPROM/EEPROM.c: 65:   I2c_WaitAck();
  7647  0D33  120A  158A  20E2  120A  158A  	fcall	_I2c_WaitAck
  7648                           
  7649                           ;EEPROM/EEPROM.c: 66:   I2c_Write(Addr);
  7650  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  7651  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  7652  0D3A  0837               	movf	EEPROM_Read@Addr,w
  7653  0D3B  120A  158A  20D0  120A  158A  	fcall	_I2c_Write
  7654  0D40                     l3731:
  7655                           
  7656                           ;EEPROM/EEPROM.c: 67:   I2c_WaitAck();
  7657  0D40  120A  158A  20E2  120A  158A  	fcall	_I2c_WaitAck
  7658  0D45                     l3733:
  7659                           
  7660                           ;EEPROM/EEPROM.c: 68:   I2c_Start();
  7661  0D45  120A  158A  210D  120A  158A  	fcall	_I2c_Start
  7662                           
  7663                           ;EEPROM/EEPROM.c: 69:   I2c_Write(0xA0 +1);
  7664  0D4A  30A1               	movlw	161
  7665  0D4B  120A  158A  20D0  120A  158A  	fcall	_I2c_Write
  7666  0D50                     l3735:
  7667                           
  7668                           ;EEPROM/EEPROM.c: 70:   I2c_WaitAck();
  7669  0D50  120A  158A  20E2  120A  158A  	fcall	_I2c_WaitAck
  7670  0D55                     l3737:
  7671                           
  7672                           ;EEPROM/EEPROM.c: 71:   Data=I2c_Read();
  7673  0D55  120A  158A  2153  120A  158A  	fcall	_I2c_Read
  7674  0D5A  00FF               	movwf	btemp+1
  7675  0D5B  087F               	movf	btemp+1,w
  7676  0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  7677  0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  7678  0D5E  00CB               	movwf	EEPROM_Read@Data
  7679  0D5F                     l3739:
  7680                           
  7681                           ;EEPROM/EEPROM.c: 72:   I2c_Send_NAck();
  7682  0D5F  120A  158A  20FB  120A  158A  	fcall	_I2c_Send_NAck
  7683  0D64                     l3741:
  7684                           
  7685                           ;EEPROM/EEPROM.c: 73:   I2c_Stop();
  7686  0D64  120A  158A  2118  120A  158A  	fcall	_I2c_Stop
  7687  0D69                     l3743:
  7688                           
  7689                           ;EEPROM/EEPROM.c: 74:   return Data;
  7690  0D69  1283               	bcf	3,5	;RP0=0, select bank0
  7691  0D6A  1303               	bcf	3,6	;RP1=0, select bank0
  7692  0D6B  084B               	movf	EEPROM_Read@Data,w
  7693  0D6C                     l448:
  7694  0D6C  0008               	return
  7695  0D6D                     __end_of_EEPROM_Read:
  7696                           
  7697                           	psect	text40
  7698  08D0                     __ptext40:	
  7699 ;; *************** function _I2c_Write *****************
  7700 ;; Defined at:
  7701 ;;		line 55 in file "I2C/I2C.c"
  7702 ;; Parameters:    Size  Location     Type
  7703 ;;  data            1    wreg     unsigned char 
  7704 ;; Auto vars:     Size  Location     Type
  7705 ;;  data            1   22[BANK0 ] unsigned char 
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  1    wreg      void 
  7708 ;; Registers used:
  7709 ;;		wreg
  7710 ;; Tracked objects:
  7711 ;;		On entry : 0/0
  7712 ;;		On exit  : 0/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7715 ;;      Params:         0       0       0       0       0
  7716 ;;      Locals:         0       1       0       0       0
  7717 ;;      Temps:          0       0       0       0       0
  7718 ;;      Totals:         0       1       0       0       0
  7719 ;;Total ram usage:        1 bytes
  7720 ;; Hardware stack levels used:    1
  7721 ;; Hardware stack levels required when called:    4
  7722 ;; This function calls:
  7723 ;;		Nothing
  7724 ;; This function is called by:
  7725 ;;		_EEPROM_Write
  7726 ;;		_EEPROM_Read
  7727 ;; This function uses a non-reentrant model
  7728 ;;
  7729                           
  7730                           
  7731                           ;psect for function _I2c_Write
  7732  08D0                     _I2c_Write:
  7733                           
  7734                           ;incstack = 0
  7735 ;; hardware stack exceeded
  7736                           ; Regs used in _I2c_Write: [wreg]
  7737                           ;I2c_Write@data stored from wreg
  7738  08D0  1283               	bcf	3,5	;RP0=0, select bank0
  7739  08D1  1303               	bcf	3,6	;RP1=0, select bank0
  7740  08D2  00B6               	movwf	I2c_Write@data
  7741  08D3                     l3397:
  7742                           
  7743                           ;I2C/I2C.c: 55: void I2c_Write(uint8_t data);I2C/I2C.c: 56: {;I2C/I2C.c: 57:     SSPBUF=
      +                          data;
  7744  08D3  0836               	movf	I2c_Write@data,w
  7745  08D4  0093               	movwf	19	;volatile
  7746  08D5                     l405:
  7747  08D5  0008               	return
  7748  08D6                     __end_of_I2c_Write:
  7749                           
  7750                           	psect	text41
  7751  08E2                     __ptext41:	
  7752 ;; *************** function _I2c_WaitAck *****************
  7753 ;; Defined at:
  7754 ;;		line 61 in file "I2C/I2C.c"
  7755 ;; Parameters:    Size  Location     Type
  7756 ;;		None
  7757 ;; Auto vars:     Size  Location     Type
  7758 ;;		None
  7759 ;; Return value:  Size  Location     Type
  7760 ;;                  1    wreg      void 
  7761 ;; Registers used:
  7762 ;;		None
  7763 ;; Tracked objects:
  7764 ;;		On entry : 0/0
  7765 ;;		On exit  : 0/0
  7766 ;;		Unchanged: 0/0
  7767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7768 ;;      Params:         0       0       0       0       0
  7769 ;;      Locals:         0       0       0       0       0
  7770 ;;      Temps:          0       0       0       0       0
  7771 ;;      Totals:         0       0       0       0       0
  7772 ;;Total ram usage:        0 bytes
  7773 ;; Hardware stack levels used:    1
  7774 ;; Hardware stack levels required when called:    4
  7775 ;; This function calls:
  7776 ;;		Nothing
  7777 ;; This function is called by:
  7778 ;;		_EEPROM_Write
  7779 ;;		_EEPROM_Read
  7780 ;; This function uses a non-reentrant model
  7781 ;;
  7782                           
  7783                           
  7784                           ;psect for function _I2c_WaitAck
  7785  08E2                     _I2c_WaitAck:
  7786  08E2                     l3399:	
  7787                           ;incstack = 0
  7788 ;; hardware stack exceeded
  7789                           ; Regs used in _I2c_WaitAck: []
  7790                           
  7791  08E2                     l408:	
  7792                           ;I2C/I2C.c: 63:     while(!SSPIF);
  7793                           
  7794  08E2  1283               	bcf	3,5	;RP0=0, select bank0
  7795  08E3  1303               	bcf	3,6	;RP1=0, select bank0
  7796  08E4  1D8C               	btfss	12,3	;volatile
  7797  08E5  28E7               	goto	u4541
  7798  08E6  28E8               	goto	u4540
  7799  08E7                     u4541:
  7800  08E7  28E2               	goto	l408
  7801  08E8                     u4540:
  7802  08E8                     l410:
  7803                           
  7804                           ;I2C/I2C.c: 64:     SSPIF=0;
  7805  08E8  118C               	bcf	12,3	;volatile
  7806  08E9                     l411:
  7807  08E9  0008               	return
  7808  08EA                     __end_of_I2c_WaitAck:
  7809                           
  7810                           	psect	text42
  7811  0918                     __ptext42:	
  7812 ;; *************** function _I2c_Stop *****************
  7813 ;; Defined at:
  7814 ;;		line 48 in file "I2C/I2C.c"
  7815 ;; Parameters:    Size  Location     Type
  7816 ;;		None
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;		None
  7819 ;; Return value:  Size  Location     Type
  7820 ;;                  1    wreg      void 
  7821 ;; Registers used:
  7822 ;;		None
  7823 ;; Tracked objects:
  7824 ;;		On entry : 0/0
  7825 ;;		On exit  : 0/0
  7826 ;;		Unchanged: 0/0
  7827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7828 ;;      Params:         0       0       0       0       0
  7829 ;;      Locals:         0       0       0       0       0
  7830 ;;      Temps:          0       0       0       0       0
  7831 ;;      Totals:         0       0       0       0       0
  7832 ;;Total ram usage:        0 bytes
  7833 ;; Hardware stack levels used:    1
  7834 ;; Hardware stack levels required when called:    4
  7835 ;; This function calls:
  7836 ;;		Nothing
  7837 ;; This function is called by:
  7838 ;;		_EEPROM_Write
  7839 ;;		_EEPROM_Read
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           
  7844                           ;psect for function _I2c_Stop
  7845  0918                     _I2c_Stop:
  7846  0918                     l3395:	
  7847                           ;incstack = 0
  7848 ;; hardware stack exceeded
  7849                           ; Regs used in _I2c_Stop: []
  7850                           
  7851                           
  7852                           ;I2C/I2C.c: 50:     PEN=1;
  7853  0918  1683               	bsf	3,5	;RP0=1, select bank1
  7854  0919  1303               	bcf	3,6	;RP1=0, select bank1
  7855  091A  1511               	bsf	17,2	;volatile
  7856  091B                     l399:	
  7857                           ;I2C/I2C.c: 51:     while(PEN);
  7858                           
  7859  091B  1911               	btfsc	17,2	;volatile
  7860  091C  291E               	goto	u4531
  7861  091D  291F               	goto	u4530
  7862  091E                     u4531:
  7863  091E  291B               	goto	l399
  7864  091F                     u4530:
  7865  091F                     l401:
  7866                           
  7867                           ;I2C/I2C.c: 52:     SSPIF=0;
  7868  091F  1283               	bcf	3,5	;RP0=0, select bank0
  7869  0920  1303               	bcf	3,6	;RP1=0, select bank0
  7870  0921  118C               	bcf	12,3	;volatile
  7871  0922                     l402:
  7872  0922  0008               	return
  7873  0923                     __end_of_I2c_Stop:
  7874                           
  7875                           	psect	text43
  7876  090D                     __ptext43:	
  7877 ;; *************** function _I2c_Start *****************
  7878 ;; Defined at:
  7879 ;;		line 23 in file "I2C/I2C.c"
  7880 ;; Parameters:    Size  Location     Type
  7881 ;;		None
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;		None
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  1    wreg      void 
  7886 ;; Registers used:
  7887 ;;		None
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7893 ;;      Params:         0       0       0       0       0
  7894 ;;      Locals:         0       0       0       0       0
  7895 ;;      Temps:          0       0       0       0       0
  7896 ;;      Totals:         0       0       0       0       0
  7897 ;;Total ram usage:        0 bytes
  7898 ;; Hardware stack levels used:    1
  7899 ;; Hardware stack levels required when called:    4
  7900 ;; This function calls:
  7901 ;;		Nothing
  7902 ;; This function is called by:
  7903 ;;		_EEPROM_Write
  7904 ;;		_EEPROM_Read
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           
  7909                           ;psect for function _I2c_Start
  7910  090D                     _I2c_Start:
  7911  090D                     l3393:	
  7912                           ;incstack = 0
  7913 ;; hardware stack exceeded
  7914                           ; Regs used in _I2c_Start: []
  7915                           
  7916                           
  7917                           ;I2C/I2C.c: 25:     SEN=1;
  7918  090D  1683               	bsf	3,5	;RP0=1, select bank1
  7919  090E  1303               	bcf	3,6	;RP1=0, select bank1
  7920  090F  1411               	bsf	17,0	;volatile
  7921  0910                     l381:	
  7922                           ;I2C/I2C.c: 26:     while(SEN);
  7923                           
  7924  0910  1811               	btfsc	17,0	;volatile
  7925  0911  2913               	goto	u4521
  7926  0912  2914               	goto	u4520
  7927  0913                     u4521:
  7928  0913  2910               	goto	l381
  7929  0914                     u4520:
  7930  0914                     l383:
  7931                           
  7932                           ;I2C/I2C.c: 27:     SSPIF=0;
  7933  0914  1283               	bcf	3,5	;RP0=0, select bank0
  7934  0915  1303               	bcf	3,6	;RP1=0, select bank0
  7935  0916  118C               	bcf	12,3	;volatile
  7936  0917                     l384:
  7937  0917  0008               	return
  7938  0918                     __end_of_I2c_Start:
  7939                           
  7940                           	psect	text44
  7941  08FB                     __ptext44:	
  7942 ;; *************** function _I2c_Send_NAck *****************
  7943 ;; Defined at:
  7944 ;;		line 40 in file "I2C/I2C.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;		None
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;		None
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  1    wreg      void 
  7951 ;; Registers used:
  7952 ;;		None
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7958 ;;      Params:         0       0       0       0       0
  7959 ;;      Locals:         0       0       0       0       0
  7960 ;;      Temps:          0       0       0       0       0
  7961 ;;      Totals:         0       0       0       0       0
  7962 ;;Total ram usage:        0 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:    4
  7965 ;; This function calls:
  7966 ;;		Nothing
  7967 ;; This function is called by:
  7968 ;;		_EEPROM_Read
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           
  7973                           ;psect for function _I2c_Send_NAck
  7974  08FB                     _I2c_Send_NAck:
  7975  08FB                     l2733:	
  7976                           ;incstack = 0
  7977                           ; Regs used in _I2c_Send_NAck: []
  7978                           
  7979                           
  7980                           ;I2C/I2C.c: 42:     ACKDT=1;
  7981  08FB  1683               	bsf	3,5	;RP0=1, select bank1
  7982  08FC  1303               	bcf	3,6	;RP1=0, select bank1
  7983  08FD  1691               	bsf	17,5	;volatile
  7984                           
  7985                           ;I2C/I2C.c: 43:     ACKEN=1;
  7986  08FE  1611               	bsf	17,4	;volatile
  7987  08FF                     l393:	
  7988                           ;I2C/I2C.c: 44:     while(ACKEN);
  7989                           
  7990  08FF  1A11               	btfsc	17,4	;volatile
  7991  0900  2902               	goto	u3331
  7992  0901  2903               	goto	u3330
  7993  0902                     u3331:
  7994  0902  28FF               	goto	l393
  7995  0903                     u3330:
  7996  0903                     l396:
  7997  0903  0008               	return
  7998  0904                     __end_of_I2c_Send_NAck:
  7999                           
  8000                           	psect	text45
  8001  0953                     __ptext45:	
  8002 ;; *************** function _I2c_Read *****************
  8003 ;; Defined at:
  8004 ;;		line 31 in file "I2C/I2C.c"
  8005 ;; Parameters:    Size  Location     Type
  8006 ;;		None
  8007 ;; Auto vars:     Size  Location     Type
  8008 ;;  data            1   22[BANK0 ] unsigned char 
  8009 ;; Return value:  Size  Location     Type
  8010 ;;                  1    wreg      unsigned char 
  8011 ;; Registers used:
  8012 ;;		wreg, btemp+1
  8013 ;; Tracked objects:
  8014 ;;		On entry : 0/0
  8015 ;;		On exit  : 0/0
  8016 ;;		Unchanged: 0/0
  8017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8018 ;;      Params:         0       0       0       0       0
  8019 ;;      Locals:         0       1       0       0       0
  8020 ;;      Temps:          0       0       0       0       0
  8021 ;;      Totals:         0       1       0       0       0
  8022 ;;Total ram usage:        1 bytes
  8023 ;; Hardware stack levels used:    1
  8024 ;; Hardware stack levels required when called:    4
  8025 ;; This function calls:
  8026 ;;		Nothing
  8027 ;; This function is called by:
  8028 ;;		_EEPROM_Read
  8029 ;; This function uses a non-reentrant model
  8030 ;;
  8031                           
  8032                           
  8033                           ;psect for function _I2c_Read
  8034  0953                     _I2c_Read:
  8035  0953                     l2725:	
  8036                           ;incstack = 0
  8037                           ; Regs used in _I2c_Read: [wreg+btemp+1]
  8038                           
  8039                           
  8040                           ;I2C/I2C.c: 33:     uint8_t data;;I2C/I2C.c: 34:     RCEN=1;
  8041  0953  1683               	bsf	3,5	;RP0=1, select bank1
  8042  0954  1303               	bcf	3,6	;RP1=0, select bank1
  8043  0955  1591               	bsf	17,3	;volatile
  8044  0956                     l387:	
  8045                           ;I2C/I2C.c: 35:     while(!BF);
  8046                           
  8047  0956  1C14               	btfss	20,0	;volatile
  8048  0957  2959               	goto	u3321
  8049  0958  295A               	goto	u3320
  8050  0959                     u3321:
  8051  0959  2956               	goto	l387
  8052  095A                     u3320:
  8053  095A                     l2727:
  8054                           
  8055                           ;I2C/I2C.c: 36:     data= SSPBUF;
  8056  095A  1283               	bcf	3,5	;RP0=0, select bank0
  8057  095B  1303               	bcf	3,6	;RP1=0, select bank0
  8058  095C  0813               	movf	19,w	;volatile
  8059  095D  00FF               	movwf	btemp+1
  8060  095E  087F               	movf	btemp+1,w
  8061  095F  00B6               	movwf	I2c_Read@data
  8062  0960                     l2729:
  8063                           
  8064                           ;I2C/I2C.c: 37:     return data;
  8065  0960  0836               	movf	I2c_Read@data,w
  8066  0961                     l390:
  8067  0961  0008               	return
  8068  0962                     __end_of_I2c_Read:
  8069                           
  8070                           	psect	text46
  8071  0A20                     __ptext46:	
  8072 ;; *************** function _GPIO_Init *****************
  8073 ;; Defined at:
  8074 ;;		line 12 in file "gpio/gpio.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;		None
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;		None
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      void 
  8081 ;; Registers used:
  8082 ;;		wreg, status,2, status,0, btemp+1
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8088 ;;      Params:         0       0       0       0       0
  8089 ;;      Locals:         0       0       0       0       0
  8090 ;;      Temps:          0       0       0       0       0
  8091 ;;      Totals:         0       0       0       0       0
  8092 ;;Total ram usage:        0 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:    4
  8095 ;; This function calls:
  8096 ;;		Nothing
  8097 ;; This function is called by:
  8098 ;;		_main
  8099 ;; This function uses a non-reentrant model
  8100 ;;
  8101                           
  8102                           
  8103                           ;psect for function _GPIO_Init
  8104  0A20                     _GPIO_Init:
  8105  0A20                     l2875:	
  8106                           ;incstack = 0
  8107                           ; Regs used in _GPIO_Init: [wreg+status,2+status,0+btemp+1]
  8108                           
  8109  0A20  30DF               	movlw	223
  8110  0A21  00FF               	movwf	btemp+1
  8111  0A22  087F               	movf	btemp+1,w
  8112  0A23  1683               	bsf	3,5	;RP0=1, select bank1
  8113  0A24  1303               	bcf	3,6	;RP1=0, select bank1
  8114  0A25  0587               	andwf	7,f	;volatile
  8115  0A26                     l2877:
  8116  0A26  30FB               	movlw	251
  8117  0A27  00FF               	movwf	btemp+1
  8118  0A28  087F               	movf	btemp+1,w
  8119  0A29  0587               	andwf	7,f	;volatile
  8120  0A2A                     l2879:
  8121  0A2A  30EF               	movlw	239
  8122  0A2B  00FF               	movwf	btemp+1
  8123  0A2C  087F               	movf	btemp+1,w
  8124  0A2D  0586               	andwf	6,f	;volatile
  8125  0A2E                     l2881:
  8126  0A2E  30DF               	movlw	223
  8127  0A2F  00FF               	movwf	btemp+1
  8128  0A30  087F               	movf	btemp+1,w
  8129  0A31  0585               	andwf	5,f	;volatile
  8130  0A32                     l2883:
  8131  0A32  30EF               	movlw	239
  8132  0A33  00FF               	movwf	btemp+1
  8133  0A34  087F               	movf	btemp+1,w
  8134  0A35  0585               	andwf	5,f	;volatile
  8135  0A36                     l186:
  8136  0A36  1486               	bsf	6,1	;volatile
  8137  0A37                     l190:
  8138  0A37  1506               	bsf	6,2	;volatile
  8139  0A38                     l194:
  8140  0A38  1406               	bsf	6,0	;volatile
  8141  0A39                     l198:
  8142  0A39  1505               	bsf	5,2	;volatile
  8143  0A3A                     l202:
  8144  0A3A  1587               	bsf	7,3	;volatile
  8145  0A3B                     l206:
  8146  0A3B  1607               	bsf	7,4	;volatile
  8147  0A3C                     l2897:
  8148  0A3C  0188               	clrf	8	;volatile
  8149  0A3D                     l213:
  8150  0A3D  0008               	return
  8151  0A3E                     __end_of_GPIO_Init:
  8152                           
  8153                           	psect	text47
  8154  092E                     __ptext47:	
  8155 ;; *************** function _Elements_Init *****************
  8156 ;; Defined at:
  8157 ;;		line 11 in file "Elements/Elements.c"
  8158 ;; Parameters:    Size  Location     Type
  8159 ;;		None
  8160 ;; Auto vars:     Size  Location     Type
  8161 ;;		None
  8162 ;; Return value:  Size  Location     Type
  8163 ;;                  1    wreg      void 
  8164 ;; Registers used:
  8165 ;;		wreg, status,2, status,0, btemp+1
  8166 ;; Tracked objects:
  8167 ;;		On entry : 0/0
  8168 ;;		On exit  : 0/0
  8169 ;;		Unchanged: 0/0
  8170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8171 ;;      Params:         0       0       0       0       0
  8172 ;;      Locals:         0       0       0       0       0
  8173 ;;      Temps:          0       0       0       0       0
  8174 ;;      Totals:         0       0       0       0       0
  8175 ;;Total ram usage:        0 bytes
  8176 ;; Hardware stack levels used:    1
  8177 ;; Hardware stack levels required when called:    4
  8178 ;; This function calls:
  8179 ;;		Nothing
  8180 ;; This function is called by:
  8181 ;;		_main
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           
  8185                           
  8186                           ;psect for function _Elements_Init
  8187  092E                     _Elements_Init:
  8188  092E                     l2919:	
  8189                           ;incstack = 0
  8190                           ; Regs used in _Elements_Init: [wreg+status,2+status,0+btemp+1]
  8191                           
  8192                           
  8193                           ;Elements/Elements.c: 13:  LED_Status=_LED_OFF;
  8194  092E  1283               	bcf	3,5	;RP0=0, select bank0
  8195  092F  1303               	bcf	3,6	;RP1=0, select bank0
  8196  0930  01CE               	clrf	_LED_Status
  8197  0931                     l2921:
  8198                           
  8199                           ;Elements/Elements.c: 14:  (PORTC &= ~(1<<5));
  8200  0931  30DF               	movlw	223
  8201  0932  00FF               	movwf	btemp+1
  8202  0933  087F               	movf	btemp+1,w
  8203  0934  0587               	andwf	7,f	;volatile
  8204  0935                     l2923:
  8205                           
  8206                           ;Elements/Elements.c: 15:  (PORTC &= ~(1<<2));
  8207  0935  30FB               	movlw	251
  8208  0936  00FF               	movwf	btemp+1
  8209  0937  087F               	movf	btemp+1,w
  8210  0938  0587               	andwf	7,f	;volatile
  8211  0939                     l131:
  8212  0939  0008               	return
  8213  093A                     __end_of_Elements_Init:
  8214                           
  8215                           	psect	text48
  8216  08F2                     __ptext48:	
  8217 ;; *************** function _ADC_Start_Conv *****************
  8218 ;; Defined at:
  8219 ;;		line 38 in file "ADC/ADC.c"
  8220 ;; Parameters:    Size  Location     Type
  8221 ;;		None
  8222 ;; Auto vars:     Size  Location     Type
  8223 ;;		None
  8224 ;; Return value:  Size  Location     Type
  8225 ;;                  1    wreg      void 
  8226 ;; Registers used:
  8227 ;;		None
  8228 ;; Tracked objects:
  8229 ;;		On entry : 0/0
  8230 ;;		On exit  : 0/0
  8231 ;;		Unchanged: 0/0
  8232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8233 ;;      Params:         0       0       0       0       0
  8234 ;;      Locals:         0       0       0       0       0
  8235 ;;      Temps:          0       0       0       0       0
  8236 ;;      Totals:         0       0       0       0       0
  8237 ;;Total ram usage:        0 bytes
  8238 ;; Hardware stack levels used:    1
  8239 ;; Hardware stack levels required when called:    4
  8240 ;; This function calls:
  8241 ;;		Nothing
  8242 ;; This function is called by:
  8243 ;;		_main
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           
  8248                           ;psect for function _ADC_Start_Conv
  8249  08F2                     _ADC_Start_Conv:
  8250  08F2                     l2871:	
  8251                           ;incstack = 0
  8252                           ; Regs used in _ADC_Start_Conv: []
  8253                           
  8254                           
  8255                           ;ADC/ADC.c: 40:  if (ADC_Info.ADC_INIT_FLAG==1)
  8256  08F2  1283               	bcf	3,5	;RP0=0, select bank0
  8257  08F3  1303               	bcf	3,6	;RP1=0, select bank0
  8258  08F4  1C50               	btfss	_ADC_Info,0
  8259  08F5  28F7               	goto	u3541
  8260  08F6  28F8               	goto	u3540
  8261  08F7                     u3541:
  8262  08F7  28FA               	goto	l25
  8263  08F8                     u3540:
  8264  08F8                     l2873:
  8265                           
  8266                           ;ADC/ADC.c: 41:  {;ADC/ADC.c: 42:      ADCON0bits.GO_DONE=1 ;
  8267  08F8  151F               	bsf	31,2	;volatile
  8268                           
  8269                           ;ADC/ADC.c: 43:      ADC_Info.ADC_START_FLAG=1;
  8270  08F9  14D0               	bsf	_ADC_Info,1
  8271  08FA                     l25:
  8272  08FA  0008               	return
  8273  08FB                     __end_of_ADC_Start_Conv:
  8274                           
  8275                           	psect	text49
  8276  0A05                     __ptext49:	
  8277 ;; *************** function _ADC_Init *****************
  8278 ;; Defined at:
  8279 ;;		line 13 in file "ADC/ADC.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;		None
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;		None
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  1    wreg      void 
  8286 ;; Registers used:
  8287 ;;		None
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8293 ;;      Params:         0       0       0       0       0
  8294 ;;      Locals:         0       0       0       0       0
  8295 ;;      Temps:          0       0       0       0       0
  8296 ;;      Totals:         0       0       0       0       0
  8297 ;;Total ram usage:        0 bytes
  8298 ;; Hardware stack levels used:    1
  8299 ;; Hardware stack levels required when called:    4
  8300 ;; This function calls:
  8301 ;;		Nothing
  8302 ;; This function is called by:
  8303 ;;		_main
  8304 ;; This function uses a non-reentrant model
  8305 ;;
  8306                           
  8307                           
  8308                           ;psect for function _ADC_Init
  8309  0A05                     _ADC_Init:
  8310  0A05                     l2869:	
  8311                           ;incstack = 0
  8312                           ; Regs used in _ADC_Init: []
  8313                           
  8314                           
  8315                           ;ADC/ADC.c: 16:     ADCON1bits.ADFM=1;
  8316  0A05  1683               	bsf	3,5	;RP0=1, select bank1
  8317  0A06  1303               	bcf	3,6	;RP1=0, select bank1
  8318  0A07  179F               	bsf	31,7	;volatile
  8319                           
  8320                           ;ADC/ADC.c: 18:     ADCON0bits.ADCS0=1 ;
  8321  0A08  1283               	bcf	3,5	;RP0=0, select bank0
  8322  0A09  1303               	bcf	3,6	;RP1=0, select bank0
  8323  0A0A  171F               	bsf	31,6	;volatile
  8324                           
  8325                           ;ADC/ADC.c: 19:     ADCON0bits.ADCS1=0;
  8326  0A0B  139F               	bcf	31,7	;volatile
  8327                           
  8328                           ;ADC/ADC.c: 20:     ADCON1bits.ADCS2=1 ;
  8329  0A0C  1683               	bsf	3,5	;RP0=1, select bank1
  8330  0A0D  1303               	bcf	3,6	;RP1=0, select bank1
  8331  0A0E  171F               	bsf	31,6	;volatile
  8332                           
  8333                           ;ADC/ADC.c: 23:     ADCON0bits.CHS0=0;
  8334  0A0F  1283               	bcf	3,5	;RP0=0, select bank0
  8335  0A10  1303               	bcf	3,6	;RP1=0, select bank0
  8336  0A11  119F               	bcf	31,3	;volatile
  8337                           
  8338                           ;ADC/ADC.c: 24:     ADCON0bits.CHS1=1;
  8339  0A12  161F               	bsf	31,4	;volatile
  8340                           
  8341                           ;ADC/ADC.c: 25:     ADCON0bits.CHS2=0;
  8342  0A13  129F               	bcf	31,5	;volatile
  8343                           
  8344                           ;ADC/ADC.c: 28:     ADCON1bits.PCFG0=0;
  8345  0A14  1683               	bsf	3,5	;RP0=1, select bank1
  8346  0A15  1303               	bcf	3,6	;RP1=0, select bank1
  8347  0A16  101F               	bcf	31,0	;volatile
  8348                           
  8349                           ;ADC/ADC.c: 29:     ADCON1bits.PCFG1=1;
  8350  0A17  149F               	bsf	31,1	;volatile
  8351                           
  8352                           ;ADC/ADC.c: 30:     ADCON1bits.PCFG2=0;
  8353  0A18  111F               	bcf	31,2	;volatile
  8354                           
  8355                           ;ADC/ADC.c: 31:     ADCON1bits.PCFG3=0;
  8356  0A19  119F               	bcf	31,3	;volatile
  8357                           
  8358                           ;ADC/ADC.c: 33:     ADCON0bits.ADON=1;
  8359  0A1A  1283               	bcf	3,5	;RP0=0, select bank0
  8360  0A1B  1303               	bcf	3,6	;RP1=0, select bank0
  8361  0A1C  141F               	bsf	31,0	;volatile
  8362                           
  8363                           ;ADC/ADC.c: 34:     ADCON0bits.GO_DONE=0;
  8364  0A1D  111F               	bcf	31,2	;volatile
  8365                           
  8366                           ;ADC/ADC.c: 35:     ADC_Info.ADC_INIT_FLAG=1;
  8367  0A1E  1450               	bsf	_ADC_Info,0
  8368  0A1F                     l21:
  8369  0A1F  0008               	return
  8370  0A20                     __end_of_ADC_Init:
  8371                           
  8372                           	psect	text50
  8373  0A60                     __ptext50:	
  8374 ;; *************** function _myISR *****************
  8375 ;; Defined at:
  8376 ;;		line 12 in file "Interrupt/Interrupt.c"
  8377 ;; Parameters:    Size  Location     Type
  8378 ;;		None
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;		None
  8381 ;; Return value:  Size  Location     Type
  8382 ;;                  1    wreg      void 
  8383 ;; Registers used:
  8384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8390 ;;      Params:         0       0       0       0       0
  8391 ;;      Locals:         0       0       0       0       0
  8392 ;;      Temps:          0       4       0       0       0
  8393 ;;      Totals:         0       4       0       0       0
  8394 ;;Total ram usage:        4 bytes
  8395 ;; Hardware stack levels used:    1
  8396 ;; Hardware stack levels required when called:    3
  8397 ;; This function calls:
  8398 ;;		_EXTI_On_Off_CallBack
  8399 ;;		_Timer0_CallBack
  8400 ;; This function is called by:
  8401 ;;		Interrupt level 1
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           
  8406                           ;psect for function _myISR
  8407  0A60                     _myISR:
  8408  0A60                     i1l3819:
  8409                           
  8410                           ;Interrupt/Interrupt.c: 15:  if(INTCONbits.INTF)
  8411  0A60  1C8B               	btfss	11,1	;volatile
  8412  0A61  2A63               	goto	u524_21
  8413  0A62  2A64               	goto	u524_20
  8414  0A63                     u524_21:
  8415  0A63  2A6B               	goto	i1l228
  8416  0A64                     u524_20:
  8417  0A64                     i1l3821:
  8418                           
  8419                           ;Interrupt/Interrupt.c: 16:  {;Interrupt/Interrupt.c: 17:         INTCONbits.INTF=0;
  8420  0A64  108B               	bcf	11,1	;volatile
  8421  0A65                     i1l3823:
  8422                           
  8423                           ;Interrupt/Interrupt.c: 18:   EXTI_On_Off_CallBack();
  8424  0A65  120A  158A  21A7  120A  158A  	fcall	_EXTI_On_Off_CallBack
  8425                           
  8426                           ;Interrupt/Interrupt.c: 20:  }
  8427  0A6A  2A77               	goto	i1l231
  8428  0A6B                     i1l228:	
  8429                           ;Interrupt/Interrupt.c: 21:  else if(INTCONbits.TMR0IF)
  8430                           
  8431  0A6B  1D0B               	btfss	11,2	;volatile
  8432  0A6C  2A6E               	goto	u525_21
  8433  0A6D  2A6F               	goto	u525_20
  8434  0A6E                     u525_21:
  8435  0A6E  2A77               	goto	i1l231
  8436  0A6F                     u525_20:
  8437  0A6F                     i1l3825:
  8438                           
  8439                           ;Interrupt/Interrupt.c: 22:  {;Interrupt/Interrupt.c: 23:         INTCONbits.TMR0IF=0;
  8440  0A6F  110B               	bcf	11,2	;volatile
  8441  0A70                     i1l3827:
  8442                           
  8443                           ;Interrupt/Interrupt.c: 24:         TMR0=100;
  8444  0A70  3064               	movlw	100
  8445  0A71  0081               	movwf	1	;volatile
  8446  0A72                     i1l3829:
  8447                           
  8448                           ;Interrupt/Interrupt.c: 25:   Timer0_CallBack();
  8449  0A72  120A  158A  2329  120A  158A  	fcall	_Timer0_CallBack
  8450  0A77                     i1l231:
  8451  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  8452  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  8453  0A79  0835               	movf	??_myISR+3,w
  8454  0A7A  00FF               	movwf	btemp+1
  8455  0A7B  0834               	movf	??_myISR+2,w
  8456  0A7C  008A               	movwf	10
  8457  0A7D  0833               	movf	??_myISR+1,w
  8458  0A7E  0084               	movwf	4
  8459  0A7F  0E32               	swapf	??_myISR^0,w
  8460  0A80  0083               	movwf	3
  8461  0A81  0EFE               	swapf	btemp,f
  8462  0A82  0E7E               	swapf	btemp,w
  8463  0A83  0009               	retfie
  8464  0A84                     __end_of_myISR:
  8465                           
  8466                           	psect	intentry
  8467  0004                     __pintentry:	
  8468                           ;incstack = 0
  8469 ;; hardware stack exceeded
  8470                           ; Regs used in _myISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8471                           
  8472  0004                     interrupt_function:
  8473  007E                     saved_w	set	btemp
  8474  0004  00FE               	movwf	btemp
  8475  0005  0E03               	swapf	3,w
  8476  0006  1283               	bcf	3,5	;RP0=0, select bank0
  8477  0007  1303               	bcf	3,6	;RP1=0, select bank0
  8478  0008  00B2               	movwf	??_myISR
  8479  0009  0804               	movf	4,w
  8480  000A  00B3               	movwf	??_myISR+1
  8481  000B  080A               	movf	10,w
  8482  000C  00B4               	movwf	??_myISR+2
  8483  000D  087F               	movf	btemp+1,w
  8484  000E  00B5               	movwf	??_myISR+3
  8485  000F  120A  158A  2A60   	ljmp	_myISR
  8486                           
  8487                           	psect	text51
  8488  0B29                     __ptext51:	
  8489 ;; *************** function _Timer0_CallBack *****************
  8490 ;; Defined at:
  8491 ;;		line 31 in file "Timer/Timer.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;		None
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;		None
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  1    wreg      void 
  8498 ;; Registers used:
  8499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8500 ;; Tracked objects:
  8501 ;;		On entry : 0/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8505 ;;      Params:         0       0       0       0       0
  8506 ;;      Locals:         0       0       0       0       0
  8507 ;;      Temps:          0       0       0       0       0
  8508 ;;      Totals:         0       0       0       0       0
  8509 ;;Total ram usage:        0 bytes
  8510 ;; Hardware stack levels used:    1
  8511 ;; Hardware stack levels required when called:    2
  8512 ;; This function calls:
  8513 ;;		_Scheduler_ActivateTask
  8514 ;; This function is called by:
  8515 ;;		_myISR
  8516 ;; This function uses a non-reentrant model
  8517 ;;
  8518                           
  8519                           
  8520                           ;psect for function _Timer0_CallBack
  8521  0B29                     _Timer0_CallBack:
  8522  0B29                     i1l3793:	
  8523                           ;incstack = 0
  8524 ;; hardware stack exceeded
  8525                           ; Regs used in _Timer0_CallBack: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8526                           
  8527                           
  8528                           ;Timer/Timer.c: 33:  Tick_Num++;
  8529  0B29  3001               	movlw	1
  8530  0B2A  1683               	bsf	3,5	;RP0=1, select bank1
  8531  0B2B  1303               	bcf	3,6	;RP1=0, select bank1
  8532  0B2C  07C8               	addwf	_Tick_Num^(0+128),f
  8533  0B2D  3000               	movlw	0
  8534  0B2E  1803               	skipnc
  8535  0B2F  3001               	movlw	1
  8536  0B30  07C9               	addwf	(_Tick_Num+1)^(0+128),f
  8537  0B31  3000               	movlw	0
  8538  0B32  1803               	skipnc
  8539  0B33  3001               	movlw	1
  8540  0B34  07CA               	addwf	(_Tick_Num+2)^(0+128),f
  8541  0B35  3000               	movlw	0
  8542  0B36  1803               	skipnc
  8543  0B37  3001               	movlw	1
  8544  0B38  07CB               	addwf	(_Tick_Num+3)^(0+128),f
  8545  0B39                     i1l3795:
  8546                           
  8547                           ;Timer/Timer.c: 34:  Scheduler_ActivateTask(Tick_Num );
  8548  0B39  084B               	movf	(_Tick_Num+3)^(0+128),w
  8549  0B3A  1283               	bcf	3,5	;RP0=0, select bank0
  8550  0B3B  1303               	bcf	3,6	;RP1=0, select bank0
  8551  0B3C  00B0               	movwf	Scheduler_ActivateTask@SystemTick+3
  8552  0B3D  1683               	bsf	3,5	;RP0=1, select bank1
  8553  0B3E  1303               	bcf	3,6	;RP1=0, select bank1
  8554  0B3F  084A               	movf	(_Tick_Num+2)^(0+128),w
  8555  0B40  1283               	bcf	3,5	;RP0=0, select bank0
  8556  0B41  1303               	bcf	3,6	;RP1=0, select bank0
  8557  0B42  00AF               	movwf	Scheduler_ActivateTask@SystemTick+2
  8558  0B43  1683               	bsf	3,5	;RP0=1, select bank1
  8559  0B44  1303               	bcf	3,6	;RP1=0, select bank1
  8560  0B45  0849               	movf	(_Tick_Num+1)^(0+128),w
  8561  0B46  1283               	bcf	3,5	;RP0=0, select bank0
  8562  0B47  1303               	bcf	3,6	;RP1=0, select bank0
  8563  0B48  00AE               	movwf	Scheduler_ActivateTask@SystemTick+1
  8564  0B49  1683               	bsf	3,5	;RP0=1, select bank1
  8565  0B4A  1303               	bcf	3,6	;RP1=0, select bank1
  8566  0B4B  0848               	movf	_Tick_Num^(0+128),w
  8567  0B4C  1283               	bcf	3,5	;RP0=0, select bank0
  8568  0B4D  1303               	bcf	3,6	;RP1=0, select bank0
  8569  0B4E  00AD               	movwf	Scheduler_ActivateTask@SystemTick
  8570  0B4F  120A  158A  2734  120A  158A  	fcall	_Scheduler_ActivateTask
  8571  0B54                     i1l324:
  8572  0B54  0008               	return
  8573  0B55                     __end_of_Timer0_CallBack:
  8574                           
  8575                           	psect	text52
  8576  0F34                     __ptext52:	
  8577 ;; *************** function _Scheduler_ActivateTask *****************
  8578 ;; Defined at:
  8579 ;;		line 35 in file "Scheduler/Scheduler.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;  SystemTick      4   13[BANK0 ] unsigned long 
  8582 ;; Auto vars:     Size  Location     Type
  8583 ;;  IntityIndex     1   17[BANK0 ] unsigned char 
  8584 ;; Return value:  Size  Location     Type
  8585 ;;                  1    wreg      void 
  8586 ;; Registers used:
  8587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 0/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8593 ;;      Params:         0       4       0       0       0
  8594 ;;      Locals:         0       1       0       0       0
  8595 ;;      Temps:          0       0       0       0       0
  8596 ;;      Totals:         0       5       0       0       0
  8597 ;;Total ram usage:        5 bytes
  8598 ;; Hardware stack levels used:    1
  8599 ;; Hardware stack levels required when called:    1
  8600 ;; This function calls:
  8601 ;;		___llmod
  8602 ;;		i1___bmul
  8603 ;;		i1___lldiv
  8604 ;; This function is called by:
  8605 ;;		_Timer0_CallBack
  8606 ;; This function uses a non-reentrant model
  8607 ;;
  8608                           
  8609                           
  8610                           ;psect for function _Scheduler_ActivateTask
  8611  0F34                     _Scheduler_ActivateTask:
  8612  0F34                     i1l3701:	
  8613                           ;incstack = 0
  8614 ;; hardware stack exceeded
  8615                           ; Regs used in _Scheduler_ActivateTask: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  8616                           
  8617                           
  8618                           ;Scheduler/Scheduler.c: 35: void Scheduler_ActivateTask(uint32_t SystemTick);Scheduler/S
      +                          cheduler.c: 36: {;Scheduler/Scheduler.c: 38:   for( uint8_t IntityIndex = 0 ; IntityInde
      +                          x < ( 3U ) ; IntityIndex++ )
  8619  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  8620  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  8621  0F36  01B1               	clrf	Scheduler_ActivateTask@IntityIndex
  8622  0F37                     i1l3707:
  8623                           
  8624                           ;Scheduler/Scheduler.c: 39:   {;Scheduler/Scheduler.c: 40:     if( ( ((SystemTick)%(Sche
      +                          duler_Intitys[IntityIndex].Peroid/(20UL)))?0:1 ) )
  8625  0F37  3000               	movlw	0
  8626  0F38  00F6               	movwf	i1___lldiv@divisor+3
  8627  0F39  3000               	movlw	0
  8628  0F3A  00F5               	movwf	i1___lldiv@divisor+2
  8629  0F3B  3000               	movlw	0
  8630  0F3C  00F4               	movwf	i1___lldiv@divisor+1
  8631  0F3D  3014               	movlw	20
  8632  0F3E  00F3               	movwf	i1___lldiv@divisor
  8633  0F3F  3005               	movlw	5
  8634  0F40  00FF               	movwf	btemp+1
  8635  0F41  087F               	movf	btemp+1,w
  8636  0F42  00F0               	movwf	i1___bmul@multiplicand
  8637  0F43  0831               	movf	Scheduler_ActivateTask@IntityIndex,w
  8638  0F44  120A  158A  2192  120A  158A  	fcall	i1___bmul
  8639  0F49  3E02               	addlw	low (((_Scheduler_Intitys-__stringbase)| (0+32768)+1))
  8640  0F4A  0084               	movwf	4
  8641  0F4B  120A  158A  2000  120A  158A  	fcall	stringdir
  8642  0F50  00F7               	movwf	i1___lldiv@dividend
  8643  0F51  120A  158A  2000  120A  158A  	fcall	stringdir
  8644  0F56  00F8               	movwf	i1___lldiv@dividend+1
  8645  0F57  120A  158A  2000  120A  158A  	fcall	stringdir
  8646  0F5C  00F9               	movwf	i1___lldiv@dividend+2
  8647  0F5D  120A  158A  2000  120A  158A  	fcall	stringdir
  8648  0F62  00FA               	movwf	i1___lldiv@dividend+3
  8649  0F63  120A  118A  276B  120A  158A  	fcall	i1___lldiv
  8650  0F68  0876               	movf	?i1___lldiv+3,w
  8651  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  8652  0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  8653  0F6B  00A8               	movwf	___llmod@divisor+3
  8654  0F6C  0875               	movf	?i1___lldiv+2,w
  8655  0F6D  00A7               	movwf	___llmod@divisor+2
  8656  0F6E  0874               	movf	?i1___lldiv+1,w
  8657  0F6F  00A6               	movwf	___llmod@divisor+1
  8658  0F70  0873               	movf	?i1___lldiv,w
  8659  0F71  00A5               	movwf	___llmod@divisor
  8660  0F72  0830               	movf	Scheduler_ActivateTask@SystemTick+3,w
  8661  0F73  00AC               	movwf	___llmod@dividend+3
  8662  0F74  082F               	movf	Scheduler_ActivateTask@SystemTick+2,w
  8663  0F75  00AB               	movwf	___llmod@dividend+2
  8664  0F76  082E               	movf	Scheduler_ActivateTask@SystemTick+1,w
  8665  0F77  00AA               	movwf	___llmod@dividend+1
  8666  0F78  082D               	movf	Scheduler_ActivateTask@SystemTick,w
  8667  0F79  00A9               	movwf	___llmod@dividend
  8668  0F7A  120A  158A  256D  120A  158A  	fcall	___llmod
  8669  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  8670  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  8671  0F81  0828               	movf	?___llmod+3,w
  8672  0F82  0427               	iorwf	?___llmod+2,w
  8673  0F83  0426               	iorwf	?___llmod+1,w
  8674  0F84  0425               	iorwf	?___llmod,w
  8675  0F85  1D03               	skipz
  8676  0F86  2F88               	goto	u515_21
  8677  0F87  2F89               	goto	u515_20
  8678  0F88                     u515_21:
  8679  0F88  2F8F               	goto	i1l3711
  8680  0F89                     u515_20:
  8681  0F89                     i1l3709:
  8682                           
  8683                           ;Scheduler/Scheduler.c: 41:     {;Scheduler/Scheduler.c: 42:      Scheduler_ActivationFl
      +                          ags[IntityIndex] = 1 ;
  8684  0F89  0831               	movf	Scheduler_ActivateTask@IntityIndex,w
  8685  0F8A  3ED0               	addlw	(low (_Scheduler_ActivationFlags| 0))& (0+255)
  8686  0F8B  0084               	movwf	4
  8687  0F8C  1383               	bcf	3,7	;select IRP bank1
  8688  0F8D  0180               	clrf	0
  8689  0F8E  0A80               	incf	0,f
  8690  0F8F                     i1l3711:
  8691                           
  8692                           ;Scheduler/Scheduler.c: 44:   }
  8693  0F8F  3001               	movlw	1
  8694  0F90  00FF               	movwf	btemp+1
  8695  0F91  087F               	movf	btemp+1,w
  8696  0F92  07B1               	addwf	Scheduler_ActivateTask@IntityIndex,f
  8697  0F93                     i1l3713:
  8698  0F93  3003               	movlw	3
  8699  0F94  0231               	subwf	Scheduler_ActivateTask@IntityIndex,w
  8700  0F95  1C03               	skipc
  8701  0F96  2F98               	goto	u516_21
  8702  0F97  2F99               	goto	u516_20
  8703  0F98                     u516_21:
  8704  0F98  2F37               	goto	i1l3707
  8705  0F99                     u516_20:
  8706  0F99                     i1l255:
  8707  0F99  0008               	return
  8708  0F9A                     __end_of_Scheduler_ActivateTask:
  8709                           
  8710                           	psect	text53
  8711  076B                     __ptext53:	
  8712 ;; *************** function i1___lldiv *****************
  8713 ;; Defined at:
  8714 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  8715 ;; Parameters:    Size  Location     Type
  8716 ;;  divisor         4    3[COMMON] unsigned long 
  8717 ;;  dividend        4    7[COMMON] unsigned long 
  8718 ;; Auto vars:     Size  Location     Type
  8719 ;;  quotient        4    0[BANK0 ] unsigned long 
  8720 ;;  counter         1    4[BANK0 ] unsigned char 
  8721 ;; Return value:  Size  Location     Type
  8722 ;;                  4    3[COMMON] unsigned long 
  8723 ;; Registers used:
  8724 ;;		wreg, status,2, status,0, btemp+1
  8725 ;; Tracked objects:
  8726 ;;		On entry : 0/0
  8727 ;;		On exit  : 0/0
  8728 ;;		Unchanged: 0/0
  8729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8730 ;;      Params:         8       0       0       0       0
  8731 ;;      Locals:         0       5       0       0       0
  8732 ;;      Temps:          1       0       0       0       0
  8733 ;;      Totals:         9       5       0       0       0
  8734 ;;Total ram usage:       14 bytes
  8735 ;; Hardware stack levels used:    1
  8736 ;; This function calls:
  8737 ;;		Nothing
  8738 ;; This function is called by:
  8739 ;;		_Scheduler_ActivateTask
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           
  8744                           ;psect for function i1___lldiv
  8745  076B                     i1___lldiv:
  8746  076B                     i1l2757:	
  8747                           ;incstack = 0
  8748 ;; hardware stack exceeded
  8749                           ; Regs used in i1___lldiv: [wreg+status,2+status,0+btemp+1]
  8750                           
  8751  076B  3000               	movlw	0
  8752  076C  1283               	bcf	3,5	;RP0=0, select bank0
  8753  076D  1303               	bcf	3,6	;RP1=0, select bank0
  8754  076E  00A3               	movwf	i1___lldiv@quotient+3
  8755  076F  3000               	movlw	0
  8756  0770  00A2               	movwf	i1___lldiv@quotient+2
  8757  0771  3000               	movlw	0
  8758  0772  00A1               	movwf	i1___lldiv@quotient+1
  8759  0773  3000               	movlw	0
  8760  0774  00A0               	movwf	i1___lldiv@quotient
  8761  0775  0876               	movf	i1___lldiv@divisor+3,w
  8762  0776  0475               	iorwf	i1___lldiv@divisor+2,w
  8763  0777  0474               	iorwf	i1___lldiv@divisor+1,w
  8764  0778  0473               	iorwf	i1___lldiv@divisor,w
  8765  0779  1903               	skipnz
  8766  077A  2F7C               	goto	u340_21
  8767  077B  2F7D               	goto	u340_20
  8768  077C                     u340_21:
  8769  077C  2FCA               	goto	i1l2779
  8770  077D                     u340_20:
  8771  077D                     i1l2759:
  8772  077D  01A4               	clrf	i1___lldiv@counter
  8773  077E  0AA4               	incf	i1___lldiv@counter,f
  8774  077F  2F8D               	goto	i1l2765
  8775  0780                     i1l2761:
  8776  0780  3001               	movlw	1
  8777  0781  00FB               	movwf	??i1___lldiv
  8778  0782                     u341_25:
  8779  0782  1003               	clrc
  8780  0783  0DF3               	rlf	i1___lldiv@divisor,f
  8781  0784  0DF4               	rlf	i1___lldiv@divisor+1,f
  8782  0785  0DF5               	rlf	i1___lldiv@divisor+2,f
  8783  0786  0DF6               	rlf	i1___lldiv@divisor+3,f
  8784  0787  0BFB               	decfsz	??i1___lldiv,f
  8785  0788  2F82               	goto	u341_25
  8786  0789                     i1l2763:
  8787  0789  3001               	movlw	1
  8788  078A  00FF               	movwf	btemp+1
  8789  078B  087F               	movf	btemp+1,w
  8790  078C  07A4               	addwf	i1___lldiv@counter,f
  8791  078D                     i1l2765:
  8792  078D  1FF6               	btfss	i1___lldiv@divisor+3,7
  8793  078E  2F90               	goto	u342_21
  8794  078F  2F91               	goto	u342_20
  8795  0790                     u342_21:
  8796  0790  2F80               	goto	i1l2761
  8797  0791                     u342_20:
  8798  0791                     i1l2767:
  8799  0791  3001               	movlw	1
  8800  0792  00FB               	movwf	??i1___lldiv
  8801  0793                     u343_25:
  8802  0793  1003               	clrc
  8803  0794  0DA0               	rlf	i1___lldiv@quotient,f
  8804  0795  0DA1               	rlf	i1___lldiv@quotient+1,f
  8805  0796  0DA2               	rlf	i1___lldiv@quotient+2,f
  8806  0797  0DA3               	rlf	i1___lldiv@quotient+3,f
  8807  0798  0BFB               	decfsz	??i1___lldiv,f
  8808  0799  2F93               	goto	u343_25
  8809  079A                     i1l2769:
  8810  079A  0876               	movf	i1___lldiv@divisor+3,w
  8811  079B  027A               	subwf	i1___lldiv@dividend+3,w
  8812  079C  1D03               	skipz
  8813  079D  2FA8               	goto	u344_25
  8814  079E  0875               	movf	i1___lldiv@divisor+2,w
  8815  079F  0279               	subwf	i1___lldiv@dividend+2,w
  8816  07A0  1D03               	skipz
  8817  07A1  2FA8               	goto	u344_25
  8818  07A2  0874               	movf	i1___lldiv@divisor+1,w
  8819  07A3  0278               	subwf	i1___lldiv@dividend+1,w
  8820  07A4  1D03               	skipz
  8821  07A5  2FA8               	goto	u344_25
  8822  07A6  0873               	movf	i1___lldiv@divisor,w
  8823  07A7  0277               	subwf	i1___lldiv@dividend,w
  8824  07A8                     u344_25:
  8825  07A8  1C03               	skipc
  8826  07A9  2FAB               	goto	u344_21
  8827  07AA  2FAC               	goto	u344_20
  8828  07AB                     u344_21:
  8829  07AB  2FBB               	goto	i1l2775
  8830  07AC                     u344_20:
  8831  07AC                     i1l2771:
  8832  07AC  0873               	movf	i1___lldiv@divisor,w
  8833  07AD  02F7               	subwf	i1___lldiv@dividend,f
  8834  07AE  0874               	movf	i1___lldiv@divisor+1,w
  8835  07AF  1C03               	skipc
  8836  07B0  0F74               	incfsz	i1___lldiv@divisor+1,w
  8837  07B1  02F8               	subwf	i1___lldiv@dividend+1,f
  8838  07B2  0875               	movf	i1___lldiv@divisor+2,w
  8839  07B3  1C03               	skipc
  8840  07B4  0F75               	incfsz	i1___lldiv@divisor+2,w
  8841  07B5  02F9               	subwf	i1___lldiv@dividend+2,f
  8842  07B6  0876               	movf	i1___lldiv@divisor+3,w
  8843  07B7  1C03               	skipc
  8844  07B8  0F76               	incfsz	i1___lldiv@divisor+3,w
  8845  07B9  02FA               	subwf	i1___lldiv@dividend+3,f
  8846  07BA                     i1l2773:
  8847  07BA  1420               	bsf	i1___lldiv@quotient,0
  8848  07BB                     i1l2775:
  8849  07BB  3001               	movlw	1
  8850  07BC                     u345_25:
  8851  07BC  1003               	clrc
  8852  07BD  0CF6               	rrf	i1___lldiv@divisor+3,f
  8853  07BE  0CF5               	rrf	i1___lldiv@divisor+2,f
  8854  07BF  0CF4               	rrf	i1___lldiv@divisor+1,f
  8855  07C0  0CF3               	rrf	i1___lldiv@divisor,f
  8856  07C1  3EFF               	addlw	-1
  8857  07C2  1D03               	skipz
  8858  07C3  2FBC               	goto	u345_25
  8859  07C4                     i1l2777:
  8860  07C4  3001               	movlw	1
  8861  07C5  02A4               	subwf	i1___lldiv@counter,f
  8862  07C6  1D03               	btfss	3,2
  8863  07C7  2FC9               	goto	u346_21
  8864  07C8  2FCA               	goto	u346_20
  8865  07C9                     u346_21:
  8866  07C9  2F91               	goto	i1l2767
  8867  07CA                     u346_20:
  8868  07CA                     i1l2779:
  8869  07CA  0823               	movf	i1___lldiv@quotient+3,w
  8870  07CB  00F6               	movwf	?i1___lldiv+3
  8871  07CC  0822               	movf	i1___lldiv@quotient+2,w
  8872  07CD  00F5               	movwf	?i1___lldiv+2
  8873  07CE  0821               	movf	i1___lldiv@quotient+1,w
  8874  07CF  00F4               	movwf	?i1___lldiv+1
  8875  07D0  0820               	movf	i1___lldiv@quotient,w
  8876  07D1  00F3               	movwf	?i1___lldiv
  8877  07D2                     i1l639:
  8878  07D2  0008               	return
  8879  07D3                     __end_ofi1___lldiv:
  8880                           
  8881                           	psect	text54
  8882  0992                     __ptext54:	
  8883 ;; *************** function i1___bmul *****************
  8884 ;; Defined at:
  8885 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;  multiplier      1    wreg     unsigned char 
  8888 ;;  multiplicand    1    0[COMMON] unsigned char 
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;  multiplier      1    2[COMMON] unsigned char 
  8891 ;;  product         1    1[COMMON] unsigned char 
  8892 ;; Return value:  Size  Location     Type
  8893 ;;                  1    wreg      unsigned char 
  8894 ;; Registers used:
  8895 ;;		wreg, status,2, status,0, btemp+1
  8896 ;; Tracked objects:
  8897 ;;		On entry : 0/0
  8898 ;;		On exit  : 0/0
  8899 ;;		Unchanged: 0/0
  8900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8901 ;;      Params:         1       0       0       0       0
  8902 ;;      Locals:         2       0       0       0       0
  8903 ;;      Temps:          0       0       0       0       0
  8904 ;;      Totals:         3       0       0       0       0
  8905 ;;Total ram usage:        3 bytes
  8906 ;; Hardware stack levels used:    1
  8907 ;; This function calls:
  8908 ;;		Nothing
  8909 ;; This function is called by:
  8910 ;;		_Scheduler_ActivateTask
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           
  8914                           
  8915                           ;psect for function i1___bmul
  8916  0992                     i1___bmul:
  8917                           
  8918                           ;incstack = 0
  8919 ;; hardware stack exceeded
  8920                           ; Regs used in i1___bmul: [wreg+status,2+status,0+btemp+1]
  8921                           ;i1___bmul@multiplier stored from wreg
  8922  0992  00F2               	movwf	i1___bmul@multiplier
  8923  0993                     i1l2783:
  8924  0993  01F1               	clrf	i1___bmul@product
  8925  0994                     i1l2785:
  8926  0994  1C72               	btfss	i1___bmul@multiplier,0
  8927  0995  2997               	goto	u347_21
  8928  0996  2998               	goto	u347_20
  8929  0997                     u347_21:
  8930  0997  299C               	goto	i1l2789
  8931  0998                     u347_20:
  8932  0998                     i1l2787:
  8933  0998  0870               	movf	i1___bmul@multiplicand,w
  8934  0999  00FF               	movwf	btemp+1
  8935  099A  087F               	movf	btemp+1,w
  8936  099B  07F1               	addwf	i1___bmul@product,f
  8937  099C                     i1l2789:
  8938  099C  1003               	clrc
  8939  099D  0DF0               	rlf	i1___bmul@multiplicand,f
  8940  099E                     i1l2791:
  8941  099E  1003               	clrc
  8942  099F  0CF2               	rrf	i1___bmul@multiplier,f
  8943  09A0                     i1l2793:
  8944  09A0  0872               	movf	i1___bmul@multiplier,w
  8945  09A1  1D03               	btfss	3,2
  8946  09A2  29A4               	goto	u348_21
  8947  09A3  29A5               	goto	u348_20
  8948  09A4                     u348_21:
  8949  09A4  2994               	goto	i1l2785
  8950  09A5                     u348_20:
  8951  09A5                     i1l2795:
  8952  09A5  0871               	movf	i1___bmul@product,w
  8953  09A6                     i1l629:
  8954  09A6  0008               	return
  8955  09A7                     __end_ofi1___bmul:
  8956                           
  8957                           	psect	text55
  8958  0D6D                     __ptext55:	
  8959 ;; *************** function ___llmod *****************
  8960 ;; Defined at:
  8961 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.20\pic\sources\c90\common\llmod.c"
  8962 ;; Parameters:    Size  Location     Type
  8963 ;;  divisor         4    5[BANK0 ] unsigned long 
  8964 ;;  dividend        4    9[BANK0 ] unsigned long 
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;  counter         1   13[COMMON] unsigned char 
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  4    5[BANK0 ] unsigned long 
  8969 ;; Registers used:
  8970 ;;		wreg, status,2, status,0, btemp+1
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8976 ;;      Params:         0       8       0       0       0
  8977 ;;      Locals:         1       0       0       0       0
  8978 ;;      Temps:          1       0       0       0       0
  8979 ;;      Totals:         2       8       0       0       0
  8980 ;;Total ram usage:       10 bytes
  8981 ;; Hardware stack levels used:    1
  8982 ;; This function calls:
  8983 ;;		Nothing
  8984 ;; This function is called by:
  8985 ;;		_Scheduler_ActivateTask
  8986 ;; This function uses a non-reentrant model
  8987 ;;
  8988                           
  8989                           
  8990                           ;psect for function ___llmod
  8991  0D6D                     ___llmod:
  8992  0D6D                     i1l2735:	
  8993                           ;incstack = 0
  8994 ;; hardware stack exceeded
  8995                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  8996                           
  8997  0D6D  1283               	bcf	3,5	;RP0=0, select bank0
  8998  0D6E  1303               	bcf	3,6	;RP1=0, select bank0
  8999  0D6F  0828               	movf	___llmod@divisor+3,w
  9000  0D70  0427               	iorwf	___llmod@divisor+2,w
  9001  0D71  0426               	iorwf	___llmod@divisor+1,w
  9002  0D72  0425               	iorwf	___llmod@divisor,w
  9003  0D73  1903               	skipnz
  9004  0D74  2D76               	goto	u334_21
  9005  0D75  2D77               	goto	u334_20
  9006  0D76                     u334_21:
  9007  0D76  2DBA               	goto	i1l2753
  9008  0D77                     u334_20:
  9009  0D77                     i1l2737:
  9010  0D77  01FD               	clrf	___llmod@counter
  9011  0D78  0AFD               	incf	___llmod@counter,f
  9012  0D79  2D87               	goto	i1l2743
  9013  0D7A                     i1l2739:
  9014  0D7A  3001               	movlw	1
  9015  0D7B  00FC               	movwf	??___llmod
  9016  0D7C                     u335_25:
  9017  0D7C  1003               	clrc
  9018  0D7D  0DA5               	rlf	___llmod@divisor,f
  9019  0D7E  0DA6               	rlf	___llmod@divisor+1,f
  9020  0D7F  0DA7               	rlf	___llmod@divisor+2,f
  9021  0D80  0DA8               	rlf	___llmod@divisor+3,f
  9022  0D81  0BFC               	decfsz	??___llmod,f
  9023  0D82  2D7C               	goto	u335_25
  9024  0D83                     i1l2741:
  9025  0D83  3001               	movlw	1
  9026  0D84  00FF               	movwf	btemp+1
  9027  0D85  087F               	movf	btemp+1,w
  9028  0D86  07FD               	addwf	___llmod@counter,f
  9029  0D87                     i1l2743:
  9030  0D87  1FA8               	btfss	___llmod@divisor+3,7
  9031  0D88  2D8A               	goto	u336_21
  9032  0D89  2D8B               	goto	u336_20
  9033  0D8A                     u336_21:
  9034  0D8A  2D7A               	goto	i1l2739
  9035  0D8B                     u336_20:
  9036  0D8B                     i1l2745:
  9037  0D8B  0828               	movf	___llmod@divisor+3,w
  9038  0D8C  022C               	subwf	___llmod@dividend+3,w
  9039  0D8D  1D03               	skipz
  9040  0D8E  2D99               	goto	u337_25
  9041  0D8F  0827               	movf	___llmod@divisor+2,w
  9042  0D90  022B               	subwf	___llmod@dividend+2,w
  9043  0D91  1D03               	skipz
  9044  0D92  2D99               	goto	u337_25
  9045  0D93  0826               	movf	___llmod@divisor+1,w
  9046  0D94  022A               	subwf	___llmod@dividend+1,w
  9047  0D95  1D03               	skipz
  9048  0D96  2D99               	goto	u337_25
  9049  0D97  0825               	movf	___llmod@divisor,w
  9050  0D98  0229               	subwf	___llmod@dividend,w
  9051  0D99                     u337_25:
  9052  0D99  1C03               	skipc
  9053  0D9A  2D9C               	goto	u337_21
  9054  0D9B  2D9D               	goto	u337_20
  9055  0D9C                     u337_21:
  9056  0D9C  2DAB               	goto	i1l2749
  9057  0D9D                     u337_20:
  9058  0D9D                     i1l2747:
  9059  0D9D  0825               	movf	___llmod@divisor,w
  9060  0D9E  02A9               	subwf	___llmod@dividend,f
  9061  0D9F  0826               	movf	___llmod@divisor+1,w
  9062  0DA0  1C03               	skipc
  9063  0DA1  0F26               	incfsz	___llmod@divisor+1,w
  9064  0DA2  02AA               	subwf	___llmod@dividend+1,f
  9065  0DA3  0827               	movf	___llmod@divisor+2,w
  9066  0DA4  1C03               	skipc
  9067  0DA5  0F27               	incfsz	___llmod@divisor+2,w
  9068  0DA6  02AB               	subwf	___llmod@dividend+2,f
  9069  0DA7  0828               	movf	___llmod@divisor+3,w
  9070  0DA8  1C03               	skipc
  9071  0DA9  0F28               	incfsz	___llmod@divisor+3,w
  9072  0DAA  02AC               	subwf	___llmod@dividend+3,f
  9073  0DAB                     i1l2749:
  9074  0DAB  3001               	movlw	1
  9075  0DAC                     u338_25:
  9076  0DAC  1003               	clrc
  9077  0DAD  0CA8               	rrf	___llmod@divisor+3,f
  9078  0DAE  0CA7               	rrf	___llmod@divisor+2,f
  9079  0DAF  0CA6               	rrf	___llmod@divisor+1,f
  9080  0DB0  0CA5               	rrf	___llmod@divisor,f
  9081  0DB1  3EFF               	addlw	-1
  9082  0DB2  1D03               	skipz
  9083  0DB3  2DAC               	goto	u338_25
  9084  0DB4                     i1l2751:
  9085  0DB4  3001               	movlw	1
  9086  0DB5  02FD               	subwf	___llmod@counter,f
  9087  0DB6  1D03               	btfss	3,2
  9088  0DB7  2DB9               	goto	u339_21
  9089  0DB8  2DBA               	goto	u339_20
  9090  0DB9                     u339_21:
  9091  0DB9  2D8B               	goto	i1l2745
  9092  0DBA                     u339_20:
  9093  0DBA                     i1l2753:
  9094  0DBA  082C               	movf	___llmod@dividend+3,w
  9095  0DBB  00A8               	movwf	?___llmod+3
  9096  0DBC  082B               	movf	___llmod@dividend+2,w
  9097  0DBD  00A7               	movwf	?___llmod+2
  9098  0DBE  082A               	movf	___llmod@dividend+1,w
  9099  0DBF  00A6               	movwf	?___llmod+1
  9100  0DC0  0829               	movf	___llmod@dividend,w
  9101  0DC1  00A5               	movwf	?___llmod
  9102  0DC2                     i1l825:
  9103  0DC2  0008               	return
  9104  0DC3                     __end_of___llmod:
  9105                           
  9106                           	psect	text56
  9107  09A7                     __ptext56:	
  9108 ;; *************** function _EXTI_On_Off_CallBack *****************
  9109 ;; Defined at:
  9110 ;;		line 22 in file "Buttons/Buttons.c"
  9111 ;; Parameters:    Size  Location     Type
  9112 ;;		None
  9113 ;; Auto vars:     Size  Location     Type
  9114 ;;		None
  9115 ;; Return value:  Size  Location     Type
  9116 ;;                  1    wreg      void 
  9117 ;; Registers used:
  9118 ;;		wreg, status,2, status,0
  9119 ;; Tracked objects:
  9120 ;;		On entry : 0/0
  9121 ;;		On exit  : 0/0
  9122 ;;		Unchanged: 0/0
  9123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9124 ;;      Params:         0       0       0       0       0
  9125 ;;      Locals:         0       0       0       0       0
  9126 ;;      Temps:          0       0       0       0       0
  9127 ;;      Totals:         0       0       0       0       0
  9128 ;;Total ram usage:        0 bytes
  9129 ;; Hardware stack levels used:    1
  9130 ;; This function calls:
  9131 ;;		Nothing
  9132 ;; This function is called by:
  9133 ;;		_myISR
  9134 ;; This function uses a non-reentrant model
  9135 ;;
  9136                           
  9137                           
  9138                           ;psect for function _EXTI_On_Off_CallBack
  9139  09A7                     _EXTI_On_Off_CallBack:
  9140  09A7                     i1l2963:	
  9141                           ;incstack = 0
  9142 ;; hardware stack exceeded
  9143                           ; Regs used in _EXTI_On_Off_CallBack: [wreg+status,2+status,0]
  9144                           
  9145                           
  9146                           ;Buttons/Buttons.c: 24:  if((Mode.Select_Mode==Setting_Mode) || (Mode.Select_Mode==Norma
      +                          l_Mode))
  9147  09A7  3002               	movlw	2
  9148  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  9149  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  9150  09AA  0645               	xorwf	_Mode,w
  9151  09AB  1903               	btfsc	3,2
  9152  09AC  29AE               	goto	u360_21
  9153  09AD  29AF               	goto	u360_20
  9154  09AE                     u360_21:
  9155  09AE  29B4               	goto	i1l2967
  9156  09AF                     u360_20:
  9157  09AF                     i1l2965:
  9158  09AF  0345               	decf	_Mode,w
  9159  09B0  1D03               	btfss	3,2
  9160  09B1  29B3               	goto	u361_21
  9161  09B2  29B4               	goto	u361_20
  9162  09B3                     u361_21:
  9163  09B3  29B6               	goto	i1l2969
  9164  09B4                     u361_20:
  9165  09B4                     i1l2967:
  9166                           
  9167                           ;Buttons/Buttons.c: 25:  {;Buttons/Buttons.c: 27:   Mode.Select_Mode=Off_Mode;
  9168  09B4  01C5               	clrf	_Mode
  9169                           
  9170                           ;Buttons/Buttons.c: 29:  }
  9171  09B5  29BD               	goto	i1l106
  9172  09B6                     i1l2969:
  9173  09B6  0845               	movf	_Mode,w
  9174  09B7  1D03               	btfss	3,2
  9175  09B8  29BA               	goto	u362_21
  9176  09B9  29BB               	goto	u362_20
  9177  09BA                     u362_21:
  9178  09BA  29BD               	goto	i1l106
  9179  09BB                     u362_20:
  9180  09BB                     i1l2971:
  9181                           
  9182                           ;Buttons/Buttons.c: 31:  {;Buttons/Buttons.c: 33:   Mode.Select_Mode=Normal_Mode;
  9183  09BB  01C5               	clrf	_Mode
  9184  09BC  0AC5               	incf	_Mode,f
  9185  09BD                     i1l106:
  9186  09BD  0008               	return
  9187  09BE                     __end_of_EXTI_On_Off_CallBack:
  9188  0006                     
  9189                           	psect	functab
  9190  0042                     __pfunctab:
  9191  0042                     __fptable:
  9192  0042                     fptable:
  9193  0042  00FF               	movwf	(btemp+1)& (0+127)
  9194  0043  3000               	movlw	high fptable
  9195  0044  008A               	movwf	10
  9196  0045  087F               	movf	(btemp+1)& (0+127),w
  9197  0046  0782               	addwf	2,f
  9198  0047                     fpbase:
  9199  0047  2847               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  9200  0048                     fp__Scheduler_Task3:
  9201  0048  120A  158A  2923   	ljmp	_Scheduler_Task3
  9202  004B                     fp__Scheduler_Task1:
  9203  004B  120A  158A  28DC   	ljmp	_Scheduler_Task1
  9204  004E                     fp__Scheduler_Task2:
  9205  004E  120A  158A  2972   	ljmp	_Scheduler_Task2
  9206  0051                     __end_of__fptable:
  9207  007E                     btemp	set	126	;btemp
  9208  007E                     wtemp0	set	126
  9209                           
  9210                           	psect	config
  9211                           
  9212                           ;Config register CONFIG @ 0x2007
  9213                           ;	Oscillator Selection bits
  9214                           ;	FOSC = HS, HS oscillator
  9215                           ;	Watchdog Timer Enable bit
  9216                           ;	WDTE = OFF, WDT disabled
  9217                           ;	Power-up Timer Enable bit
  9218                           ;	PWRTE = OFF, PWRT disabled
  9219                           ;	Brown-out Reset Enable bit
  9220                           ;	BOREN = OFF, BOR disabled
  9221                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  9222                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  9223                           ;	Data EEPROM Memory Code Protection bit
  9224                           ;	CPD = OFF, Data EEPROM code protection off
  9225                           ;	Flash Program Memory Write Enable bits
  9226                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  9227                           ;	In-Circuit Debugger Mode bit
  9228                           ;	DEBUG = 0x1, unprogrammed default
  9229                           ;	Flash Program Memory Code Protection bit
  9230                           ;	CP = OFF, Code protection off
  9231  2007                     	org	8199
  9232  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    15
    Data        4
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     37      58
    BANK1            80     29      80
    BANK3            96     13      13
    BANK2            96      0       0

Pointer List with Targets:

    Scheduler_Start$1306	const PTR FTN()void  size(1) Largest target is 1
		 -> Scheduler_Task3(), Scheduler_Task2(), Scheduler_Task1(), 

    memset@p1	PTR void  size(1) Largest target is 3
		 -> Scheduler_ActivationFlags(BANK1[3]), 

    memset@p	PTR unsigned char  size(1) Largest target is 3
		 -> Scheduler_ActivationFlags(BANK1[3]), 

    sp__memset	PTR void  size(1) Largest target is 3
		 -> Scheduler_ActivationFlags(BANK1[3]), 

    S380$fuction_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> Scheduler_Task3(), Scheduler_Task2(), Scheduler_Task1(), 

    Scheduler_Intitys.fuction_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> Scheduler_Task3(), Scheduler_Task2(), Scheduler_Task1(), 

    Average_Value@Avrage_Values	PTR unsigned char  size(1) Largest target is 5
		 -> Temperature(BANK0[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myISR in COMMON

    _Scheduler_ActivateTask->___llmod
    i1___lldiv->i1___bmul
    ___llmod->i1___lldiv

Critical Paths under _main in BANK0

    _Set_EEPROM_Data->_EEPROM_Write
    _EEPROM_Write->_I2c_Write
    _Mode_MainFunction->_Start_Setting_Timer
    _Start_Setting_Timer->___wmul
    _Elements_MainFunction->_LED_Control
    _LED_Control->_LED_BLINKING
    _LED_BLINKING->___wmul
    _Temperature_Calc->_Average_Value
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _Average_Value->___lldiv
    _Scheduler_Task1->_SSD_MainFunction
    _SSD_SelectDisplay->_SSD_Blink
    _SSD_Blink->___wmul
    _SSD_SelectDigit->___awdiv
    _Scheduler_Init->_memset
    _Get_EEPROM_Data->___awmod
    _EEPROM_Read->_I2c_Read
    _EEPROM_Read->_I2c_Write

Critical Paths under _myISR in BANK0

    _Timer0_CallBack->_Scheduler_ActivateTask
    _Scheduler_ActivateTask->___llmod
    ___llmod->i1___lldiv

Critical Paths under _main in BANK1

    _ADC_Value_Ready_CallBack->_Temperature_Calc
    _Temperature_Calc->___fltol
    ___fltol->___flmul

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_Scheduler_Start
    _ADC_Value_Ready_CallBack->_Temperature_Calc
    _Temperature_Calc->___fltol

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12979
                           _ADC_Init
                     _ADC_Start_Conv
                      _Elements_Init
                          _GPIO_Init
                    _Get_EEPROM_Data
                           _I2c_Init
                          _Mode_Init
                        _On_Off_Init
                           _SSD_Init
                     _Scheduler_Init
                    _Scheduler_Start
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Scheduler_Start                                      1     1      0   11698
                                             12 BANK3      1     1      0
                    _Scheduler_Task1 *
                    _Scheduler_Task2 *
                    _Scheduler_Task3 *
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     179
                                             22 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _Scheduler_Task3                                      0     0      0    1321
                  _Mode_MainFunction
                    _Set_EEPROM_Data
 ---------------------------------------------------------------------------------
 (3) _Set_EEPROM_Data                                      0     0      0     183
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Write                                         2     1      1     183
                                             23 BANK0      2     1      1
                          _I2c_Start
                           _I2c_Stop
                        _I2c_WaitAck
                          _I2c_Write
 ---------------------------------------------------------------------------------
 (3) _Mode_MainFunction                                    0     0      0    1138
                _Start_Setting_Timer
 ---------------------------------------------------------------------------------
 (4) _Start_Setting_Timer                                  6     2      4    1138
                                             28 BANK0      6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _Scheduler_Task2                                      0     0      0    7481
              _ADC_Conv_MainFunction
               _Buttons_MainFunction
              _Elements_MainFunction
 ---------------------------------------------------------------------------------
 (3) _Elements_MainFunction                                4     4      0    1138
                                              0 BANK1      4     4      0
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          2     2      0    1138
                                             34 BANK0      2     2      0
                       _LED_BLINKING
 ---------------------------------------------------------------------------------
 (5) _LED_BLINKING                                         6     2      4    1138
                                             28 BANK0      6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _Buttons_MainFunction                                 1     1      0       0
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADC_Conv_MainFunction                                0     0      0    6343
           _ADC_Value_Ready_CallBack
 ---------------------------------------------------------------------------------
 (4) _ADC_Value_Ready_CallBack                             0     0      0    6343
                   _Temperature_Calc
 ---------------------------------------------------------------------------------
 (5) _Temperature_Calc                                     5     5      0    6343
                                             28 BANK1      1     1      0
                                              8 BANK3      4     4      0
                      _Average_Value
                            ___flmul
                            ___fltol
                            ___lwmod
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4     566
                                             22 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     427
                                             26 BANK1      2     2      0
                                              0 BANK3      8     4      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    3353
                                              0 BANK1     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     980
                                             22 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (6) _Average_Value                                        8     7      1    1374
                                             36 BANK0      1     0      1
                                              0 BANK1      7     7      0
                            ___lldiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     592
                                             22 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             14     6      8     531
                                             22 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _Scheduler_Task1                                      0     0      0    2556
                   _SSD_MainFunction
 ---------------------------------------------------------------------------------
 (3) _SSD_MainFunction                                     2     2      0    2556
                                             34 BANK0      2     2      0
                    _SSD_SelectDigit
                  _SSD_SelectDisplay
 ---------------------------------------------------------------------------------
 (4) _SSD_SelectDisplay                                    0     0      0    1138
                          _SSD_Blink
 ---------------------------------------------------------------------------------
 (5) _SSD_Blink                                            6     2      4    1138
                                             28 BANK0      6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     896
                                             22 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _SSD_SelectDigit                                      2     2      0    1418
                                             30 BANK0      2     2      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             22 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Scheduler_Init                                       0     0      0     403
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     2      4     403
                                             22 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SSD_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _On_Off_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mode_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_EEPROM_Data                                      2     2      0     878
                                             28 BANK0      2     2      0
                        _EEPROM_Read
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     793
                                             22 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          1     1      0      85
                                             23 BANK0      1     1      0
                           _I2c_Read
                      _I2c_Send_NAck
                          _I2c_Start
                           _I2c_Stop
                        _I2c_WaitAck
                          _I2c_Write
 ---------------------------------------------------------------------------------
 (5) _I2c_Write                                            1     1      0      31
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2c_WaitAck                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2c_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2c_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2c_Send_NAck                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2c_Read                                             1     1      0      23
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Elements_Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Start_Conv                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _myISR                                                4     4      0     863
                                             18 BANK0      4     4      0
               _EXTI_On_Off_CallBack
                    _Timer0_CallBack
 ---------------------------------------------------------------------------------
 (9) _Timer0_CallBack                                      0     0      0     863
             _Scheduler_ActivateTask
 ---------------------------------------------------------------------------------
 (10) _Scheduler_ActivateTask                              5     1      4     863
                                             13 BANK0      5     1      4
                            ___llmod
                           i1___bmul
                          i1___lldiv
 ---------------------------------------------------------------------------------
 (11) i1___lldiv                                          14     6      8     214
                                              3 COMMON     9     1      8
                                              0 BANK0      5     5      0
                           i1___bmul (ARG)
 ---------------------------------------------------------------------------------
 (11) i1___bmul                                            3     2      1      87
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (11) ___llmod                                            10     2      8     311
                                             12 COMMON     2     2      0
                                              5 BANK0      8     0      8
                           i1___bmul (ARG)
                          i1___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (9) _EXTI_On_Off_CallBack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Start_Conv
   _Elements_Init
   _GPIO_Init
   _Get_EEPROM_Data
     _EEPROM_Read
       _I2c_Read
       _I2c_Send_NAck
       _I2c_Start
       _I2c_Stop
       _I2c_WaitAck
       _I2c_Write
     ___awmod
   _I2c_Init
   _Mode_Init
   _On_Off_Init
   _SSD_Init
   _Scheduler_Init
     _memset
   _Scheduler_Start
     _Scheduler_Task1 *
       _SSD_MainFunction
         _SSD_SelectDigit
           ___awdiv
           ___awmod
         _SSD_SelectDisplay
           _SSD_Blink
             ___wmul
     _Scheduler_Task2 *
       _ADC_Conv_MainFunction
         _ADC_Value_Ready_CallBack
           _Temperature_Calc
             _Average_Value
               ___lldiv
               ___lwmod
             ___flmul
               __Umul8_16
               ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___lwmod
             ___xxtofl
       _Buttons_MainFunction
       _Elements_MainFunction
         _LED_Control
           _LED_BLINKING
             ___wmul
     _Scheduler_Task3 *
       _Mode_MainFunction
         _Start_Setting_Timer
           ___wmul
       _Set_EEPROM_Data
         _EEPROM_Write
           _I2c_Start
           _I2c_Stop
           _I2c_WaitAck
           _I2c_Write
     ___bmul *
   _Timer0_Init

 _myISR (ROOT)
   _EXTI_On_Off_CallBack
   _Timer0_CallBack
     _Scheduler_ActivateTask
       ___llmod
         i1___bmul (ARG)
         i1___lldiv (ARG)
           i1___bmul (ARG)
       i1___bmul
       i1___lldiv
         i1___bmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      D       D       9       13.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1D      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     25      3A       5       72.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A5      12        0.0%
ABS                  0      0      A5       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Jul 17 07:10:21 2020

                                   pc 0002                        ___bmul@product 0037  
                                  l21 0A1F                                    l30 09EC  
                                  _BF 04A0                                    l25 08FA  
                                  l33 090C                                    l74 0CE1  
                                  l85 056D                                    l98 08DB  
                        ___awdiv@sign 003B                                    fsr 0004  
                 ___wmul@multiplicand 0038                   __Umul8_16@word_mpld 003C  
                    ??_ADC_Start_Conv 0036                                   l113 0ED3  
                                 l202 0A3A                                   l131 0939  
                                 l213 0A3D                                   l206 0A3B  
                                 l118 0ED3                                   l144 07E2  
                                 l240 0BF5                                   l401 091F  
                                 l321 0991                                   l402 0922  
                                 l410 08E8                                   l138 0AFD  
                                 l146 07FE                                   l154 0FFF  
                                 l411 08E9                                   l308 0607  
                                 l405 08D5                                   l190 0A37  
                                 l502 0BBB                                   l342 0D24  
                                 l335 08CB                                   l408 08E2  
                                 l512 0F2E                                   l440 0A04  
                                 l249 0971                                   l194 0A38  
                                 l186 0A36                                   l603 0A92  
                                 l347 0B28                                   l339 0D11  
                                 l443 0B87                                   l436 0BF4  
                                 l292 08E1                                   l381 0910  
                                 l517 0F33                                   l605 0AAA  
                                 l198 0A39                                   l390 0961  
                                 l383 0914                                   l295 0981  
                                 l384 0917                                   l448 0D6C  
                                 l393 08FF                                   l378 0945  
                                 l298 092D                                   l387 0956  
                                 l396 0903                                   l492 0C62  
                                 l469 0952                                   l485 0E1B  
                                 l629 09D4                                   l494 0C68  
                                 l399 091B                                   l639 076A  
                                 l756 0702                                   l769 0E76  
                                 l796 0682                                   l885 0CA4  
                                 l789 0699                                   l799 0699  
                                 l992 040B                                   l998 0377  
                                 _PEN 048A                                   _SEN 0488  
                                 _SSD 004A                                   fsr0 0004  
                                 indf 0000                          ___awmod@sign 003B  
                        ?_LED_Control 0070                          ___flmul@aexp 00E1  
                        ___flmul@bexp 00E6                          ___flmul@sign 00E0  
                        ___flmul@temp 00EB                          ___flmul@prod 00E7  
                        ___fltol@exp1 00EE                                  l1011 0AC1  
                                l1004 03FF                                  l1013 0AD3  
                                l1050 049D                                  l1036 0430  
                                l1038 04C7                                  l1057 0A5F  
                                l1049 0491                                  l3101 0AB0  
                                l3103 0AB7                                  l3113 04CB  
                                l3105 0ABB                                  l3201 0077  
                                l3051 0703                                  l3131 053D  
                                l3115 04D3                                  l3107 0ACA  
                                l3211 008F                                  l3203 007F  
                                l3141 0AA0                                  l3133 0A84  
                                l3061 0729                                  l3053 0715  
                                l3125 050F                                  l3117 04F4  
                                l3109 0ACF                                  l3301 03AC  
                                l3221 00AB                                  l3213 0094  
                                l3205 0084                                  l3143 0AA6  
                                l3135 0A88                                  l3071 075C  
                                l3063 0732                                  l3055 0718  
                                l3127 0533                                  l3119 050C  
                                l3311 03E3                                  l3303 03B2  
                                l3231 00D8                                  l3223 00B0  
                                l3215 0099                                  l3207 008A  
                                l3137 0A8C                                  l3401 0C2E  
                                l3065 0744                                  l3057 0721  
                                l3073 0762                                  l3081 0C74  
                                l3129 0537                                  l3321 03F8  
                                l3313 03E5                                  l3305 03BF  
                                l3241 017A                                  l3233 00E5  
                                l3225 00B5                                  l3217 00A1  
                                l3209 008E                                  l3161 064A  
                                l3153 0622                                  l3139 0A99  
                                l3411 0C5B                                  l3403 0C4C  
                                l3067 0752                                  l3059 0725  
                                l3091 0C93                                  l3083 0C7B  
                                l3323 0403                                  l3315 03EB  
                                l3307 03CA                                  l3251 01F0  
                                l3243 0196                                  l3235 010C  
                                l3219 00A3                                  l3171 0661  
                                l3163 064E                                  l3155 063B  
                                l3147 0608                                  l3331 0418  
                                l3421 06A1                                  l3413 0C60  
                                l3405 0C51                                  l3069 0753  
                                l3093 0C9A                                  l3085 0C7F  
                                l3077 0C69                                  l3317 03F3  
                                l3309 03D9                                  l3261 029E  
                                l3253 020D                                  l3245 019F  
                                l3237 0128                                  l3229 00BE  
                                l3181 0687                                  l3173 066C  
                                l3157 063E                                  l3149 0617  
                                l3341 0446                                  l3333 0428  
                                l3501 07D3                                  l3431 06B5  
                                l3423 06A6                                  l3407 0C52  
                                l3415 0C64                                  l3087 0C83  
                                l3079 0C71                                  l3095 0CA0  
                                l3319 03F7                                  l3271 033A  
                                l3263 02D5                                  l3255 0230  
                                l3247 01B9                                  l3239 015E  
                                l3191 0062                                  l3183 068C  
                                l3159 0646                                  l3351 046C  
                                l3343 044A                                  l3335 0438  
                                l3327 040F                                  l3503 07D4  
                                l3441 06CB                                  l3433 06B7  
                                l3425 06A8                                  l3417 069A  
                                l3409 0C56                                  l3089 0C8D  
                                l3273 0343                                  l3281 0357  
                                l3265 02FB                                  l3257 024D  
                                l3249 01D6                                  l3193 0063  
                                l3185 0051                                  l3169 0656  
                                l3361 0495                                  l3353 0475  
                                l3345 0453                                  l3329 0414  
                                l3505 07E4                                  l3601 0F9A  
                                l3521 0B58                                  l3451 06EE  
                                l3443 06CF                                  l3435 06BD  
                                l3427 06AC                                  l3419 069D  
                                l3531 0B88                                  l3099 0AAE  
                                l3283 035B                                  l3275 0347  
                                l3267 0323                                  l3259 0284  
                                l3195 0068                                  l3187 0058  
                                l3179 0673                                  l3371 04BF  
                                l3363 049F                                  l3355 047C  
                                l3347 045A                                  l3339 0441  
                                l3611 0FC6                                  l3603 0FA0  
                                l3515 0AFE                                  l3523 0B5D  
                                l2725 0953                                  l2733 08FB  
                                l3461 0E1C                                  l2901 093A  
                                l3445 06E0                                  l3437 06C0  
                                l3453 06F4                                  l3429 06B1  
                                l3541 0BA0                                  l3533 0B8F  
                                l3293 037C                                  l3285 035C  
                                l3277 0348                                  l3269 032C  
                                l3197 006D                                  l3189 005E  
                                l3365 04B5                                  l3357 0487  
                                l3349 045E                                  l3381 0600  
                                l3509 07E9                                  l3613 0FCB  
                                l3605 0FA5                                  l3621 0FF1  
                                l3517 0B1C                                  l3525 0B63  
                                l2727 095A                                  l3471 0E2E  
                                l3463 0E1F                                  l2911 0944  
                                l2903 093E                                  l3455 06F9  
                                l3447 06E6                                  l3439 06C7  
                                l3551 0EE0                                  l3543 0BAE  
                                l3535 0B93                                  l3631 0DD1  
                                l3295 0381                                  l3287 0360  
                                l3279 0351                                  l3199 0075  
                                l3367 04BA                                  l3359 048B  
                                l3383 0606                                  l3375 0571  
                                l3391 0AF9                                  l3623 0FF9  
                                l3615 0FE7                                  l3607 0FBF  
                                l3519 0B24                                  l3527 0B70  
                                l2921 0931                                  l2729 0960  
                                l3393 090D                                  l3481 0E47  
                                l3473 0E33                                  l3465 0E23  
                                l2905 0941                                  l2913 08D6  
                                l3457 06FE                                  l3449 06E7  
                                l3561 0F1D                                  l3553 0F0C  
                                l3545 0BB3                                  l3537 0B96  
                                l3641 0DE0                                  l3633 0DD4  
                                l3297 038F                                  l3289 0374  
                                l3369 04BE                                  l3377 05DE  
                                l3385 0AD4                                  l3617 0FED  
                                l3625 0FFA                                  l3609 0FC5  
                                l3529 0B75                                  l3721 097C  
                                l3801 0CAF                                  l2923 0935  
                                l3395 0918                                  l3731 0D40  
                                l3483 0E4B                                  l3475 0E39  
                                l3491 0E68                                  l3467 0E28  
                                l2907 0942                                  l2915 0946  
                                l3563 0F1F                                  l3555 0F10  
                                l3571 0F2F                                  l3547 0ED4  
                                l3539 0B9C                                  l3643 0DE3  
                                l3635 0DD7                                  l3627 0DC3  
                                l3299 0393                                  l3379 05E8  
                                l3387 0AF2                                  l3619 0FEE  
                                l3723 0923                                  l3715 08DC  
                                l3811 0CC8                                  l3803 0CB4  
                                l3397 08D3                                  l3741 0D64  
                                l3733 0D45                                  l3725 0D28  
                                l3493 0E6D                                  l3485 0E55  
                                l3477 0E3C                                  l3469 0E2A  
                                l2909 0943                                  l2925 08C8  
                                l2917 0950                                  l3565 0F24  
                                l3557 0F15                                  l3549 0EDB  
                                l3645 0DE6                                  l3637 0DDA  
                                l3629 0DCE                                  l3653 0DEE  
                                l3581 09E9                                  l3573 09D5  
                                l3389 0AF6                                  l3661 0CEC  
                                l3717 0972                                  l2941 0982  
                                l3813 0CCD                                  l3805 0CB9  
                                l2871 08F2                                  l2919 092E  
                                l3399 08E2                                  l3743 0D69  
                                l3735 0D50                                  l3727 0D2D  
                                l3495 0E72                                  l3487 0E5B  
                                l3479 0E43                                  l3567 0F28  
                                l3559 0F19                                  l3647 0DE9  
                                l3639 0DDD                                  l3575 09DB  
                                l3591 0E9B                                  l3583 0E77  
                                l3671 0D0D                                  l3663 0CF9  
                                l3719 0977                                  l3751 09C6  
                                l2943 098C                                  l3815 0CD2  
                                l3807 0CBE                                  l2873 08F8  
                                l2881 0A2E                                  l3737 0D55  
                                l3729 0D33                                  l3489 0E62  
                                l3569 0F2C                                  l3649 0DEC  
                                l3577 09E0                                  l3593 0EA1  
                                l3585 0E85                                  l3681 0D21  
                                l3673 0D0F                                  l3665 0CFF  
                                l3753 09CA                                  l2945 0990  
                                l3817 0CD7                                  l3809 0CC3  
                                l2883 0A32                                  l2875 0A20  
                                l3739 0D5F                                  l3771 0BEB  
                                l3763 0BBC                                  l3499 0904  
                                l3579 09E4                                  l3595 0EAD  
                                l3587 0E91                                  l3683 0D23  
                                l3675 0D15                                  l3667 0D03  
                                l3659 0CE4                                  l3691 0A01  
                                l3755 09CC                                  l3747 09C1  
                                l2869 0A05                                  l2877 0A26  
                                l3773 0BF0                                  l3765 0BC7  
                                l3693 0A41                                  l3597 0EBA  
                                l3589 0E96                                  l3677 0D19  
                                l3669 0D09                                  l3685 09ED  
                                l3757 09CE                                  l3749 09C2  
                                l2879 0A2A                                  l3767 0BCD  
                                l3695 0A46                                  l3775 0962  
                                l3599 0EC6                                  l3871 07F3  
                                l3679 0D1F                                  l3687 09F3  
                                l3759 09D3                                  l3791 0C26  
                                l3783 0BF8                                  l2897 0A3C  
                                l3769 0BD3                                  l3697 0A4D  
                                l3873 0DF8                                  l3689 09F7  
                                l3785 0C01                                  l3777 0BF5  
                                l3699 0A51                                  l3787 0C1B  
                                l3789 0C22                                  l3797 0CA5  
                                l3799 0CAA                    __size_of_I2c_Start 000B  
                  __size_of_I2c_Write 0006                        ??_LED_BLINKING 0040  
                                u4000 0068                                  u4001 0067  
                                u4010 006D                                  u4011 006C  
                                u4020 008E                                  u4101 0188  
                                u4021 008D                                  u4102 018F  
                                u4030 0094                                  u4103 0196  
                                u4031 0093                                  u3320 095A  
                                u4200 0309                                  u4040 0099  
                                u5000 0ECE                                  u3321 0959  
                                u4121 01C8                                  u4041 0098  
                                u5001 0ECA                                  u3330 0903  
                                u4122 01CF                                  u4050 00B0  
                                u3331 0902                                  u4211 0315  
                                u4131 01FF                                  u4123 01D6  
                                u4115 0198                                  u4051 00AF  
                                u4300 0381                                  u4212 031C  
                                u4132 0206                                  u4060 00B5  
                                u5020 0FA0                                  u5100 0D15  
                                u4301 0380                                  u4213 0323  
                                u4205 0304                                  u4133 020D  
                                u4061 00B4                                  u5021 0F9F  
                                u5101 0D14                                  u4310 0393  
                                u5014 0ED1                                  u5030 0FA5  
                                u5110 0D19                                  u4311 0392  
                                u4151 023F                                  u4071 011A  
                                u5031 0FA4                                  u5111 0D18  
                                u5200 0BD3                                  u4320 03A2  
                                u4240 0347                                  u4152 0246  
                                u4072 0121                                  u4400 0459  
                                u5040 0FBF                                  u5120 0D1F  
                                u5201 0BD2                                  u4241 0346  
                                u4225 0325                                  u4161 0276  
                                u4153 024D                                  u4145 020F  
                                u4081 0136                                  u4073 0128  
                                u4401 0458                                  u5041 0FBE  
                                u5121 0D1E                                  u5210 0BEB  
                                u4330 03BF                                  u4162 027D  
                                u4082 013D                                  u5050 0FE7  
                                u5130 09F3                                  u5211 0BEA  
                                u4331 03BE                                  u4235 033C  
                                u4171 02AD                                  u4163 0284  
                                u4091 016C                                  u4083 0144  
                                u5051 0FE6                                  u5131 09F2  
                                u3540 08F8                                  u5140 0A5F  
                                u4340 03D9                                  u4260 035B  
                                u4180 02E1                                  u4172 02B4  
                                u4092 0173                                  u4420 047B  
                                u4500 0606                                  u5060 0CEC  
                                u5220 0C01                                  u3541 08F7  
                                u5141 0A5E                                  u4341 03D8  
                                u4325 039D                                  u4261 035A  
                                u4173 02BB                                  u4093 017A  
                                u4421 047A                                  u4501 0605  
                                u5045 0FBB                                  u5061 0CEB  
                                u5221 0C00                                  u3710 0762  
                                u4350 03F7                                  u4270 0360  
                                u4510 0AF2                                  u5070 0CFF  
                                u5230 0C2C                                  u3711 0761  
                                u4351 03F6                                  u4335 03BB  
                                u4271 035F                                  u4255 034A  
                                u4191 02ED                                  u4415 046D  
                                u4511 0AF1                                  u5055 0FE3  
                                u5071 0CFE                                  u5231 0C2B  
                                u4520 0914                                  u4600 06BD  
                                u3720 0C71                                  u3800 0ACF  
                                u4280 0374                                  u4192 02F4  
                                u4440 048B                                  u4360 0414  
                                u5080 0D03                                  u4521 0913  
                                u4601 06BC                                  u3705 0754  
                                u3721 0C70                                  u3801 0ACE  
                                u4345 03D5                                  u4281 0373  
                                u4193 02FB                                  u4185 02DC  
                                u4441 048A                                  u4361 0413  
                                u5081 0D02                                  u4530 091F  
                                u3650 0715                                  u4290 037B  
                                u4450 0491                                  u4370 0418  
                                u5090 0D09                                  u5170 09C6  
                                u4531 091E                                  u3651 0714  
                                u4291 037A                                  u4451 0490  
                                u4435 0480                                  u4371 0417  
                                u4515 0AEE                                  u5091 0D08  
                                u5171 09C5                                  u4540 08E8  
                                u4700 0E39                                  u4620 06CF  
                                u3740 0C83                                  u3900 0632  
                                u4460 0495                                  u4380 0438  
                                u5180 09D3                                  u4541 08E7  
                                u4701 0E38                                  u4621 06CE  
                                u3741 0C82                                  u4461 0494  
                                u4381 0437                                  u5181 09D2  
                                u5190 0BCD                                  u4550 0C4C  
                                u3670 0729                                  u3750 0C8D  
                                u3910 064E                                  u4470 04AA  
                                u5191 0BCC                                  u4615 06C1  
                                u4551 0C4B                                  u3671 0728  
                                u3751 0C8C                                  u3735 0C75  
                                u3831 0524                                  u3815 04DF  
                                u3911 064D                                  u4720 0E4B  
                                u4640 06E0                                  u4560 0C51  
                                u4800 0BB3                                  u3840 053D  
                                u3832 0525                                  u3920 0655  
                                u4480 04BA                                  u4721 0E4A  
                                u4641 06DF                                  u4561 0C50  
                                u4801 0BB2                                  u3665 071A  
                                u3841 053C                                  u3833 052B  
                                u3825 0512                                  u3921 0654  
                                u3905 062D                                  u4481 04B9  
                                u4730 0E55                                  u4810 0EDB  
                                u3850 0A8C                                  u4570 0C60  
                                u3690 0744                                  u3770 0CA0  
                                u3834 052C                                  u4490 04BE  
                                u4731 0E54                                  u4715 0E3D  
                                u4635 06D0                                  u4811 0EDA  
                                u3851 0A8B                                  u4571 0C5F  
                                u4555 0C48                                  u3691 0743  
                                u3771 0C9F                                  u3755 0C89  
                                u3835 0532                                  u4491 04BD  
                                u4475 04A5                                  u4395 044B  
                                u4660 06F4                                  u4580 06A1  
                                u4820 0EE0                                  u3836 0533  
                                u3780 0ABB                                  u3940 066B  
                                _RCEN 048B                                  u4661 06F3  
                                u4645 06DC                                  u4581 06A0  
                                u4821 0EDF                                  u3685 072B  
                                u3765 0C94                                  u3781 0ABA  
                                u3941 066A                                  u4750 0E68  
                                u4670 06F9                                  u4590 06AC  
                                u4830 0F15                                  u3950 0672  
                                u4910 0E91                                  u4751 0E67  
                                u4735 0E51                                  u4671 06F8  
                                u4655 06E8                                  u4591 06AB  
                                u4831 0F14                                  u3695 0740  
                                u3951 0671                                  u3935 0657  
                                u4911 0E90                                  u4760 0E6D  
                                u4680 0E23                                  u4840 0F24  
                                u3880 0AA6                                  u4920 0E96  
                                u4761 0E6C                                  u4745 0E5C  
                                u4681 0E22                                  u4841 0F23  
                                u3881 0AA5                                  u3865 0A93  
                                u4921 0E95                                  u4905 0E88  
                                u4690 0E2E                                  u3970 0687  
                                u3890 0617                                  u4850 09DB  
                                u4930 0EA1                                  u4770 0B1C  
                                u4691 0E2D                                  u3875 0A9A  
                                u3795 0AC2                                  u3971 0686  
                                u3891 0616                                  u4851 09DA  
                                u4931 0EA0                                  u4771 0B1B  
                                u4780 0B8F                                  u3980 068C  
                                u4860 09E0                                  u4781 0B8E  
                                u3981 068B                                  u3965 0677  
                                u4861 09DF                                  u4790 0B9C  
                                u3990 0062                                  u4870 09E4  
                                u4950 0EAD                                  u4791 0B9B  
                                u3991 0061                                  u4871 09E3  
                                u4951 0EAC                                  u4775 0B18  
                                u4960 0EB5                                  u4961 0EB1  
                                u4945 0EA4                                  u4890 0E85  
                                u4891 0E84                                  u4885 0E7C  
                                u4990 0EC6                                  u4974 0EB8  
                                u4991 0EC5                                  u4985 0EBD  
                                _TMR0 0001                                  _Mode 0045  
           __size_of_Temperature_Calc 009A                     i1___lldiv@divisor 0073  
                                _main 0CA5              ??_Scheduler_ActivateTask 007E  
                                btemp 007E                     i1___lldiv@counter 0024  
                    __end_of_ADC_Init 0A20                                  start 0012  
                  __size_of_GPIO_Init 001E                         ??_On_Off_Init 0036  
                   ___bmul@multiplier 0038                      ??_Scheduler_Init 003C  
                    __end_of_I2c_Init 0946                      __end_of_I2c_Read 0962  
                    __end_of_I2c_Stop 0923                            _Enable_SSD 004F  
                   ??_Timer0_CallBack 007E                  __end_of_EEPROM_Write 0B88  
                     _Average_Nvalues 0059                         ___fltol@sign1 00ED  
                               ?_main 0070                                 _ACKEN 048C  
                               _ACKDT 048D                       __end_of___awdiv 0703  
                     __end_of___awmod 0E77                       __end_of___flmul 040C  
                     __end_of___fltol 069A                       __end_of___lldiv 076B  
                     ___awdiv@divisor 0036                       __end_of___llmod 0DC3  
                               i1l106 09BD                                 i1l231 0A77  
                               i1l324 0B54                                 i1l228 0A6B  
                               i1l255 0F99                       __end_of___lwmod 0CA5  
                               i1l629 09A6                                 i1l639 07D2  
                               i1l825 0DC2                       ___awdiv@counter 003A  
                               _PORTA 0005                                 _PORTB 0006  
                               _PORTC 0007                                 _PORTD 0008  
                               _SSPM0 00A0                                 _SSPM1 00A1  
                               _SSPM2 00A2                                 _SSPM3 00A3  
                               _TRISA 0085                                 _TRISB 0086  
                               _TRISC 0087                                 _TRISD 0088  
                               _SSPEN 00A5                                 _SSPIF 0063  
                  i1___lldiv@dividend 0077                                 _myISR 0A60  
                               fpbase 0047                      __end_of_SSD_Init 0953  
          Average_Value@Avrage_Values 0044                      __end_ofi1___bmul 09A7  
                               pclath 000A                    __size_of_SSD_Blink 003B  
                               status 0003                      EEPROM_Write@Addr 0037  
                               wtemp0 007E                      EEPROM_Write@Data 0038  
                  __size_ofi1___lldiv 0068                       _Set_EEPROM_Data 09ED  
                    ?_Get_EEPROM_Data 0070                  __size_of_EEPROM_Read 0048  
          ??_ADC_Value_Ready_CallBack 0045          __size_of_Start_Setting_Timer 002B  
                     __initialization 0015                     ??_Scheduler_Task1 0044  
                   ??_Scheduler_Task2 0045                     ??_Scheduler_Task3 0042  
                        __end_of_main 0CE4                     ??_Scheduler_Start 0045  
                     _SSD_SelectDigit 0ED4                    i1___lldiv@quotient 0020  
                   __end_of_I2c_Start 0918               ??_Elements_MainFunction 00D3  
                   __end_of_I2c_Write 08D6                   __end_of_On_Off_Init 08DC  
                              ??_main 0045                     __end_of_GPIO_Init 0A3E  
                __size_of_I2c_WaitAck 0008                                ?_myISR 0070  
                    ___llmod@dividend 0029                                _ADRESL 009E  
                    ___awdiv@dividend 0038                                i1l2741 0D83  
                              i1l3701 0F34                                i1l2751 0DB4  
                              i1l2743 0D87                                i1l2735 0D6D  
                              i1l3711 0F8F                                i1l2745 0D8B  
                              i1l2737 0D77                                i1l2753 0DBA  
                              i1l2761 0780                                i1l3713 0F93  
                              i1l2747 0D9D                                i1l2739 0D7A  
                              i1l2771 07AC                                i1l2763 0789  
                              i1l3707 0F37                                i1l2749 0DAB  
                              i1l2773 07BA                                i1l2765 078D  
                              i1l2757 076B                                i1l3709 0F89  
                              i1l3821 0A64                                i1l2791 099E  
                              i1l2783 0993                                i1l2775 07BB  
                              i1l2767 0791                                i1l2759 077D  
                              i1l3823 0A65                                i1l2793 09A0  
                              i1l2785 0994                                i1l2777 07C4  
                              i1l2769 079A                                i1l3825 0A6F  
                              i1l2971 09BB                                i1l2963 09A7  
                              i1l2795 09A5                                i1l2787 0998  
                              i1l2779 07CA                                i1l3827 0A70  
                              i1l3819 0A60                                i1l2965 09AF  
                              i1l2789 099C                                i1l3829 0A72  
                              i1l2967 09B4                                i1l2969 09B6  
                              i1l3793 0B29                                i1l3795 0B39  
                              _INTEDG 040E                                u340_20 077D  
                              u340_21 077C                                u341_25 0782  
                              u334_20 0D77                                u342_20 0791  
                              u334_21 0D76                                u342_21 0790  
                              u335_25 0D7C                                u343_25 0793  
                              u360_20 09AF                                u336_20 0D8B  
                              u344_20 07AC                                u360_21 09AE  
                              u336_21 0D8A                                u344_21 07AB  
                              u344_25 07A8                                u361_20 09B4  
                              u337_20 0D9D                                u361_21 09B3  
                              u337_21 0D9C                                u337_25 0D99  
                              u345_25 07BC                                u362_20 09BB  
                              u346_20 07CA                                u362_21 09BA  
                              u346_21 07C9                                u338_25 0DAC  
                              u339_20 0DBA                                u347_20 0998  
                              u515_20 0F89                                u339_21 0DB9  
                              u347_21 0997                                u515_21 0F88  
                              u348_20 09A5                                u516_20 0F99  
                              u524_20 0A64                                u348_21 09A4  
                              u516_21 0F98                                u524_21 0A63  
                              u525_20 0A6F                                u525_21 0A6E  
                              _SSPADD 0093                                _SSPBUF 0013  
                    __end_of__fptable 0051                      __end_of___xxtofl 04C8  
     __size_of_Scheduler_ActivateTask 0066                    __size_of_Mode_Init 0004  
                       ??_Timer0_Init 0036          __end_of_EXTI_On_Off_CallBack 09BE  
                              ___bmul 09BE         __size_of_Buttons_MainFunction 005D  
                              ___wmul 0A84                             ??___awdiv 003A  
                           ??___awmod 003A                             ??___flmul 00DB  
                           ??___fltol 0194                             ??___lldiv 003E  
                           ??___llmod 007C                             ??___lwmod 003A  
                          _Tempreture 0049                                _memset 0A3E  
                __end_of_LED_BLINKING 0AFE                      ___awdiv@quotient 003C  
                     ___awmod@divisor 0036                       ___awmod@counter 003A  
   Scheduler_ActivateTask@IntityIndex 0031                     __end_of_SSD_Blink 0C69  
      __size_of_ADC_Conv_MainFunction 0018              __end_of_SSD_MainFunction 0E1C  
                              fptable 0042         __end_of_ADC_Conv_MainFunction 09ED  
                   __end_ofi1___lldiv 07D3                                fptotal 0006  
                  __size_of__Umul8_16 0029                             ?_ADC_Init 0070  
                              saved_w 007E                  __size_of_LED_Control 002C  
    Scheduler_ActivateTask@SystemTick 002D               __end_of_Set_EEPROM_Data 0A05  
                           ?_I2c_Init 0070                             ?_I2c_Read 0070  
                           ?_I2c_Stop 0070                 __end_of_Elements_Init 093A  
                        ___xxtofl@arg 0040                          ___xxtofl@exp 003F  
                        ___xxtofl@val 0036                      _Temperature_Calc 056E  
             __end_of__initialization 003E                            ___fltol@f1 0190  
             __end_of_SSD_SelectDigit 0F34                 __size_of_EEPROM_Write 0033  
                 ___bmul@multiplicand 0036                           _On_Off_Init 08D6  
                      __pcstackCOMMON 0070                          __pidataBANK0 08CC  
                       __end_of_myISR 0A84                   __end_of_Timer0_Init 0992  
                           ?_SSD_Init 0070                             ?i1___bmul 0070  
              _Scheduler_ActivateTask 0F34        Start_Setting_Timer@Peroid_Task 003E  
               __end_of_I2c_Send_NAck 0904                        _OPTION_REGbits 0081  
                   __end_of_Mode_Init 08CC                            ??_ADC_Init 0036  
               __end_of_Average_Value 056E                      i1___bmul@product 0071  
                             ??_myISR 0032                            ??_I2c_Init 0036  
                          ??_I2c_Read 0036                          _EEPROM_Write 0B55  
                          __pbssBANK0 0045                            __pbssBANK1 00A0  
                          ??_I2c_Stop 0036                       _Timer0_CallBack 0B29  
                   __end_of__Umul8_16 0AD4                            __pmaintext 0CA5  
                             ?___bmul 0036                               ?___wmul 0036  
                          __pintentry 0004                               ?_memset 0036  
                          ??_SSD_Init 0036                            ??i1___bmul 0071  
             LED_BLINKING@Task_Peroid 003E                             ?___xxtofl 0036  
                 _Start_Setting_Timer 0AFE                  _EXTI_On_Off_CallBack 09A7  
                    ?_Set_EEPROM_Data 0070                            __stringtab 0800  
                     _Scheduler_Task1 08DC                       _Scheduler_Task2 0972  
                     _Scheduler_Task3 0923                       _Scheduler_Start 0BF5  
                             _Buttons 004D                      ?_SSD_SelectDigit 0070  
                         _Timer0_Init 0982                  ?_Start_Setting_Timer 003C  
               __size_of_LED_BLINKING 002A                       __size_of___bmul 0017  
                             ___awdiv 069A  SSD_SelectDigit@Enable_Digit_Selector 0056  
                             ___awmod 0E1C                               ___flmul 0051  
                             ___fltol 0608                               ___lldiv 0703  
                     __size_of___wmul 0027                               ___llmod 0D6D  
                             ___lwmod 0C69                           _Temperature 0051  
                     __size_of_memset 0022        __size_of_Elements_MainFunction 0066  
                             __ptext1 0982                               __ptext2 0BF5  
                             __ptext3 09BE                               __ptext4 0972  
                             __ptext5 08DC                               __ptext6 0923  
                             __ptext7 09ED                               __ptext8 0B55  
                             __ptext9 0CE4           Start_Setting_Timer@Timer_Ms 003C  
       __end_of_Elements_MainFunction 1000                             _I2c_Start 090D  
                           _I2c_Write 08D0                            ??___xxtofl 003A  
                    ___awmod@dividend 0038                   i1___bmul@multiplier 0072  
               ?_EXTI_On_Off_CallBack 0070               __end_of_Timer0_CallBack 0B55  
                             clrloop0 08EB                             _GPIO_Init 0A20  
                end_of_initialization 003E               __size_of_ADC_Start_Conv 0009  
                        _LED_BLINKING 0AD4                         ??_EEPROM_Read 0037  
                             memset@c 0036                               memset@n 0038  
                             memset@p 003A                       ___lldiv@divisor 0036  
               ??_Start_Setting_Timer 0040                       ___lldiv@counter 0043  
            __size_of_Get_EEPROM_Data 0039                  SSD_Blink@Task_Peroid 003E  
            __end_of_Temperature_Calc 0608                         ??_I2c_WaitAck 0036  
                          ?_I2c_Start 0070                            ?_I2c_Write 0070  
             __size_of_Scheduler_Init 0010                     ?_SSD_MainFunction 0070  
                       ___xxtofl@sign 003E               __end_of_Scheduler_Task1 08E2  
             __end_of_Scheduler_Task2 0982               __end_of_Scheduler_Task3 092E  
   __size_of_ADC_Value_Ready_CallBack 0009                             _SSD_Blink 0C2E  
           ?_ADC_Value_Ready_CallBack 0070          __end_of_Buttons_MainFunction 0ED4  
             __end_of_Scheduler_Start 0C2E                    ??_SSD_MainFunction 0042  
                           i1___lldiv 076B                     __size_of_ADC_Init 001B  
                          ?_GPIO_Init 0070                   LED_BLINKING@Counter 0058  
                         ___flmul@grs 00E2                     __size_of_I2c_Init 000C  
                   __size_of_I2c_Read 000F             Temperature_Calc@ADC_VALUE 00EF  
                   __size_of_I2c_Stop 000B                     _Scheduler_Intitys 0806  
                 LED_BLINKING@Time_Ms 003C                          ?_On_Off_Init 0070  
                 __end_of_EEPROM_Read 0D6D               ?_Scheduler_ActivateTask 002D  
                      __end_of___bmul 09D5                        __end_of___wmul 0AAB  
                      __end_of_memset 0A60                     __size_of_SSD_Init 000D  
                   __size_ofi1___bmul 0015                         ??_LED_Control 0042  
                 start_initialization 0015                ??_EXTI_On_Off_CallBack 0070  
                          ?_SSD_Blink 003C                 _ADC_Conv_MainFunction 09D5  
                   SSD_Blink@Times_Ms 003C                     _Mode_MainFunction 0CE4  
                          ?i1___lldiv 0073                      ?_Timer0_CallBack 0070  
                           _Mode_Init 08C8                     _SSD_SelectDisplay 0B88  
                 __end_of_I2c_WaitAck 08EA                    ?_Mode_MainFunction 0070  
                  ?_SSD_SelectDisplay 0070             __end_of_Scheduler_Intitys 0815  
                     ___llmod@divisor 0025                       ___llmod@counter 007D  
                 ??_Mode_MainFunction 0042                   ??_SSD_SelectDisplay 0042  
      __end_of_Scheduler_ActivateTask 0F9A                              ??___bmul 0037  
                            ??___wmul 003A                             __Umul8_16 0AAB  
                         __pdataBANK0 0056                              ??_memset 003A  
              __size_of_Elements_Init 000C                           ??_I2c_Start 0036  
                         ??_I2c_Write 0036             __end_of_Mode_MainFunction 0D25  
                           ___flmul@a 00D7                             ___flmul@b 00D3  
                   ??_Get_EEPROM_Data 003C                             ___latbits 0002  
                       __pcstackBANK0 0020                         __pcstackBANK1 00D3  
                       __pcstackBANK3 0190             __end_of_SSD_SelectDisplay 0BBC  
                    ?_Scheduler_Task1 0070                      ?_Scheduler_Task2 0070  
                    ?_Scheduler_Task3 0070                      ?_Scheduler_Start 0070  
                   __size_of__fptable 000F                     __size_of___xxtofl 00BC  
                          ?_Mode_Init 0070                           ??_GPIO_Init 0036  
                      _ADC_Start_Conv 08F2                   __end_of_LED_Control 07FF  
                         _EEPROM_Data 004C                           _EEPROM_Read 0D25  
              __size_of_I2c_Send_NAck 0009                          ?_Timer0_Init 0070  
              SSD_SelectDigit@Digit_1 0048                SSD_SelectDigit@Digit_2 0047  
                           __pfunctab 0042                  _Buttons_MainFunction 0E77  
              __size_of_Average_Value 00A6                              ?___awdiv 0036  
                            ?___awmod 0036                              ?___flmul 00D3  
                            ?___fltol 0190                              ?___lldiv 0036  
                            ?___llmod 0025                            ?__Umul8_16 0036  
                            ?___lwmod 0036                             __pstrings 0800  
                      _Scheduler_Init 0962                           _I2c_WaitAck 08E2  
              ?_ADC_Conv_MainFunction 0070                              _ADC_Info 0050  
                            _ADC_Init 0A05                           ??_SSD_Blink 0040  
              __end_of_ADC_Start_Conv 08FB                           ??i1___lldiv 007B  
                      __size_of_myISR 0024                              _I2c_Init 093A  
                            _I2c_Read 0953                              _I2c_Stop 0918  
                   interrupt_function 0004                         _Elements_Init 092E  
                      ___wmul@product 003A                             clear_ram0 08EA  
               i1___bmul@multiplicand 0070              __size_of_Set_EEPROM_Data 0018  
               ?_Buttons_MainFunction 0070      __end_of_ADC_Value_Ready_CallBack 090D  
                __size_of_On_Off_Init 0006              __size_of_SSD_SelectDigit 0060  
              __end_of_Scheduler_Init 0972                              _SSD_Init 0946  
                            i1___bmul 0992                            _ADCON0bits 001F  
                         __stringbase 0805                            _ADCON1bits 009F  
                   ___wmul@multiplier 0036                     ?_Temperature_Calc 0070  
          __size_of_Mode_MainFunction 0041                         _I2c_Send_NAck 08FB  
               _Elements_MainFunction 0F9A                    ??_Temperature_Calc 0198  
                         _LED_Control 07D3            __size_of_SSD_SelectDisplay 0034  
                     ?_ADC_Start_Conv 0070                         _Average_Value 04C8  
                         ??_Mode_Init 0036                      SSD_Blink@Counter 0057  
                      ?_Elements_Init 0070           __end_of_Start_Setting_Timer 0B29  
           __size_of_SSD_MainFunction 0059                              _Tick_Num 00C8  
                         ??__Umul8_16 0038                      __size_of___awdiv 0069  
                    __size_of___awmod 005B                      __size_of___flmul 03BB  
                    __size_of___fltol 0092                      __size_of___lldiv 0068  
                    __size_of___llmod 0056                      __size_of___lwmod 003C  
                     ?_Scheduler_Init 0070                    __end_of__stringtab 0806  
                      ?_I2c_Send_NAck 0070                              __fptable 0042  
                            ___xxtofl 040C                        ?_Average_Value 0044  
                            __ptext10 0AFE                              __ptext11 0F9A  
                            __ptext20 0051                              __ptext12 07D3  
                            __ptext21 0AAB                              __ptext13 0AD4  
                            __ptext30 069A                              __ptext22 04C8  
                            __ptext14 0E77                              __ptext31 0962  
                            __ptext23 0C69                              __ptext15 09D5  
                            __ptext40 08D0                              __ptext32 0A3E  
                            __ptext24 0703                              __ptext16 0904  
                            __ptext41 08E2                              __ptext33 0946  
                            __ptext25 0DC3                              __ptext17 056E  
                            __ptext50 0A60                              __ptext42 0918  
                            __ptext34 08D6                              __ptext26 0B88  
                            __ptext18 040C                              __ptext51 0B29  
                            __ptext43 090D                              __ptext35 08C8  
                            __ptext27 0C2E                              __ptext19 0608  
                            __ptext52 0F34                              __ptext44 08FB  
                            __ptext36 093A                              __ptext28 0A84  
                            __ptext53 076B                              __ptext45 0953  
                            __ptext37 0BBC                              __ptext29 0ED4  
                            __ptext54 0992                              __ptext46 0A20  
                            __ptext38 0E1C                              __ptext55 0D6D  
                            __ptext47 092E                              __ptext39 0D25  
                            __ptext56 09A7                              __ptext48 08F2  
                            __ptext49 0A05                         ?_EEPROM_Write 0037  
                       __size_of_main 003F                ??_Buttons_MainFunction 0036  
                            _temb_val 00A0                         _Avrage_buffer 00CC  
                __size_of_Timer0_Init 0010                       _Get_EEPROM_Data 0BBC  
                        I2c_Read@data 0036                     ??_Set_EEPROM_Data 0039  
            _ADC_Value_Ready_CallBack 0904                ?_Elements_MainFunction 0070  
                          _LED_Status 004E                         I2c_Write@data 0036  
                          _INTCONbits 000B                     ??_SSD_SelectDigit 003E  
                            memset@p1 003B         __size_of_EXTI_On_Off_CallBack 0017  
                      ??_EEPROM_Write 0038                       ??_Elements_Init 0036  
                            intlevel1 0042                      ___lwmod@dividend 0038  
                        ?_EEPROM_Read 0070                      ___lldiv@dividend 003A  
          Scheduler_Start@IntityIndex 019C             _Scheduler_ActivationFlags 00D0  
            __size_of_Timer0_CallBack 002C                             stringcode 0800  
             ??_ADC_Conv_MainFunction 0045                       ??_I2c_Send_NAck 0036  
              __Umul8_16@multiplicand 0036                          ?_I2c_WaitAck 0070  
                     ??_Average_Value 00D3                      ___lldiv@quotient 003F  
                     ___lwmod@divisor 0036                       ___lwmod@counter 003A  
                            stringdir 0800                              stringtab 0800  
                  Average_Value@Value 00D8                    Average_Value@index 00D9  
                       ?_LED_BLINKING 003C              __size_of_Scheduler_Task1 0006  
            __size_of_Scheduler_Task2 0010              __size_of_Scheduler_Task3 000B  
                  fp__Scheduler_Task1 004B                    fp__Scheduler_Task2 004E  
                  fp__Scheduler_Task3 0048                       EEPROM_Read@Addr 0037  
                     EEPROM_Read@Data 004B              __size_of_Scheduler_Start 0039  
                __Umul8_16@multiplier 003E                      _SSD_MainFunction 0DC3  
             __end_of_Get_EEPROM_Data 0BF5                     __Umul8_16@product 003A  
